#jinja2: trim_blocks:True
# {{ ansible_managed }}
#

--------------------------------------------------------
--  File created - Wednesday-June-26-2019   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Type INTEGER_ARR_PARAM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "INTEGER_ARR_PARAM" IS TABLE OF NUMBER(10);

/
--------------------------------------------------------
--  DDL for Type RULE_ARR_PARAM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "RULE_ARR_PARAM" IS TABLE OF VARCHAR2(100);

/
--------------------------------------------------------
--  DDL for Type RULE_ARR_VALUE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "RULE_ARR_VALUE" IS TABLE OF VARCHAR2(4000); 

/
--------------------------------------------------------
--  DDL for Type T_STRING_AGG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "T_STRING_AGG" AS OBJECT
(
  g_string  VARCHAR2(32767),

  STATIC FUNCTION ODCIAggregateInitialize(sctx  IN OUT  t_string_agg)
    RETURN NUMBER,

  MEMBER FUNCTION ODCIAggregateIterate(self   IN OUT  t_string_agg,
                                       value  IN      VARCHAR2 )
     RETURN NUMBER,

  MEMBER FUNCTION ODCIAggregateTerminate(self         IN   t_string_agg,
                                         returnValue  OUT  VARCHAR2,
                                         flags        IN   NUMBER)
    RETURN NUMBER,

  MEMBER FUNCTION ODCIAggregateMerge(self  IN OUT  t_string_agg,
                                     ctx2  IN      t_string_agg)
    RETURN NUMBER
);
/
CREATE OR REPLACE EDITIONABLE TYPE BODY "T_STRING_AGG" IS
  STATIC FUNCTION ODCIAggregateInitialize(sctx  IN OUT  t_string_agg)
    RETURN NUMBER IS
  BEGIN
    sctx := t_string_agg(NULL);
    RETURN ODCIConst.Success;
  END;

  MEMBER FUNCTION ODCIAggregateIterate(self   IN OUT  t_string_agg,
                                       value  IN      VARCHAR2 )
    RETURN NUMBER IS
  BEGIN
    SELF.g_string := self.g_string || ',' || value;
    RETURN ODCIConst.Success;
  END;

  MEMBER FUNCTION ODCIAggregateTerminate(self         IN   t_string_agg,
                                         returnValue  OUT  VARCHAR2,
                                         flags        IN   NUMBER)
    RETURN NUMBER IS
  BEGIN
    returnValue := RTRIM(LTRIM(SELF.g_string, ','), ',');
    RETURN ODCIConst.Success;
  END;

  MEMBER FUNCTION ODCIAggregateMerge(self  IN OUT  t_string_agg,
                                     ctx2  IN      t_string_agg)
    RETURN NUMBER IS
  BEGIN
    SELF.g_string := SELF.g_string || ',' || ctx2.g_string;
    RETURN ODCIConst.Success;
  END;
END;

/
--------------------------------------------------------
--  DDL for Type VPN_ARR_PARAM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "VPN_ARR_PARAM" IS TABLE OF VARCHAR2(100);

/
--------------------------------------------------------
--  DDL for Type V_TABLE_GROUPS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "V_TABLE_GROUPS" IS TABLE OF NUMBER(10);

/
--------------------------------------------------------
--  DDL for Sequence NAS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "NAS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence RADACCT_REC_TEMP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RADACCT_REC_TEMP_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 500 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence RADACCT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RADACCT_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 500 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence RADCHECK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RADCHECK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence RADGROUPCHECK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RADGROUPCHECK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence RADGROUPREPLY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RADGROUPREPLY_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence RADPOSTAUTH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RADPOSTAUTH_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 500 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence RADREPLY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RADREPLY_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence RADUSERGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RADUSERGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence REALMGROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "REALMGROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence REALMS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "REALMS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ACL_DEVICE
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_ACL_DEVICE"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_AGENTS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_AGENTS"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_APN
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_APN"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_APNS_ALARMS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_APNS_ALARMS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ATR_MONITORING
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_ATR_MONITORING"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_CLIENT_PROFILES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_CLIENT_PROFILES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_CONSOLE_LOG
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_CONSOLE_LOG"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_CPROF_CRITERIA
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_CPROF_CRITERIA"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_CRYPTO_MAP
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_CRYPTO_MAP"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_CRYPTO_POLICY_P2
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_CRYPTO_POLICY_P2"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DEVICE_INTERFACES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_DEVICE_INTERFACES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DEVICE_ROUTES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_DEVICE_ROUTES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DEVICE_SUBNETS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_DEVICE_SUBNETS"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_EVENT_HISTORY
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_EVENT_HISTORY"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_FIREWALL_MAN_PARAMS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_FIREWALL_MAN_PARAMS"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_FIREWALL_REQUESTS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_FIREWALL_REQUESTS"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  CYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_FIREWALL_REQ_PARAM
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_FIREWALL_REQ_PARAM"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_FIREWALL_RULES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_FIREWALL_RULES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_FW_PROFILES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_FW_PROFILES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_FW_RULES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_FW_RULES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_GGSN_NODE
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_GGSN_NODE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_GROUPID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_GROUPID"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_GROUP_POLICY
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_GROUP_POLICY"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_GROUP_POOL_SUBNET_PRE
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_GROUP_POOL_SUBNET_PRE"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_GRP_INTERVAL
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_GRP_INTERVAL"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_GSUBNET_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_GSUBNET_ID"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_HISTORY_ENTITY
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_HISTORY_ENTITY"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IPSEC_P1
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_IPSEC_P1"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_LOG_M2M
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_LOG_M2M"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_M2M_ACCOUNT_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_M2M_ACCOUNT_ID"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_MAIL_NOTIFICATIONS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_MAIL_NOTIFICATIONS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_MAIN_POOL_SUBNET
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_MAIN_POOL_SUBNET"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_MASTER_DATA_CLIENTS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_MASTER_DATA_CLIENTS"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_MASTER_DATA_SERVICES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_MASTER_DATA_SERVICES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_MASTER_DATA_VPN
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_MASTER_DATA_VPN"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_OBJECT_GROUP
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_OBJECT_GROUP"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_OBJECT_NETWORK
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_OBJECT_NETWORK"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_OBJ_PROPERTIES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_OBJ_PROPERTIES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_POLICY_GROUP
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_POLICY_GROUP"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PUBLIC_IP_DETAIL_HISTORY
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_PUBLIC_IP_DETAIL_HISTORY"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PUBLIC_IP_POOL_SUBNET
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_PUBLIC_IP_POOL_SUBNET"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_QUARANTINE_ADDRESS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_QUARANTINE_ADDRESS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REQUESTS_HISTORY
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_REQUESTS_HISTORY"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REQUEST_STATUS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_REQUEST_STATUS"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REQUEST_TYPES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_REQUEST_TYPES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_RPROF_CRITERIA
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_RPROF_CRITERIA"  MINVALUE 0 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_RULES_PROFILES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_RULES_PROFILES"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  CYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_RULE_STATUS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_RULE_STATUS"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_STATIC_ROUTES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_STATIC_ROUTES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_SUBLEVEL_POOL
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_SUBLEVEL_POOL"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_SYSTEM_DEVICES
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_SYSTEM_DEVICES"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_THRESDET_ID_THD
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_THRESDET_ID_THD"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_THRESHOLD_ID_THRESHOLD
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_THRESHOLD_ID_THRESHOLD"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_TRANSFORM_SET
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_TRANSFORM_SET"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_TSET_CRYPTO
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_TSET_CRYPTO"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_TUNNEL_GROUP
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_TUNNEL_GROUP"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_VPN_POOL_SUBNET
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_VPN_POOL_SUBNET"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence SEQ_VPN_STATUS
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_VPN_STATUS"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence VPN_RADACCT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "VPN_RADACCT_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Table ACCOUNT_API_CREDENTIALS
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_API_CREDENTIALS" 
   (	"ID_ACCOUNT" NUMBER(10,0), 
	"USERNAME" VARCHAR2(200 BYTE), 
	"PASSWORD" VARCHAR2(200 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table ACCOUNT_FUNCTIONS
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_FUNCTIONS" 
   (	"ID_ACCOUNT" NUMBER(10,0), 
	"ID_FUNCTION" NUMBER(10,0), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table ACCOUNT_NOTIFY_URL
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_NOTIFY_URL" 
   (	"ID_ACCOUNT" NUMBER(10,0), 
	"URL" VARCHAR2(500 BYTE), 
	"ACTIVE" NUMBER(1,0) DEFAULT 0, 
	"PRIORITY" NUMBER(2,0) DEFAULT 1, 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"USER_URL" VARCHAR2(50 BYTE), 
	"PASSWORD_URL" VARCHAR2(50 BYTE), 
	"TYPE" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table ACCOUNT_PARAMS
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_PARAMS" 
   (	"ID_ACCOUNT" NUMBER(10,0), 
	"PARAM_KEY" VARCHAR2(50 BYTE), 
	"PARAM_VALUE" VARCHAR2(200 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table ACL_DEVICE
--------------------------------------------------------

  CREATE TABLE "ACL_DEVICE" 
   (	"ID_ACL" NUMBER(10,0), 
	"ID_DEVICE" NUMBER(10,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"TYPE" VARCHAR2(100 BYTE), 
	"FLAG_LOAD" NUMBER(1,0) DEFAULT 0, 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"DESCR" VARCHAR2(2000 BYTE), 
	"FLAG_REMOVING" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table ACL_DEVICE_ROUTE
--------------------------------------------------------

  CREATE TABLE "ACL_DEVICE_ROUTE" 
   (	"ID_ACL" NUMBER(10,0), 
	"ID_DEV_ROUTE" NUMBER(10,0), 
	"TYPE" VARCHAR2(20 BYTE), 
	"CREATION_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table ACL_DEV_ROUTE_TYPES
--------------------------------------------------------

  CREATE TABLE "ACL_DEV_ROUTE_TYPES" 
   (	"TYPE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table AGENTS
--------------------------------------------------------

  CREATE TABLE "AGENTS" 
   (	"ID_AGENT" NUMBER(10,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"STATUS" VARCHAR2(20 BYTE), 
	"HOSTNAME" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table AGENT_STATUS
--------------------------------------------------------

  CREATE TABLE "AGENT_STATUS" 
   (	"STATUS_CODE" VARCHAR2(20 BYTE), 
	"DESCR" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table APN
--------------------------------------------------------

  CREATE TABLE "APN" 
   (	"ID_APN" NUMBER(10,0), 
	"APN_NAME" VARCHAR2(50 BYTE), 
	"CREATION_DATE" DATE, 
	"MOBILE_ACCT_TBL" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table APNS_ALARMS
--------------------------------------------------------

  CREATE TABLE "APNS_ALARMS" 
   (	"ID_ALARM" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"DESC_ALARM" VARCHAR2(4000 BYTE), 
	"SEVERITY" VARCHAR2(20 BYTE), 
	"ACK_FLAG" NUMBER(1,0) DEFAULT 0, 
	"ACK_USER" VARCHAR2(50 BYTE), 
	"LAST_ALARM_DATE" DATE, 
	"ALARM_COUNTER" NUMBER(10,0), 
	"OBJECT_ID" NUMBER(10,0), 
	"OBJECT_TYPE" VARCHAR2(20 BYTE), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table APN_ACCOUNT_MAP
--------------------------------------------------------

  CREATE TABLE "APN_ACCOUNT_MAP" 
   (	"ID_ACCOUNT" NUMBER(10,0), 
	"ID_APN" NUMBER(10,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table APN_PARAMS
--------------------------------------------------------

  CREATE TABLE "APN_PARAMS" 
   (	"ID_APN" NUMBER(10,0), 
	"PARAM_KEY" VARCHAR2(50 BYTE), 
	"PARAM_VALUE" VARCHAR2(200 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table AREA_DESC
--------------------------------------------------------

  CREATE TABLE "AREA_DESC" 
   (	"ID_AREA" NUMBER(5,0), 
	"AREA_NAME" VARCHAR2(50 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table AREA_MAP
--------------------------------------------------------

  CREATE TABLE "AREA_MAP" 
   (	"ID_MAP" NUMBER(10,0), 
	"ID_AREA" NUMBER(5,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table ATR_MONITORING
--------------------------------------------------------

  CREATE TABLE "ATR_MONITORING" 
   (	"ID_GROUP" NUMBER(10,0), 
	"INTERVAL" VARCHAR2(12 BYTE), 
	"AVG_SIM" NUMBER(12,2) DEFAULT 0, 
	"PEAK_SIM" NUMBER(10,0) DEFAULT 0, 
	"SERVICE_SIM" NUMBER(10,0) DEFAULT 0, 
	"TARGET_SIM" NUMBER(10,0) DEFAULT 0, 
	"TOT_SIM" NUMBER(10,0) DEFAULT 0, 
	"MONTH_INT" NUMBER(2,0) DEFAULT 0, 
	"CL_MOD_GROUP" NUMBER(5,0) DEFAULT 0, 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"SERVICE_SIM_PERC" NUMBER(3,0) DEFAULT 0, 
	"TARGET_SIM_PERC" NUMBER(3,0) DEFAULT 0
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY LIST ("MONTH_INT") 
  SUBPARTITION BY LIST ("CL_MOD_GROUP") 
  SUBPARTITION TEMPLATE ( 
    SUBPARTITION "CL_MOD_GROUP_PRT_0" VALUES ( 0 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_GROUP_PRT_1" VALUES ( 1 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_GROUP_PRT_2" VALUES ( 2 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_GROUP_PRT_3" VALUES ( 3 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_GROUP_PRT_4" VALUES ( 4 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_GROUP_PRT_5" VALUES ( 5 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_GROUP_PRT_6" VALUES ( 6 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_GROUP_PRT_7" VALUES ( 7 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_GROUP_PRT_8" VALUES ( 8 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_GROUP_PRT_9" VALUES ( 9 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_GROUP_PRT_10" VALUES ( 10 )
  TABLESPACE "{{ item.0.tablespace_data }}"  ) 
 (PARTITION "JAN_PRT"  VALUES (1) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "FEB_PRT"  VALUES (2) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MAR_PRT"  VALUES (3) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "APR_PRT"  VALUES (4) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MAY_PRT"  VALUES (5) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "JUN_PRT"  VALUES (6) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "JUL_PRT"  VALUES (7) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "AUG_PRT"  VALUES (8) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "SEP_PRT"  VALUES (9) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "NOV_PRT"  VALUES (11) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_GROUP_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "OCT_PRT"  VALUES (10) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_GROUP_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "DEC_PRT"  VALUES (12) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table ATR_MONITORING_OLD
--------------------------------------------------------

  CREATE TABLE "ATR_MONITORING_OLD" 
   (	"ID_ATR_MONITORING" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"ACTUAL_RATIO" NUMBER(10,3), 
	"TARGET_RATIO" NUMBER(10,3), 
	"TOTAL_RESOURCES" NUMBER(10,0), 
	"TOT_SIM" NUMBER(10,0), 
	"TOT_SIM_CONN1TIME" NUMBER(10,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CLIENT_ACCOUNT_MAP
--------------------------------------------------------

  CREATE TABLE "CLIENT_ACCOUNT_MAP" 
   (	"ID_ACCOUNT" NUMBER(10,0), 
	"ID_CLIENT" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CLIENT_FUNCTIONS
--------------------------------------------------------

  CREATE TABLE "CLIENT_FUNCTIONS" 
   (	"ID_CLIENT" NUMBER(10,0), 
	"ID_FUNCTION" NUMBER(10,0), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CLIENT_FUNCTIONS_PARAMS
--------------------------------------------------------

  CREATE TABLE "CLIENT_FUNCTIONS_PARAMS" 
   (	"ID_CLIENT" NUMBER(10,0), 
	"ID_FUNCTION" NUMBER(10,0), 
	"PARAM_KEY" VARCHAR2(100 BYTE), 
	"PARAM_VALUE" VARCHAR2(2000 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CLIENT_PROFILES
--------------------------------------------------------

  CREATE TABLE "CLIENT_PROFILES" 
   (	"ID_CPROFILE" NUMBER(10,0), 
	"NAME" VARCHAR2(200 BYTE), 
	"ID_CLIENT" NUMBER(10,0), 
	"USED_COUNTER" NUMBER(3,0), 
	"SYSTEM_FLAG" NUMBER(1,0), 
	"STATUS" VARCHAR2(30 BYTE), 
	"CLOSING_FLAG" NUMBER(1,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"ID_FUNCTION" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CLIENT_REPORT_PARAMS
--------------------------------------------------------

  CREATE TABLE "CLIENT_REPORT_PARAMS" 
   (	"ID_CLIENT" NUMBER(10,0), 
	"ID_REQUEST" NUMBER(28,0), 
	"ID_PARAM" NUMBER(10,0), 
	"PARAM" VARCHAR2(100 BYTE), 
	"PARAM_VALUE" VARCHAR2(2000 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CONSOLE_LOG
--------------------------------------------------------

  CREATE TABLE "CONSOLE_LOG" 
   (	"ID_LOG" NUMBER(10,0), 
	"ID_USER" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(100 BYTE), 
	"LAST_NAME" VARCHAR2(100 BYTE), 
	"ID_CLIENT" NUMBER(10,0), 
	"HOST_IP" VARCHAR2(20 BYTE), 
	"CREATION_DATE" DATE, 
	"CLOSING_DATE" DATE, 
	"CODE_CONSOLE" VARCHAR2(50 BYTE) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CONTRACTS
--------------------------------------------------------

  CREATE TABLE "CONTRACTS" 
   (	"ID_GROUP" NUMBER(10,0), 
	"CONTRACT" VARCHAR2(200 BYTE), 
	"MSISDN_CNT" NUMBER(10,0) DEFAULT 0, 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CPROF_CRITERIA
--------------------------------------------------------

  CREATE TABLE "CPROF_CRITERIA" 
   (	"ID_CPROFILE" NUMBER(10,0), 
	"ID_CRITERIA" NUMBER(10,0), 
	"CTYPE" VARCHAR2(30 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"ID_RULE" NUMBER(10,0), 
	"STATUS" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CPROF_CRITERIA_PARAMS
--------------------------------------------------------

  CREATE TABLE "CPROF_CRITERIA_PARAMS" 
   (	"ID_CRITERIA" NUMBER(10,0), 
	"PARAM_KEY" VARCHAR2(100 BYTE), 
	"PARAM_VALUE" VARCHAR2(2000 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CPROF_FWPROF_NAV_MAP
--------------------------------------------------------

  CREATE TABLE "CPROF_FWPROF_NAV_MAP" 
   (	"ID_CPROFILE" NUMBER(10,0), 
	"ID_FW_PROFILE" NUMBER(10,0), 
	"NAVIGATION_CRITERIA" VARCHAR2(30 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CPROF_GRP_MAP
--------------------------------------------------------

  CREATE TABLE "CPROF_GRP_MAP" 
   (	"ID_CPROFILE" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CRITERIA_TYPES
--------------------------------------------------------

  CREATE TABLE "CRITERIA_TYPES" 
   (	"CTYPE" VARCHAR2(30 BYTE), 
	"DESCR" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CRYPTO_MAP
--------------------------------------------------------

  CREATE TABLE "CRYPTO_MAP" 
   (	"ID_CM" NUMBER(10,0), 
	"ID_DEVICE" NUMBER(10,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"ID_INTERFACE" NUMBER(10,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"TYPE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CRYPTO_POLICY_P2
--------------------------------------------------------

  CREATE TABLE "CRYPTO_POLICY_P2" 
   (	"ID_CPP" NUMBER(10,0), 
	"ID_CM" NUMBER(10,0), 
	"SEQ_NUM" NUMBER(5,0), 
	"ID_ACL" NUMBER(10,0), 
	"PFS_FLAG" NUMBER(1,0), 
	"TYPE" VARCHAR2(100 BYTE), 
	"FLAG_LOAD" NUMBER(1,0) DEFAULT 0, 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"FLAG_REMOVING" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table CRYPTO_POLICY_PEER
--------------------------------------------------------

  CREATE TABLE "CRYPTO_POLICY_PEER" 
   (	"ID_CPP" NUMBER(10,0), 
	"ID_SUBNET" NUMBER(10,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table DATAMART_RADACCT
--------------------------------------------------------

  CREATE TABLE "DATAMART_RADACCT" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"USERNAME" VARCHAR2(64 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STARTTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STOPTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table DEVICES_CONN_MODES
--------------------------------------------------------

  CREATE TABLE "DEVICES_CONN_MODES" 
   (	"CMODE" VARCHAR2(20 BYTE), 
	"PORT" NUMBER(5,0), 
	"DESCR" VARCHAR2(50 BYTE), 
	"SSL" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table DEVICE_INTERFACES
--------------------------------------------------------

  CREATE TABLE "DEVICE_INTERFACES" 
   (	"ID_INTERFACE" NUMBER(10,0), 
	"ID_DEVICE" NUMBER(10,0), 
	"ID_SUBNET" NUMBER(10,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"TYPE" VARCHAR2(100 BYTE), 
	"ID_PROP_VLAN" VARCHAR2(100 BYTE), 
	"FLAG_IKE1" VARCHAR2(100 BYTE), 
	"FLAG_IKE2" VARCHAR2(100 BYTE), 
	"DEFAULT4IPSEC" NUMBER(1,0) DEFAULT 0, 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"FLAG_MGMT" NUMBER(1,0) DEFAULT 0, 
	"ID_IFACE_FATHER" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table DEVICE_ROUTES
--------------------------------------------------------

  CREATE TABLE "DEVICE_ROUTES" 
   (	"ID_DEV_ROUTE" NUMBER(10,0), 
	"ID_FROM" NUMBER(10,0), 
	"TYPE_FROM" VARCHAR2(20 BYTE), 
	"ID_TO" NUMBER(10,0), 
	"TYPE_TO" VARCHAR2(20 BYTE), 
	"FLAG_GW" NUMBER(1,0), 
	"METRIC" NUMBER(3,0), 
	"ID_DEVICE" NUMBER(10,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table DEVICE_SUBNETS
--------------------------------------------------------

  CREATE TABLE "DEVICE_SUBNETS" 
   (	"ID_SUBNET" NUMBER(10,0), 
	"FQDN" VARCHAR2(4000 BYTE), 
	"IP_PREFIX" VARCHAR2(20 BYTE), 
	"NETMASK" VARCHAR2(20 BYTE), 
	"IP_START" VARCHAR2(20 BYTE), 
	"IP_END" VARCHAR2(20 BYTE), 
	"ID_DEVICE" NUMBER(10,0), 
	"SPECIAL" VARCHAR2(10 BYTE), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table ERROR_CODE
--------------------------------------------------------

  CREATE TABLE "ERROR_CODE" 
   (	"CODE_ERROR" NUMBER(5,0), 
	"ORACLE_CODE" NUMBER(5,0), 
	"DESCRIPTION" VARCHAR2(100 BYTE), 
	"ERROR_FAMILY" VARCHAR2(20 BYTE) DEFAULT 'GENERIC'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table EVENT_HISTORY
--------------------------------------------------------

  CREATE TABLE "EVENT_HISTORY" 
   (	"ID_EVENT" NUMBER(10,0), 
	"ID_CLIENT" NUMBER(10,0), 
	"ID_VPN" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"EVENT_TYPE" VARCHAR2(20 BYTE), 
	"EVENT_LEVEL" VARCHAR2(20 BYTE), 
	"EVENT_MSG" VARCHAR2(4000 BYTE), 
	"CREATION_DATE" DATE, 
	"ID_RULE_PROFILE" NUMBER(10,0), 
	"COUNTER" NUMBER(10,0) DEFAULT 0, 
	"UPDATE_DATE" DATE DEFAULT sysdate, 
	"ID_FW_RULE" NUMBER(20,0), 
	"ID_FW_PROFILE" NUMBER(20,0), 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"MONTH_CRTDATE" NUMBER(2,0) DEFAULT 0
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY RANGE ("MONTH_CRTDATE") 
  SUBPARTITION BY LIST ("CL_MOD_CLIENT") 
  SUBPARTITION TEMPLATE ( 
    SUBPARTITION "CL_MOD_PRT_0" VALUES ( 0 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_1" VALUES ( 1 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_2" VALUES ( 2 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_3" VALUES ( 3 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_4" VALUES ( 4 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_5" VALUES ( 5 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_6" VALUES ( 6 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_7" VALUES ( 7 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_8" VALUES ( 8 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_9" VALUES ( 9 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_10" VALUES ( 10 )
  TABLESPACE "{{ item.0.tablespace_data }}"  ) 
 (PARTITION "JAN_PRT"  VALUES LESS THAN (2) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "FEB_PRT"  VALUES LESS THAN (3) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MAR_PRT"  VALUES LESS THAN (4) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "APR_PRT"  VALUES LESS THAN (5) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MAY_PRT"  VALUES LESS THAN (6) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "JUN_PRT"  VALUES LESS THAN (7) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "JUL_PRT"  VALUES LESS THAN (8) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "AUG_PRT"  VALUES LESS THAN (9) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "SEP_PRT"  VALUES LESS THAN (10) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "OCT_PRT"  VALUES LESS THAN (11) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "NOV_PRT"  VALUES LESS THAN (12) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "DEC_PRT"  VALUES LESS THAN (MAXVALUE) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table EVENT_HISTORY_SAVE
--------------------------------------------------------

  CREATE TABLE "EVENT_HISTORY_SAVE" 
   (	"ID_EVENT" NUMBER(10,0), 
	"ID_CLIENT" NUMBER(10,0), 
	"ID_VPN" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"EVENT_TYPE" VARCHAR2(20 BYTE), 
	"EVENT_LEVEL" VARCHAR2(20 BYTE), 
	"EVENT_MSG" VARCHAR2(4000 BYTE), 
	"CREATION_DATE" DATE, 
	"ID_RULE_PROFILE" NUMBER(10,0), 
	"COUNTER" NUMBER(10,0), 
	"UPDATE_DATE" DATE, 
	"ID_FW_RULE" NUMBER(20,0), 
	"ID_FW_PROFILE" NUMBER(20,0), 
	"CL_MOD_CLIENT" NUMBER(5,0), 
	"MONTH_CRTDATE" NUMBER(2,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table EVENT_HISTORY_STAGING
--------------------------------------------------------

  CREATE TABLE "EVENT_HISTORY_STAGING" 
   (	"ID_EVENT" NUMBER(10,0), 
	"ID_CLIENT" NUMBER(10,0), 
	"ID_VPN" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"EVENT_TYPE" VARCHAR2(20 BYTE), 
	"EVENT_LEVEL" VARCHAR2(20 BYTE), 
	"EVENT_MSG" VARCHAR2(4000 BYTE), 
	"CREATION_DATE" DATE, 
	"ID_RULE_PROFILE" NUMBER(10,0), 
	"COUNTER" NUMBER(10,0) DEFAULT 0, 
	"UPDATE_DATE" DATE DEFAULT sysdate, 
	"ID_FW_RULE" NUMBER(20,0), 
	"ID_FW_PROFILE" NUMBER(20,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table EVENT_TYPES
--------------------------------------------------------

  CREATE TABLE "EVENT_TYPES" 
   (	"TYPE_CODE" VARCHAR2(20 BYTE), 
	"DESCR" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FIREWALL_CATEGORIES
--------------------------------------------------------

  CREATE TABLE "FIREWALL_CATEGORIES" 
   (	"CAT_ID" NUMBER(10,0), 
	"CAT_NAME" VARCHAR2(100 BYTE), 
	"CAT_GROUP_ID" VARCHAR2(3 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FIREWALL_CAT_GROUPS
--------------------------------------------------------

  CREATE TABLE "FIREWALL_CAT_GROUPS" 
   (	"CAT_GROUP_ID" VARCHAR2(3 BYTE), 
	"CAT_GROUP_NAME" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FIREWALL_MANUAL
--------------------------------------------------------

  CREATE TABLE "FIREWALL_MANUAL" 
   (	"ID_FW_REQ" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"ID_REQUEST" NUMBER(28,0), 
	"FLAG_EXECUTED" NUMBER(1,0), 
	"FLAG_MANAGED" NUMBER(1,0), 
	"ERROR_DESCR" VARCHAR2(4000 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FIREWALL_MAN_PARAMS
--------------------------------------------------------

  CREATE TABLE "FIREWALL_MAN_PARAMS" 
   (	"ID_FW_REQ" NUMBER(10,0), 
	"ID_PARAM" NUMBER(10,0), 
	"PARAM" VARCHAR2(100 BYTE), 
	"PARAM_VALUE" VARCHAR2(2000 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FIREWALL_REQUESTS
--------------------------------------------------------

  CREATE TABLE "FIREWALL_REQUESTS" 
   (	"ID_FW_REQ" NUMBER(10,0), 
	"ID_RULE_PROFILE" NUMBER(10,0), 
	"ID_CLIENT" NUMBER(10,0), 
	"ID_AGENT" NUMBER(10,0), 
	"STATUS" VARCHAR2(20 BYTE), 
	"RETRY_COUNT" NUMBER(3,0), 
	"JMS_QUEUE_NAME" VARCHAR2(50 BYTE), 
	"ID_REQUEST" NUMBER(28,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"ID_DEVICE" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FIREWALL_REQ_PARAMS
--------------------------------------------------------

  CREATE TABLE "FIREWALL_REQ_PARAMS" 
   (	"ID_FW_REQ" NUMBER(10,0), 
	"ID_PARAM" NUMBER(10,0), 
	"PARAM" VARCHAR2(100 BYTE), 
	"PARAM_VALUE" VARCHAR2(4000 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FIREWALL_REQ_STATUS
--------------------------------------------------------

  CREATE TABLE "FIREWALL_REQ_STATUS" 
   (	"FW_STATUS_CODE" VARCHAR2(20 BYTE), 
	"DESCR" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FIREWALL_RULES_DEV
--------------------------------------------------------

  CREATE TABLE "FIREWALL_RULES_DEV" 
   (	"RULE_STATUS_CODE" VARCHAR2(20 BYTE), 
	"ID_FW_POLICY" VARCHAR2(90 BYTE), 
	"INTERNAL" NUMBER(1,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"FLAG_POLICY" NUMBER(1,0), 
	"FLAG_NAT" NUMBER(1,0) DEFAULT 0, 
	"FLAG_CAT" NUMBER(1,0) DEFAULT 0, 
	"FLAG_ANTIVIRUS" NUMBER(1,0) DEFAULT 0, 
	"FLAG_URL_FILTER" NUMBER(1,0) DEFAULT 0, 
	"CHECK_DATE" DATE, 
	"FLAG_IN_VERIFY" NUMBER(1,0) DEFAULT 0, 
	"ID_RULE" NUMBER(20,0), 
	"ID_RULE_PROFILE" NUMBER(10,0), 
	"ID_ORDER" NUMBER(5,0), 
	"FLAG_REMOVING" NUMBER(1,0), 
	"ID_DEVICE" NUMBER(10,0) DEFAULT 0, 
	"ID_FW_RULE" NUMBER(20,0), 
	"SSL_INSPECTION" NUMBER(1,0) DEFAULT 0, 
	"AVOID_CHECK" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FUNCTIONS_SERVICES
--------------------------------------------------------

  CREATE TABLE "FUNCTIONS_SERVICES" 
   (	"ID_FUNCTION" NUMBER(10,0), 
	"ID_SERVICE" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FWPROF_RPROF_MAP
--------------------------------------------------------

  CREATE TABLE "FWPROF_RPROF_MAP" 
   (	"ID_FW_PROFILE" NUMBER(10,0), 
	"ID_RULE_PROFILE" NUMBER(10,0), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FW_PROFILES
--------------------------------------------------------

  CREATE TABLE "FW_PROFILES" 
   (	"ID_FW_PROFILE" NUMBER(10,0), 
	"NAME" VARCHAR2(200 BYTE), 
	"ID_CLIENT" NUMBER(10,0), 
	"USED_COUNTER" NUMBER(3,0), 
	"SYSTEM_FLAG" NUMBER(1,0), 
	"STATUS" VARCHAR2(30 BYTE), 
	"CLOSING_FLAG" NUMBER(1,0), 
	"ID_FUNCTION" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"ID_FW_RULE_POLICY" NUMBER(10,0), 
	"IGNORE_RP_IDLE" NUMBER(1,0) DEFAULT 0, 
	"PROF_TYPE" VARCHAR2(30 BYTE) DEFAULT 'PROFILE_NAT'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FW_PROTOCOLS
--------------------------------------------------------

  CREATE TABLE "FW_PROTOCOLS" 
   (	"NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FW_RULES
--------------------------------------------------------

  CREATE TABLE "FW_RULES" 
   (	"ID_FW_PROFILE" NUMBER(10,0), 
	"ID_FW_RULE" NUMBER(20,0), 
	"RULE_STATUS_CODE" VARCHAR2(20 BYTE), 
	"INTERNAL" NUMBER(1,0), 
	"FLAG_POLICY" NUMBER(1,0), 
	"ID_ORDER" NUMBER(5,0), 
	"FLAG_REMOVING" NUMBER(1,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"SRC_ADDRESS" VARCHAR2(300 BYTE), 
	"SRC_TYPE" VARCHAR2(30 BYTE), 
	"DST_ADDRESS" VARCHAR2(300 BYTE), 
	"DST_TYPE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FW_RULES_PARAMS
--------------------------------------------------------

  CREATE TABLE "FW_RULES_PARAMS" 
   (	"ID_FW_RULE" NUMBER(20,0), 
	"PARAM_KEY" VARCHAR2(100 BYTE), 
	"PARAM_VALUE" VARCHAR2(2000 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table FW_SERVICES
--------------------------------------------------------

  CREATE TABLE "FW_SERVICES" 
   (	"NAME" VARCHAR2(30 BYTE), 
	"DETAIL" VARCHAR2(100 BYTE), 
	"PROTOCOLS" VARCHAR2(100 BYTE) DEFAULT 0, 
	"PORTS" VARCHAR2(100 BYTE) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table GGSN_NODE
--------------------------------------------------------

  CREATE TABLE "GGSN_NODE" 
   (	"ID_GGSN" NUMBER(10,0), 
	"ID_APN" NUMBER(10,0), 
	"GGSN_NAME" VARCHAR2(50 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"FLAG_VALID" NUMBER(1,0) DEFAULT 1, 
	"NAS_IDENTIFIER" VARCHAR2(100 BYTE) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table GGSN_TRAFFIC
--------------------------------------------------------

  CREATE TABLE "GGSN_TRAFFIC" 
   (	"TX_BYTE" NUMBER(19,0), 
	"RX_BYTE" NUMBER(19,0), 
	"THROUGHPUT_KBIT" NUMBER(20,0), 
	"TRAFFIC_TIME" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table GGSN_TRAFFIC_PEAK
--------------------------------------------------------

  CREATE TABLE "GGSN_TRAFFIC_PEAK" 
   (	"ID_GGSN_TP" NUMBER(10,0), 
	"THROUGHPUT_KBIT" NUMBER(20,0), 
	"TRAFFIC_TIME" DATE, 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table GROUP_POLICY
--------------------------------------------------------

  CREATE TABLE "GROUP_POLICY" 
   (	"ID_GP" NUMBER(10,0), 
	"ID_DEVICE" NUMBER(10,0), 
	"TYPE" VARCHAR2(100 BYTE), 
	"NAME" VARCHAR2(100 BYTE), 
	"ID_ACL_VPN_FILTER" NUMBER(10,0), 
	"FLAG_LOAD" NUMBER(1,0) DEFAULT 0, 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"FLAG_REMOVING" NUMBER(1,0), 
	"ID_ACL_SP_TUNNEL" NUMBER(10,0) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table GROUP_POOL_SUBNET
--------------------------------------------------------

  CREATE TABLE "GROUP_POOL_SUBNET" 
   (	"ID_GSUBNET" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"IP_PREFIX" VARCHAR2(30 BYTE), 
	"NETMASK" VARCHAR2(30 BYTE), 
	"FIRST_IP" VARCHAR2(30 BYTE), 
	"LAST_IP" VARCHAR2(30 BYTE), 
	"POOL_SIZE" NUMBER(10,0), 
	"CLOSING_FLAG" NUMBER(1,0), 
	"ID_CPROFILE" NUMBER(10,0), 
	"ID_FW_PROFILE" NUMBER(10,0), 
	"ID_GGSN" NUMBER(10,0) DEFAULT 1, 
	"RESIZE_FLAG" NUMBER(1,0) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table GROUP_POOL_SUBNET_PRE
--------------------------------------------------------

  CREATE TABLE "GROUP_POOL_SUBNET_PRE" 
   (	"ID_PRE_SUBNET" NUMBER(10,0), 
	"IP_PREFIX" VARCHAR2(30 BYTE), 
	"NETMASK" VARCHAR2(30 BYTE), 
	"FIRST_IP" VARCHAR2(30 BYTE), 
	"LAST_IP" VARCHAR2(30 BYTE), 
	"POOL_SIZE" NUMBER(10,0), 
	"FLAG_USED" NUMBER(1,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"ID_SUB" NUMBER(10,0), 
	"ID_CLIENT" NUMBER(10,0), 
	"FLAG_CONTIGUOUS" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table GRP_INTERVAL
--------------------------------------------------------

  CREATE TABLE "GRP_INTERVAL" 
   (	"ID_GROUP" NUMBER(10,0), 
	"ID_INTERVAL" NUMBER(10,0), 
	"DAY" VARCHAR2(100 BYTE), 
	"FROM_HOUR" NUMBER(2,0), 
	"TO_HOUR" NUMBER(2,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"TIMEZONE" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table GRP_VPN_MAP
--------------------------------------------------------

  CREATE TABLE "GRP_VPN_MAP" 
   (	"ID_GROUP" NUMBER(10,0), 
	"ID_VPN" NUMBER(10,0), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table HISTORY_ENTITY
--------------------------------------------------------

  CREATE TABLE "HISTORY_ENTITY" 
   (	"ID_HE" NUMBER(15,0), 
	"ID_EVENT" NUMBER(10,0), 
	"ENTITY" VARCHAR2(30 BYTE), 
	"KEY" VARCHAR2(200 BYTE), 
	"VALUE" VARCHAR2(2000 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table HISTORY_ENTITY_STAGING
--------------------------------------------------------

  CREATE TABLE "HISTORY_ENTITY_STAGING" 
   (	"ID_HE" NUMBER(15,0), 
	"ID_EVENT" NUMBER(10,0), 
	"ENTITY" VARCHAR2(30 BYTE), 
	"KEY" VARCHAR2(200 BYTE), 
	"VALUE" VARCHAR2(2000 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table IDGSUBNETS_TMP
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "IDGSUBNETS_TMP" 
   (	"ID_GROUP" NUMBER(10,0), 
	"ID_MSISDN" VARCHAR2(100 BYTE), 
	"ID_GSUBNET" NUMBER(10,0)
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table IPSEC_P1
--------------------------------------------------------

  CREATE TABLE "IPSEC_P1" 
   (	"ID_IPSEC" NUMBER(10,0), 
	"SEQ_NUM" NUMBER(5,0), 
	"TYPE" VARCHAR2(100 BYTE), 
	"ID_DEVICE" NUMBER(10,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table IP_ASSIGNED_TMP
--------------------------------------------------------

  CREATE TABLE "IP_ASSIGNED_TMP" 
   (	"ID_GROUP" NUMBER(10,0), 
	"FRAMEDIPADDRESS" VARCHAR2(30 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(64 BYTE), 
	"USERNAME" VARCHAR2(100 BYTE), 
	"LOCKED" NUMBER(1,0), 
	"FLAG_USED" NUMBER(1,0), 
	"ID_GSUBNET" NUMBER(10,0), 
	"ID_APN" NUMBER(10,0) DEFAULT 0, 
	"ID_GGSN" NUMBER(10,0) DEFAULT 0, 
	"TYPE_REQ" NUMBER(1,0) DEFAULT 0, 
	"FLAG_FIRST" NUMBER(1,0) DEFAULT 0, 
	"CL_MOD_GROUP" NUMBER(5,0) DEFAULT 0, 
	"CL_MOD_MSISDN" NUMBER(5,0) DEFAULT 0, 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE DEFAULT sysdate, 
	"PRIMARY_DNS" VARCHAR2(15 BYTE), 
	"SECONDARY_DNS" VARCHAR2(16 BYTE), 
	"CLR_PWD" VARCHAR2(100 BYTE), 
	"APNS_NAV" NUMBER(1,0), 
	"APNS_NAV_IP" VARCHAR2(30 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY LIST ("CL_MOD_GROUP") 
  SUBPARTITION BY LIST ("CL_MOD_MSISDN") 
  SUBPARTITION TEMPLATE ( 
    SUBPARTITION "CL_SIM_SIM_0" VALUES ( 0 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_SIM_SIM_1" VALUES ( 1 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_SIM_SIM_2" VALUES ( 2 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_SIM_SIM_3" VALUES ( 3 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_SIM_SIM_4" VALUES ( 4 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_SIM_SIM_5" VALUES ( 5 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_SIM_SIM_6" VALUES ( 6 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_SIM_SIM_7" VALUES ( 7 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_SIM_SIM_8" VALUES ( 8 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_SIM_SIM_9" VALUES ( 9 )
  TABLESPACE "{{ item.0.tablespace_data }}"  ) 
 (PARTITION "CL_GRP_PRT_0"  VALUES (0) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_GRP_PRT_1"  VALUES (1) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_GRP_PRT_2"  VALUES (2) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_GRP_PRT_3"  VALUES (3) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_GRP_PRT_4"  VALUES (4) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_GRP_PRT_5"  VALUES (5) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_GRP_PRT_6"  VALUES (6) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_GRP_PRT_7"  VALUES (7) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_GRP_PRT_8"  VALUES (8) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_GRP_PRT_9"  VALUES (9) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_GRP_PRT_10"  VALUES (10) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table LAST_CONNECTION
--------------------------------------------------------

  CREATE TABLE "LAST_CONNECTION" 
   (	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ID_RADACT" NUMBER(*,0), 
	"ID_RADACT_CLOSED" NUMBER(*,0), 
	"COUNTER" NUMBER(10,0) DEFAULT 0, 
	"REJECT_COUNTER" NUMBER(10,0) DEFAULT 0, 
	"LAST_ID_GROUP" NUMBER(10,0) DEFAULT 0, 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table LAST_CONN_FAIL
--------------------------------------------------------

  CREATE TABLE "LAST_CONN_FAIL" 
   (	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ID_RADPOSTAUTH" NUMBER(38,0), 
	"COUNTER" NUMBER(10,0), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table LAST_RADACCT
--------------------------------------------------------

  CREATE TABLE "LAST_RADACCT" 
   (	"MSISDN" VARCHAR2(100 BYTE), 
	"CL_MOD_MSISDN" NUMBER(5,0), 
	"ID_GGSN" NUMBER(10,0), 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTSESSIONID_CLOSED" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY LIST ("CL_MOD_MSISDN") 
 (PARTITION "MSISDN_PRT_0"  VALUES (0) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_1"  VALUES (1) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_2"  VALUES (2) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_3"  VALUES (3) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_4"  VALUES (4) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_5"  VALUES (5) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_6"  VALUES (6) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_7"  VALUES (7) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_8"  VALUES (8) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_9"  VALUES (9) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_10"  VALUES (10) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_11"  VALUES (11) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_12"  VALUES (12) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_13"  VALUES (13) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_14"  VALUES (14) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_15"  VALUES (15) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_16"  VALUES (16) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_17"  VALUES (17) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_18"  VALUES (18) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_19"  VALUES (19) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_20"  VALUES (20) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_21"  VALUES (21) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_22"  VALUES (22) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_23"  VALUES (23) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_24"  VALUES (24) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_25"  VALUES (25) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_26"  VALUES (26) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_27"  VALUES (27) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_28"  VALUES (28) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_29"  VALUES (29) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_30"  VALUES (30) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_31"  VALUES (31) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_32"  VALUES (32) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_33"  VALUES (33) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_34"  VALUES (34) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_35"  VALUES (35) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_36"  VALUES (36) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_37"  VALUES (37) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_38"  VALUES (38) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_39"  VALUES (39) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_40"  VALUES (40) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_41"  VALUES (41) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_42"  VALUES (42) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_43"  VALUES (43) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_44"  VALUES (44) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_45"  VALUES (45) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_46"  VALUES (46) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_47"  VALUES (47) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_48"  VALUES (48) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_49"  VALUES (49) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_50"  VALUES (50) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_51"  VALUES (51) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_52"  VALUES (52) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_53"  VALUES (53) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_54"  VALUES (54) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_55"  VALUES (55) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_56"  VALUES (56) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_57"  VALUES (57) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_58"  VALUES (58) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_59"  VALUES (59) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_60"  VALUES (60) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_61"  VALUES (61) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_62"  VALUES (62) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_63"  VALUES (63) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_64"  VALUES (64) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_65"  VALUES (65) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_66"  VALUES (66) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_67"  VALUES (67) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_68"  VALUES (68) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_69"  VALUES (69) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_70"  VALUES (70) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_71"  VALUES (71) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_72"  VALUES (72) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_73"  VALUES (73) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_74"  VALUES (74) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_75"  VALUES (75) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_76"  VALUES (76) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_77"  VALUES (77) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_78"  VALUES (78) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_79"  VALUES (79) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_80"  VALUES (80) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_81"  VALUES (81) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_82"  VALUES (82) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_83"  VALUES (83) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_84"  VALUES (84) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_85"  VALUES (85) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_86"  VALUES (86) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_87"  VALUES (87) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_88"  VALUES (88) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_89"  VALUES (89) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_90"  VALUES (90) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_91"  VALUES (91) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_92"  VALUES (92) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_93"  VALUES (93) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_94"  VALUES (94) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_95"  VALUES (95) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_96"  VALUES (96) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_97"  VALUES (97) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_98"  VALUES (98) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MSISDN_PRT_99"  VALUES (99) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table LIST_ID_FW_POLICY_TMP
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "LIST_ID_FW_POLICY_TMP" 
   (	"ID_FW_POLICY" VARCHAR2(90 BYTE)
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table LIST_REPORTS_TMP
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "LIST_REPORTS_TMP" 
   (	"NAME_REPORTS" VARCHAR2(90 BYTE)
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table LIST_SUBNET_TMP
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "LIST_SUBNET_TMP" 
   (	"RESULT" NUMBER, 
	"ERROR_CODE" NUMBER, 
	"ERROR_DESCR" VARCHAR2(300 BYTE), 
	"IP_PREFIX" VARCHAR2(50 BYTE), 
	"NETMASK" NUMBER, 
	"ID_PRE_SUBNET" NUMBER, 
	"TO_NAT" NUMBER, 
	"MSISDN_CNT" NUMBER, 
	"SUBNET_CNT" NUMBER, 
	"ID_CPROFILE" NUMBER(10,0), 
	"ID_FW_PROFILE" NUMBER(10,0)
   ) ON COMMIT DELETE ROWS ;
--------------------------------------------------------
--  DDL for Table LOG_M2M
--------------------------------------------------------

  CREATE TABLE "LOG_M2M" 
   (	"ID_LOG_M2M" NUMBER(28,0), 
	"CMD_CALL" VARCHAR2(4000 BYTE), 
	"MODULE" VARCHAR2(100 BYTE), 
	"TYPE_LOG" VARCHAR2(20 BYTE), 
	"MESSAGE" VARCHAR2(4000 BYTE), 
	"MONTH_LOG" NUMBER(2,0) DEFAULT 0, 
	"CREATION_DATE" TIMESTAMP (6)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY RANGE ("MONTH_LOG") 
 (PARTITION "JAN_PRT"  VALUES LESS THAN (2) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "FEB_PRT"  VALUES LESS THAN (3) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MAR_PRT"  VALUES LESS THAN (4) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "APR_PRT"  VALUES LESS THAN (5) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MAY_PRT"  VALUES LESS THAN (6) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "JUN_PRT"  VALUES LESS THAN (7) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "JUL_PRT"  VALUES LESS THAN (8) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "AUG_PRT"  VALUES LESS THAN (9) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "SEP_PRT"  VALUES LESS THAN (10) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "OCT_PRT"  VALUES LESS THAN (11) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "NOV_PRT"  VALUES LESS THAN (12) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "DEC_PRT"  VALUES LESS THAN (MAXVALUE) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 8388608 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table LOG_M2M_OLD
--------------------------------------------------------

  CREATE TABLE "LOG_M2M_OLD" 
   (	"ID_LOG_M2M" NUMBER(28,0), 
	"CMD_CALL" VARCHAR2(4000 BYTE), 
	"MODULE" VARCHAR2(100 BYTE), 
	"TYPE_LOG" VARCHAR2(20 BYTE), 
	"MESSAGE" VARCHAR2(4000 BYTE), 
	"CREATION_DATE" TIMESTAMP (6)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table M2M_CONSOLE_USERS
--------------------------------------------------------

  CREATE TABLE "M2M_CONSOLE_USERS" 
   (	"ID_USER" NUMBER(10,0), 
	"USERNAME" VARCHAR2(100 BYTE), 
	"PASSWORD" VARCHAR2(100 BYTE), 
	"ACTIVATED" NUMBER(1,0) DEFAULT 0, 
	"PROFILE" VARCHAR2(50 BYTE) DEFAULT 'CLIENT'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;

   COMMENT ON COLUMN "M2M_CONSOLE_USERS"."PROFILE" IS 'SUPERUSER, CLIENT, PLATFORM';
--------------------------------------------------------
--  DDL for Table M2M_PLATFORM_ACCOUNTS
--------------------------------------------------------

  CREATE TABLE "M2M_PLATFORM_ACCOUNTS" 
   (	"ID_ACCOUNT" NUMBER(10,0), 
	"NAME" VARCHAR2(50 BYTE), 
	"DB_USER" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(300 BYTE), 
	"CREATION_DATE" DATE, 
	"LIMIT_GROUPS" NUMBER(3,0) DEFAULT NULL, 
	"LIMIT_VPNS" NUMBER(3,0) DEFAULT NULL, 
	"LIMIT_RULES" NUMBER(3,0) DEFAULT NULL, 
	"LIMIT_PUBLICIP" NUMBER(3,0) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MAIL_NOTIFICATIONS
--------------------------------------------------------

  CREATE TABLE "MAIL_NOTIFICATIONS" 
   (	"ID_MAIL_NOTIF" NUMBER(10,0), 
	"MAIL" VARCHAR2(200 BYTE), 
	"NOTIFICATION" VARCHAR2(50 BYTE), 
	"FLAG_ACTIVATED" NUMBER(1,0) DEFAULT 0, 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE DEFAULT sysdate
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MAIN_POOL_HWM
--------------------------------------------------------

  CREATE TABLE "MAIN_POOL_HWM" 
   (	"ID_SUB" NUMBER(10,0), 
	"FIRST_IP" VARCHAR2(30 BYTE), 
	"FREE_SIZE" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"FLAG_HWM" NUMBER(1,0), 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MAIN_POOL_IP
--------------------------------------------------------

  CREATE TABLE "MAIN_POOL_IP" 
   (	"ID_SUB" NUMBER(10,0), 
	"IPADDRESS" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MAIN_POOL_SERVICES
--------------------------------------------------------

  CREATE TABLE "MAIN_POOL_SERVICES" 
   (	"ID_SUB" NUMBER(10,0), 
	"ID_FUNCTION" NUMBER(10,0), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MAIN_POOL_SUBNET
--------------------------------------------------------

  CREATE TABLE "MAIN_POOL_SUBNET" 
   (	"ID_SUB" NUMBER(10,0), 
	"IP_PREFIX" VARCHAR2(30 BYTE), 
	"NETMASK" VARCHAR2(30 BYTE), 
	"START_IP" VARCHAR2(30 BYTE), 
	"STOP_IP" VARCHAR2(30 BYTE), 
	"POOL_SIZE" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"TO_NAT" NUMBER(1,0) DEFAULT 1, 
	"ID_GGSN" NUMBER(10,0) DEFAULT 1, 
	"ID_APN" NUMBER(10,0) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MAP_FUNCTIONS_DEVICES
--------------------------------------------------------

  CREATE TABLE "MAP_FUNCTIONS_DEVICES" 
   (	"ID_FUNCTION" NUMBER(10,0), 
	"ID_DEVICE" NUMBER(10,0), 
	"ID_APN" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MAP_LIST
--------------------------------------------------------

  CREATE TABLE "MAP_LIST" 
   (	"ID_MAP" NUMBER(10,0), 
	"NAME_MAP" VARCHAR2(100 BYTE), 
	"ID_APN" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"DEFAULT_AREA" NUMBER(5,0) DEFAULT 0, 
	"DEFAULT_MCC" NUMBER(3,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MAP_OGRP_ONET
--------------------------------------------------------

  CREATE TABLE "MAP_OGRP_ONET" 
   (	"ID_OBJ_GRP" NUMBER(10,0), 
	"ID_OBJ_NET" NUMBER(10,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MAP_OGRP_REC
--------------------------------------------------------

  CREATE TABLE "MAP_OGRP_REC" 
   (	"ID_OBJ_GRP_FATHER" NUMBER(10,0), 
	"ID_OBJ_GRP_SON" NUMBER(10,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"FLAG_REMOVING" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MASTER_DATA_CLIENTS
--------------------------------------------------------

  CREATE TABLE "MASTER_DATA_CLIENTS" 
   (	"ID_CLIENT" NUMBER(10,0), 
	"CLIENT_NAME" VARCHAR2(100 BYTE), 
	"FLAG_VALID" NUMBER(1,0) DEFAULT 1, 
	"CREATION_DATE" DATE, 
	"CLOSING_FLAG" NUMBER(1,0), 
	"SCHED_REPORT_DAY" NUMBER(2,0), 
	"SCHED_REPORT_HOUR" VARCHAR2(5 BYTE), 
	"LAST_REPORT_DATE" DATE, 
	"EVENT_DEBUG_LEVEL" VARCHAR2(5 BYTE), 
	"GRP_LIMIT" NUMBER(5,0) DEFAULT 5, 
	"VPN_LIMIT" NUMBER(5,0) DEFAULT 5, 
	"RULES_LIMIT" NUMBER(5,0) DEFAULT 20, 
	"FLAG_MANUAL_LIMIT" NUMBER(1,0) DEFAULT 0, 
	"FLAG_EXT_LIMITS" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"FLAG_RO" NUMBER(1,0) DEFAULT 1, 
	"ID_APN" NUMBER(10,0) DEFAULT 1, 
	"DEFAULT_ID_MAP" NUMBER(10,0) DEFAULT NULL, 
	"THRESHOLD_LIMIT" NUMBER(5,0) DEFAULT 5, 
	"CLOSURE" VARCHAR2(200 BYTE) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MASTER_DATA_FUNCTIONS
--------------------------------------------------------

  CREATE TABLE "MASTER_DATA_FUNCTIONS" 
   (	"ID_FUNCTION" NUMBER(10,0), 
	"FUNCTION_CODE" VARCHAR2(100 BYTE), 
	"ID_AGENT" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"POOL_FLAG" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MASTER_DATA_RELATIONSHIPS
--------------------------------------------------------

  CREATE TABLE "MASTER_DATA_RELATIONSHIPS" 
   (	"ID_GROUP" NUMBER(10,0), 
	"ID_CLIENT" NUMBER(10,0), 
	"ID_SERVICE" NUMBER(10,0), 
	"GROUP_NAME_REL" VARCHAR2(100 BYTE), 
	"USERNAME" VARCHAR2(100 BYTE), 
	"PASSWORD" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"ACTIVATED" NUMBER(1,0) DEFAULT 0, 
	"GROUP_SIZE" NUMBER(10,0) DEFAULT 0, 
	"CLOSING_FLAG" NUMBER(1,0), 
	"SYSTEM_FLAG" NUMBER(1,0) DEFAULT 0, 
	"SUBNET_CONF_PENDING" NUMBER(1,0) DEFAULT 0, 
	"ID_APN" NUMBER(10,0) DEFAULT 1, 
	"SIM_PROVIDED" NUMBER(10,0) DEFAULT NULL, 
	"UPDATING_SIMS" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MASTER_DATA_SERVICES
--------------------------------------------------------

  CREATE TABLE "MASTER_DATA_SERVICES" 
   (	"ID_SERVICE" NUMBER(10,0), 
	"SERVICE_NAME" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"TRUSTED" NUMBER(1,0) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MASTER_DATA_VPN
--------------------------------------------------------

  CREATE TABLE "MASTER_DATA_VPN" 
   (	"ID_VPN" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"ID_CLIENT" NUMBER(10,0), 
	"REFERENT" VARCHAR2(100 BYTE), 
	"REFERENT_EMAIL" VARCHAR2(100 BYTE), 
	"REFERENT_PHONE1" VARCHAR2(100 BYTE), 
	"REFERENT_PHONE2" VARCHAR2(100 BYTE), 
	"REFERENT_NOTE" VARCHAR2(100 BYTE), 
	"STATUS_CODE" VARCHAR2(30 BYTE), 
	"RESTART_FLAG" NUMBER(1,0) DEFAULT 0, 
	"ID_VPN_RADACCT" NUMBER(10,0) DEFAULT NULL, 
	"ID_VPN_RADACCT_CLOSED" NUMBER(10,0) DEFAULT NULL, 
	"FLAG_USED" NUMBER(1,0) DEFAULT 0, 
	"FLAG_REMOVING" NUMBER(1,0) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MASTER_DATA_VPN_PRE
--------------------------------------------------------

  CREATE TABLE "MASTER_DATA_VPN_PRE" 
   (	"ID_PRE_VPN" NUMBER(10,0), 
	"REFERENT" VARCHAR2(100 BYTE), 
	"REFERENT_EMAIL" VARCHAR2(100 BYTE), 
	"REFERENT_PHONE1" VARCHAR2(100 BYTE), 
	"REFERENT_PHONE2" VARCHAR2(100 BYTE), 
	"REFERENT_NOTE" VARCHAR2(100 BYTE), 
	"STATUS_CODE" VARCHAR2(30 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MCC_AREA
--------------------------------------------------------

  CREATE TABLE "MCC_AREA" 
   (	"ID_AREA" NUMBER(5,0), 
	"MCC" NUMBER(3,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MCC_LIST
--------------------------------------------------------

  CREATE TABLE "MCC_LIST" 
   (	"MCC" NUMBER(3,0), 
	"COUNTRY" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MCC_MNC_TABLE
--------------------------------------------------------

  CREATE TABLE "MCC_MNC_TABLE" 
   (	"COUNTRY" VARCHAR2(3 BYTE), 
	"SP_NAME" VARCHAR2(100 BYTE), 
	"MCC" NUMBER(3,0), 
	"MNC" NUMBER(3,0), 
	"COUNTRY_EXTENDED" VARCHAR2(100 BYTE), 
	"BANDS" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MCC_MNC_TABLE_NEW
--------------------------------------------------------

  CREATE TABLE "MCC_MNC_TABLE_NEW" 
   (	"COUNTRY" VARCHAR2(3 BYTE), 
	"SP_NAME" VARCHAR2(100 BYTE), 
	"MCC" NUMBER(3,0), 
	"MNC" NUMBER(3,0), 
	"COUNTRY_EXTENDED" VARCHAR2(100 BYTE), 
	"BANDS" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MCC_MNC_TABLE_OLD
--------------------------------------------------------

  CREATE TABLE "MCC_MNC_TABLE_OLD" 
   (	"COUNTRY" VARCHAR2(3 BYTE), 
	"SP_NAME" VARCHAR2(100 BYTE), 
	"MCC" NUMBER(3,0), 
	"MNC" NUMBER(3,0), 
	"COUNTRY_EXTENDED" VARCHAR2(100 BYTE), 
	"BANDS" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MCC_RANKING
--------------------------------------------------------

  CREATE TABLE "MCC_RANKING" 
   (	"MCC" NUMBER(3,0), 
	"ID_MAP" NUMBER(10,0), 
	"RANK_VALUE" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MD_APPLICATIONFILES
--------------------------------------------------------

  CREATE TABLE "MD_APPLICATIONFILES" 
   (	"ID" NUMBER, 
	"APPLICATIONS_ID_FK" NUMBER, 
	"NAME" VARCHAR2(200 BYTE), 
	"URI" VARCHAR2(4000 BYTE), 
	"TYPE" VARCHAR2(100 BYTE), 
	"STATE" VARCHAR2(100 BYTE), 
	"LANGUAGE" VARCHAR2(100 BYTE), 
	"LOC" NUMBER, 
	"SECURITY_GROUP_ID" NUMBER DEFAULT 0, 
	"CREATED_ON" DATE DEFAULT sysdate, 
	"CREATED_BY" VARCHAR2(4000 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MD_APPLICATIONS
--------------------------------------------------------

  CREATE TABLE "MD_APPLICATIONS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(4000 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"BASE_DIR" VARCHAR2(4000 BYTE), 
	"OUTPUT_DIR" VARCHAR2(4000 BYTE), 
	"BACKUP_DIR" VARCHAR2(4000 BYTE), 
	"INPLACE" NUMBER, 
	"PROJECT_ID_FK" NUMBER, 
	"SECURITY_GROUP_ID" NUMBER DEFAULT 0, 
	"CREATED_ON" DATE DEFAULT sysdate, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"LAST_UPDATED_ON" DATE, 
	"LAST_UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "{{ item.0.tablespace_data }}" ;

   COMMENT ON COLUMN "MD_APPLICATIONS"."ID" IS 'Primary Key';
   COMMENT ON COLUMN "MD_APPLICATIONS"."NAME" IS 'Name of the application suite  //OBJECTNAME';
   COMMENT ON COLUMN "MD_APPLICATIONS"."DESCRIPTION" IS 'Overview of what the application does.';
   COMMENT ON COLUMN "MD_APPLICATIONS"."BASE_DIR" IS 'This is the base src directory for the application.  It could be an svn checkout, a clearcase view or something similar';
   COMMENT ON COLUMN "MD_APPLICATIONS"."OUTPUT_DIR" IS 'This is the output directory where the scanner will present the converted files, if there are converted or modified.';
   COMMENT ON COLUMN "MD_APPLICATIONS"."BACKUP_DIR" IS 'This is the directory in which the application files are backed up if a backp is chosen';
   COMMENT ON COLUMN "MD_APPLICATIONS"."INPLACE" IS 'Designates whether the changes have been made inplace, in the source directory or not';
   COMMENT ON COLUMN "MD_APPLICATIONS"."PROJECT_ID_FK" IS 'project of the database(s) this application relates to';
   COMMENT ON TABLE "MD_APPLICATIONS"  IS 'This is the base table for application projects.  It holds the base information for applications associated with a database';
--------------------------------------------------------
--  DDL for Table MOBILE_SUBNET
--------------------------------------------------------

  CREATE TABLE "MOBILE_SUBNET" 
   (	"OC1" NUMBER(3,0), 
	"OC2" NUMBER(3,0), 
	"OC3" NUMBER(3,0), 
	"OC4" NUMBER(3,0), 
	"ID_GGSN" NUMBER(10,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MOBILE_SUBNET_OC1
--------------------------------------------------------

  CREATE TABLE "MOBILE_SUBNET_OC1" 
   (	"OC1" NUMBER(3,0), 
	"ID_GGSN" NUMBER(10,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MONITOR_THREAD
--------------------------------------------------------

  CREATE TABLE "MONITOR_THREAD" 
   (	"THREAD_SERVICE" VARCHAR2(40 BYTE), 
	"HOSTNAME" VARCHAR2(100 BYTE), 
	"THREAD_ACTIVE" NUMBER(1,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MSISDN_FIXEDIP
--------------------------------------------------------

  CREATE TABLE "MSISDN_FIXEDIP" 
   (	"MSISDN" VARCHAR2(100 BYTE), 
	"ID_GSUBNET" NUMBER(10,0), 
	"IPADDRESS" VARCHAR2(30 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MSISDN_FIXEDIP_SHADOW
--------------------------------------------------------

  CREATE TABLE "MSISDN_FIXEDIP_SHADOW" 
   (	"MSISDN" VARCHAR2(100 BYTE), 
	"ID_GSUBNET" NUMBER(10,0), 
	"IPADDRESS" VARCHAR2(30 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MSISDN_SHADOW
--------------------------------------------------------

  CREATE TABLE "MSISDN_SHADOW" 
   (	"ID_GROUP" NUMBER(10,0), 
	"MSISDN" VARCHAR2(100 BYTE), 
	"MSISDN_TEMP" VARCHAR2(100 BYTE), 
	"USERNAME" VARCHAR2(100 BYTE), 
	"PASSWORD" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"EXPIRE_DATE" DATE, 
	"REMOVED" NUMBER(1,0) DEFAULT 0, 
	"CONTRACT" VARCHAR2(100 BYTE) DEFAULT NULL, 
	"HUMAN_FLAG" NUMBER(1,0) DEFAULT 1, 
	"FLAG_INTERNAL" NUMBER(1,0) DEFAULT 0, 
	"PREPAID" NUMBER(1,0) DEFAULT 0, 
	"CL_MOD_GROUP" NUMBER(5,0), 
	"CL_MOD_MSISDN" NUMBER(5,0), 
	"CACHE_TTL" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MSISDN_THRESHOLD
--------------------------------------------------------

  CREATE TABLE "MSISDN_THRESHOLD" 
   (	"MSISDN" VARCHAR2(100 BYTE), 
	"ID_THD" NUMBER(10,0), 
	"TOT_TRAFFIC" NUMBER(10,0), 
	"TOT_TRAFFIC_RANK" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"START_THRESHOLD" DATE, 
	"END_THRESHOLD" DATE, 
	"FLAG_REACHED" NUMBER(1,0), 
	"FLAG_INFO_SENT" NUMBER(1,0) DEFAULT 0, 
	"FLAG_REACH_SENT" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MSISDN_THR_MAP
--------------------------------------------------------

  CREATE TABLE "MSISDN_THR_MAP" 
   (	"MSISDN" VARCHAR2(100 BYTE), 
	"ID_THRESHOLD" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"SESSION_RANK" NUMBER(19,0) DEFAULT NULL, 
	"SESSION_EFFECTIVE" NUMBER(19,0) DEFAULT NULL, 
	"SESSION_ID_AREA" NUMBER(5,0) DEFAULT NULL, 
	"UPDATE_DATE" DATE DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table MSISDN_WHITELIST
--------------------------------------------------------

  CREATE TABLE "MSISDN_WHITELIST" 
   (	"ID_GROUP" NUMBER(10,0), 
	"MSISDN" VARCHAR2(100 BYTE), 
	"USERNAME" VARCHAR2(100 BYTE), 
	"PASSWORD" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"CONNECTABLE" NUMBER(1,0) DEFAULT 0, 
	"CONTRACT" VARCHAR2(100 BYTE) DEFAULT NULL, 
	"HUMAN_FLAG" NUMBER(1,0) DEFAULT 1, 
	"FLAG_INTERNAL" NUMBER(1,0) DEFAULT 0, 
	"PREPAID" NUMBER(1,0) DEFAULT 0, 
	"CL_MOD_GROUP" NUMBER(5,0) DEFAULT 0, 
	"CL_MOD_MSISDN" NUMBER(5,0) DEFAULT 0, 
	"CACHE_TTL" NUMBER(10,0) DEFAULT 0
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY LIST ("CL_MOD_MSISDN") 
  SUBPARTITION BY LIST ("CL_MOD_GROUP") 
  SUBPARTITION TEMPLATE ( 
    SUBPARTITION "CL_MOD_PRT_0" VALUES ( 0 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_1" VALUES ( 1 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_2" VALUES ( 2 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_3" VALUES ( 3 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_4" VALUES ( 4 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_5" VALUES ( 5 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_6" VALUES ( 6 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_7" VALUES ( 7 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_8" VALUES ( 8 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_9" VALUES ( 9 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_10" VALUES ( 10 )
  TABLESPACE "{{ item.0.tablespace_data }}"  ) 
 (PARTITION "CL_MSISDN_PRT_0"  VALUES (0) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MSISDN_PRT_1"  VALUES (1) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MSISDN_PRT_2"  VALUES (2) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MSISDN_PRT_3"  VALUES (3) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MSISDN_PRT_4"  VALUES (4) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MSISDN_PRT_5"  VALUES (5) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MSISDN_PRT_6"  VALUES (6) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MSISDN_PRT_7"  VALUES (7) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MSISDN_PRT_8"  VALUES (8) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MSISDN_PRT_9"  VALUES (9) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table NAS
--------------------------------------------------------

  CREATE TABLE "NAS" 
   (	"ID" NUMBER(*,0), 
	"NASNAME" VARCHAR2(128 BYTE), 
	"SHORTNAME" VARCHAR2(32 BYTE), 
	"TYPE" VARCHAR2(30 BYTE), 
	"PORTS" NUMBER(*,0), 
	"SECRET" VARCHAR2(60 BYTE), 
	"SERVER" VARCHAR2(64 BYTE), 
	"COMMUNITY" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(200 BYTE), 
	"RADIUS_TYPE" VARCHAR2(20 BYTE), 
	"DISCONNECT_PORT" NUMBER(10,0) DEFAULT 3799, 
	"ID_GGSN" NUMBER(10,0), 
	"ID_APN" NUMBER(10,0), 
	"NAS_IDENTIFIER" VARCHAR2(100 BYTE) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table NOTIFICATIONS
--------------------------------------------------------

  CREATE TABLE "NOTIFICATIONS" 
   (	"NOTIFICATION" VARCHAR2(50 BYTE), 
	"DESCR" VARCHAR2(200 BYTE), 
	"SUBJECT_EMAIL" VARCHAR2(500 BYTE), 
	"TEXT_EMAIL" VARCHAR2(400 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table OBJECT_GROUP
--------------------------------------------------------

  CREATE TABLE "OBJECT_GROUP" 
   (	"ID_OBJ_GRP" NUMBER(10,0), 
	"ID_DEVICE" NUMBER(10,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"TYPE" VARCHAR2(100 BYTE), 
	"DESCR" VARCHAR2(200 BYTE), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"CLOSURE" VARCHAR2(100 BYTE), 
	"FLAG_REMOVING" NUMBER(1,0), 
	"FLAG_LOAD" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table OBJECT_NETWORK
--------------------------------------------------------

  CREATE TABLE "OBJECT_NETWORK" 
   (	"ID_OBJ_NET" NUMBER(10,0), 
	"ID_DEVICE" NUMBER(10,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"FLAG_USED" NUMBER(1,0), 
	"ID_SUBNET" NUMBER(10,0), 
	"FLAG_INLINE" NUMBER(1,0) DEFAULT 0, 
	"DESCR" VARCHAR2(200 BYTE), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table OBJECT_TYPES
--------------------------------------------------------

  CREATE TABLE "OBJECT_TYPES" 
   (	"TYPE" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table OBJ_PROPERTIES
--------------------------------------------------------

  CREATE TABLE "OBJ_PROPERTIES" 
   (	"ID_PROPERTY" NUMBER(10,0), 
	"ID_OBJECT" VARCHAR2(2000 BYTE), 
	"ID_DEVICE" NUMBER(10,0), 
	"TYPE" VARCHAR2(100 BYTE), 
	"KEY" VARCHAR2(30 BYTE), 
	"VALUE" VARCHAR2(100 BYTE), 
	"ID_OBJECT_FATHER" NUMBER(10,0), 
	"FLAG_LOAD" NUMBER(1,0) DEFAULT 0, 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"FLAG_REMOVING" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table OLD_MCC_MNC_TABLE
--------------------------------------------------------

  CREATE TABLE "OLD_MCC_MNC_TABLE" 
   (	"COUNTRY" VARCHAR2(3 BYTE), 
	"SP_NAME" VARCHAR2(50 BYTE), 
	"MCC" NUMBER(3,0), 
	"MNC" NUMBER(3,0), 
	"COUNTRY_EXTENDED" VARCHAR2(100 BYTE), 
	"BANDS" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table PERIOD_LIST
--------------------------------------------------------

  CREATE TABLE "PERIOD_LIST" 
   (	"ID_PERIOD" NUMBER(10,0), 
	"PERIOD_NAME" VARCHAR2(100 BYTE), 
	"NUMDAYS" NUMBER(4,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table PHONE_INFO
--------------------------------------------------------

  CREATE TABLE "PHONE_INFO" 
   (	"MSISDN" VARCHAR2(50 BYTE), 
	"IMEI" VARCHAR2(15 BYTE), 
	"MODEL_PHONE" VARCHAR2(100 BYTE), 
	"BRAND_PHONE" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table PKG_TABLE
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "PKG_TABLE" 
   (	"PKG" VARCHAR2(100 BYTE)
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table PLATFORM_CONFIGURATION
--------------------------------------------------------

  CREATE TABLE "PLATFORM_CONFIGURATION" 
   (	"PARAM" VARCHAR2(50 BYTE), 
	"VALUE" VARCHAR2(200 BYTE), 
	"USER_PLF" VARCHAR2(50 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table PROFILE_STATUS
--------------------------------------------------------

  CREATE TABLE "PROFILE_STATUS" 
   (	"STATUS_CODE" VARCHAR2(30 BYTE), 
	"DESCR" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table PROVA_PART
--------------------------------------------------------

  CREATE TABLE "PROVA_PART" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE), 
	"ID_CLIENT" NUMBER(10,0) DEFAULT 0, 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"MONTH_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY RANGE ("MONTH_ACCTSTARTTIME") 
  SUBPARTITION BY LIST ("CL_MOD_CLIENT") 
  SUBPARTITION TEMPLATE ( 
    SUBPARTITION "CL_MOD_PRT_0" VALUES ( 0 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_1" VALUES ( 1 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_2" VALUES ( 2 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_3" VALUES ( 3 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_4" VALUES ( 4 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_5" VALUES ( 5 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_6" VALUES ( 6 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_7" VALUES ( 7 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_8" VALUES ( 8 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_9" VALUES ( 9 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_10" VALUES ( 10 )
  TABLESPACE "{{ item.0.tablespace_data }}"  ) 
 (PARTITION "DEC_PRT"  VALUES LESS THAN (MAXVALUE) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table PUBLIC_IP_CLIENT_LIST
--------------------------------------------------------

  CREATE TABLE "PUBLIC_IP_CLIENT_LIST" 
   (	"ID_CLIENT" NUMBER(10,0), 
	"IP_ADDRESS" VARCHAR2(30 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table PUBLIC_IP_DETAIL_HISTORY
--------------------------------------------------------

  CREATE TABLE "PUBLIC_IP_DETAIL_HISTORY" 
   (	"ID_HISTORY" NUMBER(20,0), 
	"IP_ADDRESS" VARCHAR2(30 BYTE), 
	"ID_CLIENT" NUMBER(10,0), 
	"ALLOCATION_DATE" DATE, 
	"DEALLOCATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table PUBLIC_IP_DETAIL_POOL
--------------------------------------------------------

  CREATE TABLE "PUBLIC_IP_DETAIL_POOL" 
   (	"ID_PSUBNET" NUMBER(10,0), 
	"IP_ADDRESS" VARCHAR2(30 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table PUBLIC_IP_POOL_SUBNET
--------------------------------------------------------

  CREATE TABLE "PUBLIC_IP_POOL_SUBNET" 
   (	"ID_PSUBNET" NUMBER(10,0), 
	"IP_PREFIX" VARCHAR2(30 BYTE), 
	"NETMASK" VARCHAR2(30 BYTE), 
	"FIRST_IP" VARCHAR2(30 BYTE), 
	"LAST_IP" VARCHAR2(30 BYTE), 
	"POOL_SIZE" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ID_APN" NUMBER(10,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table QUARANTINE_ADDRESS
--------------------------------------------------------

  CREATE TABLE "QUARANTINE_ADDRESS" 
   (	"ID_QUARANTINE" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"ID_GSUBNET" NUMBER(10,0), 
	"IP_PREFIX" VARCHAR2(30 BYTE), 
	"NETMASK" VARCHAR2(30 BYTE), 
	"FLAG_NOT_EXPIRED" NUMBER(1,0) DEFAULT 0, 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RADACCT
--------------------------------------------------------

  CREATE TABLE "RADACCT" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE), 
	"ID_CLIENT" NUMBER(10,0) DEFAULT 0, 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"MONTH_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0, 
	"SGSN_ADDRESS" VARCHAR2(30 BYTE) DEFAULT NULL, 
	"ID_GGSN" NUMBER(10,0) DEFAULT 1, 
	"ID_AREA" NUMBER(10,0) DEFAULT NULL, 
	"TOTALOCTETS_RANK" NUMBER(19,0) DEFAULT 0, 
	"LAST_UPDATE_INTERIM" DATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY RANGE ("MONTH_ACCTSTARTTIME") 
  SUBPARTITION BY LIST ("CL_MOD_CLIENT") 
  SUBPARTITION TEMPLATE ( 
    SUBPARTITION "CL_MOD_PRT_0" VALUES ( 0 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_1" VALUES ( 1 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_2" VALUES ( 2 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_3" VALUES ( 3 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_4" VALUES ( 4 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_5" VALUES ( 5 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_6" VALUES ( 6 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_7" VALUES ( 7 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_8" VALUES ( 8 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_9" VALUES ( 9 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_10" VALUES ( 10 )
  TABLESPACE "{{ item.0.tablespace_data }}"  ) 
 (PARTITION "JAN_PRT"  VALUES LESS THAN (2) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JAN_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "FEB_PRT"  VALUES LESS THAN (3) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "FEB_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "MAR_PRT"  VALUES LESS THAN (4) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "MAR_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "APR_PRT"  VALUES LESS THAN (5) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "APR_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "MAY_PRT"  VALUES LESS THAN (6) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "MAY_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "JUN_PRT"  VALUES LESS THAN (7) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JUN_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "JUL_PRT"  VALUES LESS THAN (8) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JUL_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "AUG_PRT"  VALUES LESS THAN (9) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "AUG_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "SEP_PRT"  VALUES LESS THAN (10) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "SEP_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "OCT_PRT"  VALUES LESS THAN (11) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "OCT_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "NOV_PRT"  VALUES LESS THAN (12) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "NOV_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "DEC_PRT"  VALUES LESS THAN (MAXVALUE) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "DEC_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) ) 
  PARALLEL  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table RADACCT_HISTORY
--------------------------------------------------------

  CREATE TABLE "RADACCT_HISTORY" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STARTTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STOPTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE), 
	"ID_CLIENT" NUMBER(10,0) DEFAULT 0, 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"MONTH_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0, 
	"SGSN_ADDRESS" VARCHAR2(30 BYTE) DEFAULT NULL, 
	"ID_GGSN" NUMBER(10,0) DEFAULT 1, 
	"ID_AREA" NUMBER(10,0) DEFAULT NULL, 
	"TOTALOCTETS_RANK" NUMBER(19,0) DEFAULT 0, 
	"LAST_UPDATE_INTERIM" DATE, 
	"MOD_YEAR_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY RANGE ("MONTH_ACCTSTARTTIME") 
  SUBPARTITION BY RANGE ("MOD_YEAR_ACCTSTARTTIME") 
 (PARTITION "JAN_PRT"  VALUES LESS THAN (2) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JAN_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "FEB_PRT"  VALUES LESS THAN (3) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "FEB_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "MAR_PRT"  VALUES LESS THAN (4) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "MAR_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "APR_PRT"  VALUES LESS THAN (5) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "APR_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "MAY_PRT"  VALUES LESS THAN (6) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "MAY_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "JUN_PRT"  VALUES LESS THAN (7) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JUN_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "JUL_PRT"  VALUES LESS THAN (8) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JUL_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "AUG_PRT"  VALUES LESS THAN (9) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "AUG_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "SEP_PRT"  VALUES LESS THAN (10) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "SEP_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "OCT_PRT"  VALUES LESS THAN (11) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "OCT_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "NOV_PRT"  VALUES LESS THAN (12) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "NOV_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "DEC_PRT"  VALUES LESS THAN (MAXVALUE) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "DEC_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table RADACCT_HISTORY_OLD
--------------------------------------------------------

  CREATE TABLE "RADACCT_HISTORY_OLD" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STARTTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STOPTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE), 
	"ID_CLIENT" NUMBER(10,0) DEFAULT 0, 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"MONTH_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0, 
	"SGSN_ADDRESS" VARCHAR2(30 BYTE) DEFAULT NULL, 
	"ID_GGSN" NUMBER(10,0) DEFAULT 1, 
	"ID_AREA" NUMBER(10,0) DEFAULT NULL, 
	"TOTALOCTETS_RANK" NUMBER(19,0) DEFAULT 0, 
	"LAST_UPDATE_INTERIM" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARALLEL ;
--------------------------------------------------------
--  DDL for Table RADACCT_ONLINE
--------------------------------------------------------

  CREATE TABLE "RADACCT_ONLINE" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE), 
	"ID_CLIENT" NUMBER(10,0) DEFAULT 0, 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"MONTH_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0, 
	"SGSN_ADDRESS" VARCHAR2(30 BYTE) DEFAULT null, 
	"CONN_CLOSED" NUMBER(2,0) DEFAULT 0, 
	"ID_GGSN" NUMBER(10,0) DEFAULT 1, 
	"ID_AREA" NUMBER(10,0) DEFAULT NULL, 
	"TOTALOCTETS_RANK" NUMBER(19,0) DEFAULT 0, 
	"LAST_UPDATE_INTERIM" DATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY LIST ("CONN_CLOSED") 
 (PARTITION "CONN_CLOSED_PRT_0"  VALUES (0) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CONN_CLOSED_PRT_1"  VALUES (1) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table RADACCT_RECOVERY
--------------------------------------------------------

  CREATE TABLE "RADACCT_RECOVERY" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE), 
	"ID_CLIENT" NUMBER(10,0) DEFAULT 0, 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"CL_MOD_MSISDN" NUMBER(5,0) DEFAULT 0, 
	"SGSN_ADDRESS" VARCHAR2(30 BYTE) DEFAULT NULL, 
	"ID_GGSN" NUMBER(10,0), 
	"CONN_CLOSED" NUMBER(2,0) DEFAULT 0, 
	"ID_AREA" NUMBER(10,0) DEFAULT NULL, 
	"TOTALOCTETS_RANK" NUMBER(19,0) DEFAULT 0, 
	"LAST_UPDATE_INTERIM" DATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY LIST ("CL_MOD_CLIENT") 
  SUBPARTITION BY LIST ("CL_MOD_MSISDN") 
  SUBPARTITION TEMPLATE ( 
    SUBPARTITION "MSISDN_PRT_0" VALUES ( 0 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_1" VALUES ( 1 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_2" VALUES ( 2 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_3" VALUES ( 3 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_4" VALUES ( 4 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_5" VALUES ( 5 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_6" VALUES ( 6 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_7" VALUES ( 7 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_8" VALUES ( 8 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_9" VALUES ( 9 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_10" VALUES ( 10 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_11" VALUES ( 11 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_12" VALUES ( 12 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_13" VALUES ( 13 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_14" VALUES ( 14 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_15" VALUES ( 15 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_16" VALUES ( 16 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_17" VALUES ( 17 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_18" VALUES ( 18 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_19" VALUES ( 19 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_20" VALUES ( 20 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_21" VALUES ( 21 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_22" VALUES ( 22 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_23" VALUES ( 23 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_24" VALUES ( 24 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_25" VALUES ( 25 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_26" VALUES ( 26 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_27" VALUES ( 27 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_28" VALUES ( 28 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_29" VALUES ( 29 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_30" VALUES ( 30 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_31" VALUES ( 31 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_32" VALUES ( 32 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_33" VALUES ( 33 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_34" VALUES ( 34 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_35" VALUES ( 35 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_36" VALUES ( 36 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_37" VALUES ( 37 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_38" VALUES ( 38 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_39" VALUES ( 39 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_40" VALUES ( 40 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_41" VALUES ( 41 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_42" VALUES ( 42 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_43" VALUES ( 43 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_44" VALUES ( 44 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_45" VALUES ( 45 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_46" VALUES ( 46 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_47" VALUES ( 47 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_48" VALUES ( 48 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_49" VALUES ( 49 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_50" VALUES ( 50 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_51" VALUES ( 51 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_52" VALUES ( 52 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_53" VALUES ( 53 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_54" VALUES ( 54 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_55" VALUES ( 55 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_56" VALUES ( 56 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_57" VALUES ( 57 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_58" VALUES ( 58 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_59" VALUES ( 59 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_60" VALUES ( 60 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_61" VALUES ( 61 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_62" VALUES ( 62 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_63" VALUES ( 63 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_64" VALUES ( 64 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_65" VALUES ( 65 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_66" VALUES ( 66 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_67" VALUES ( 67 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_68" VALUES ( 68 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_69" VALUES ( 69 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_70" VALUES ( 70 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_71" VALUES ( 71 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_72" VALUES ( 72 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_73" VALUES ( 73 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_74" VALUES ( 74 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_75" VALUES ( 75 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_76" VALUES ( 76 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_77" VALUES ( 77 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_78" VALUES ( 78 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_79" VALUES ( 79 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_80" VALUES ( 80 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_81" VALUES ( 81 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_82" VALUES ( 82 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_83" VALUES ( 83 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_84" VALUES ( 84 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_85" VALUES ( 85 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_86" VALUES ( 86 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_87" VALUES ( 87 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_88" VALUES ( 88 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_89" VALUES ( 89 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_90" VALUES ( 90 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_91" VALUES ( 91 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_92" VALUES ( 92 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_93" VALUES ( 93 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_94" VALUES ( 94 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_95" VALUES ( 95 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_96" VALUES ( 96 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_97" VALUES ( 97 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_98" VALUES ( 98 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "MSISDN_PRT_99" VALUES ( 99 )
  TABLESPACE "{{ item.0.tablespace_data }}"  ) 
 (PARTITION "CLIENT_PRT_0"  VALUES (0) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CLIENT_PRT_1"  VALUES (1) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CLIENT_PRT_2"  VALUES (2) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CLIENT_PRT_3"  VALUES (3) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CLIENT_PRT_4"  VALUES (4) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CLIENT_PRT_5"  VALUES (5) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CLIENT_PRT_6"  VALUES (6) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CLIENT_PRT_7"  VALUES (7) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CLIENT_PRT_8"  VALUES (8) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CLIENT_PRT_9"  VALUES (9) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table RADACCT_TEST
--------------------------------------------------------

  CREATE TABLE "RADACCT_TEST" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STARTTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STOPTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RADACCT_TIDS
--------------------------------------------------------

  CREATE TABLE "RADACCT_TIDS" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE), 
	"ID_CLIENT" NUMBER(10,0) DEFAULT 0, 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"MONTH_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0, 
	"SGSN_ADDRESS" VARCHAR2(30 BYTE) DEFAULT NULL, 
	"ID_GGSN" NUMBER(10,0) DEFAULT 1, 
	"ID_AREA" NUMBER(10,0) DEFAULT NULL, 
	"TOTALOCTETS_RANK" NUMBER(19,0) DEFAULT 0, 
	"LAST_UPDATE_INTERIM" DATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY RANGE ("MONTH_ACCTSTARTTIME") 
  SUBPARTITION BY LIST ("CL_MOD_CLIENT") 
  SUBPARTITION TEMPLATE ( 
    SUBPARTITION "CL_MOD_PRT_0" VALUES ( 0 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_1" VALUES ( 1 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_2" VALUES ( 2 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_3" VALUES ( 3 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_4" VALUES ( 4 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_5" VALUES ( 5 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_6" VALUES ( 6 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_7" VALUES ( 7 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_8" VALUES ( 8 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_9" VALUES ( 9 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_10" VALUES ( 10 )
  TABLESPACE "{{ item.0.tablespace_data }}"  ) 
 (PARTITION "JAN_PRT"  VALUES LESS THAN (2) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JAN_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "FEB_PRT"  VALUES LESS THAN (3) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "FEB_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "MAR_PRT"  VALUES LESS THAN (4) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "MAR_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "APR_PRT"  VALUES LESS THAN (5) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "APR_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "MAY_PRT"  VALUES LESS THAN (6) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "MAY_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "JUN_PRT"  VALUES LESS THAN (7) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JUN_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "JUL_PRT"  VALUES LESS THAN (8) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JUL_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "AUG_PRT"  VALUES LESS THAN (9) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "AUG_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "SEP_PRT"  VALUES LESS THAN (10) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "SEP_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "OCT_PRT"  VALUES LESS THAN (11) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "OCT_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "NOV_PRT"  VALUES LESS THAN (12) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "NOV_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "DEC_PRT"  VALUES LESS THAN (MAXVALUE) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "DEC_PRT_CL_MOD_PRT_0"  VALUES (0) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_1"  VALUES (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_2"  VALUES (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_3"  VALUES (3) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_4"  VALUES (4) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_5"  VALUES (5) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_6"  VALUES (6) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_7"  VALUES (7) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_8"  VALUES (8) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_9"  VALUES (9) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_PRT_CL_MOD_PRT_10"  VALUES (10) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) ) 
  PARALLEL  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table RADACCT_TIDS_HISTORY
--------------------------------------------------------

  CREATE TABLE "RADACCT_TIDS_HISTORY" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STARTTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STOPTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE), 
	"ID_CLIENT" NUMBER(10,0) DEFAULT 0, 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"MONTH_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0, 
	"SGSN_ADDRESS" VARCHAR2(30 BYTE) DEFAULT NULL, 
	"ID_GGSN" NUMBER(10,0), 
	"ID_AREA" NUMBER(10,0) DEFAULT NULL, 
	"TOTALOCTETS_RANK" NUMBER(19,0) DEFAULT 0, 
	"LAST_UPDATE_INTERIM" DATE, 
	"MOD_YEAR_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY RANGE ("MONTH_ACCTSTARTTIME") 
  SUBPARTITION BY RANGE ("MOD_YEAR_ACCTSTARTTIME") 
 (PARTITION "JAN_PRT"  VALUES LESS THAN (2) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JAN_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JAN_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "FEB_PRT"  VALUES LESS THAN (3) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "FEB_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "FEB_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "MAR_PRT"  VALUES LESS THAN (4) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "MAR_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAR_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "APR_PRT"  VALUES LESS THAN (5) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "APR_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "APR_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "MAY_PRT"  VALUES LESS THAN (6) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "MAY_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "MAY_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "JUN_PRT"  VALUES LESS THAN (7) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JUN_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUN_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "JUL_PRT"  VALUES LESS THAN (8) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "JUL_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "JUL_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "AUG_PRT"  VALUES LESS THAN (9) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "AUG_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "AUG_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "SEP_PRT"  VALUES LESS THAN (10) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "SEP_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "SEP_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "OCT_PRT"  VALUES LESS THAN (11) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "OCT_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "OCT_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "NOV_PRT"  VALUES LESS THAN (12) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "NOV_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "NOV_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) , 
 PARTITION "DEC_PRT"  VALUES LESS THAN (MAXVALUE) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 ( SUBPARTITION "DEC_MOD0_PRT"  VALUES LESS THAN (1) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_MOD1_PRT"  VALUES LESS THAN (2) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS , 
  SUBPARTITION "DEC_MOD2_PRT"  VALUES LESS THAN (MAXVALUE) 
  TABLESPACE "{{ item.0.tablespace_data }}" 
 NOCOMPRESS ) )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table RADACCT_TIDS_HISTORY_OLD
--------------------------------------------------------

  CREATE TABLE "RADACCT_TIDS_HISTORY_OLD" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STARTTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"STOPTIMENULL" NUMBER(1,0) DEFAULT 0, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE), 
	"ID_CLIENT" NUMBER(10,0) DEFAULT 0, 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"MONTH_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0, 
	"SGSN_ADDRESS" VARCHAR2(30 BYTE) DEFAULT NULL, 
	"ID_GGSN" NUMBER(10,0), 
	"ID_AREA" NUMBER(10,0) DEFAULT NULL, 
	"TOTALOCTETS_RANK" NUMBER(19,0) DEFAULT 0, 
	"LAST_UPDATE_INTERIM" DATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RADCHECK
--------------------------------------------------------

  CREATE TABLE "RADCHECK" 
   (	"ID" NUMBER(*,0), 
	"USERNAME" VARCHAR2(30 BYTE), 
	"ATTRIBUTE" VARCHAR2(30 BYTE), 
	"OP" VARCHAR2(2 BYTE), 
	"VALUE" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RADGROUPCHECK
--------------------------------------------------------

  CREATE TABLE "RADGROUPCHECK" 
   (	"ID" NUMBER(*,0), 
	"GROUPNAME" VARCHAR2(20 BYTE), 
	"ATTRIBUTE" VARCHAR2(40 BYTE), 
	"OP" CHAR(2 BYTE), 
	"VALUE" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RADGROUPREPLY
--------------------------------------------------------

  CREATE TABLE "RADGROUPREPLY" 
   (	"ID" NUMBER(*,0), 
	"GROUPNAME" VARCHAR2(20 BYTE), 
	"ATTRIBUTE" VARCHAR2(40 BYTE), 
	"OP" CHAR(2 BYTE), 
	"VALUE" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RADIUS_DISCONNECTORS
--------------------------------------------------------

  CREATE TABLE "RADIUS_DISCONNECTORS" 
   (	"ID_RADDISC" NUMBER(10,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"ADDRESS" VARCHAR2(32 BYTE), 
	"PORT" NUMBER(5,0) DEFAULT 0, 
	"PROTOCOL" VARCHAR2(10 BYTE), 
	"USER" VARCHAR2(20 BYTE), 
	"PWD" VARCHAR2(20 BYTE), 
	"ID_APN" NUMBER(10,0) DEFAULT 0, 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RADPOSTAUTH
--------------------------------------------------------

  CREATE TABLE "RADPOSTAUTH" 
   (	"ID" NUMBER(38,0), 
	"USERNAME" VARCHAR2(64 BYTE) DEFAULT '', 
	"PASS" VARCHAR2(64 BYTE) DEFAULT NULL, 
	"REPLY" VARCHAR2(32 BYTE) DEFAULT '', 
	"AUTHDATE" TIMESTAMP (6) WITH TIME ZONE, 
	"MSISDN" VARCHAR2(50 BYTE), 
	"NASIPADDRESS" VARCHAR2(30 BYTE), 
	"COUNTER" NUMBER(10,0) DEFAULT 1, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"ID_APN" NUMBER(10,0), 
	"RADIUS_TYPE" VARCHAR2(20 BYTE), 
	"ID_GGSN" NUMBER(10,0), 
	"CHAP_CHALLENGE" VARCHAR2(500 BYTE), 
	"MONTH_AUTH" NUMBER(2,0) DEFAULT 0
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY RANGE ("MONTH_AUTH") 
 (PARTITION "JAN_PRT"  VALUES LESS THAN (1) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "FEB_PRT"  VALUES LESS THAN (2) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MAR_PRT"  VALUES LESS THAN (3) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "APR_PRT"  VALUES LESS THAN (4) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MAY_PRT"  VALUES LESS THAN (5) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "JUN_PRT"  VALUES LESS THAN (6) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "JUL_PRT"  VALUES LESS THAN (7) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "AUG_PRT"  VALUES LESS THAN (8) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "SEP_PRT"  VALUES LESS THAN (9) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "OCT_PRT"  VALUES LESS THAN (10) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "NOV_PRT"  VALUES LESS THAN (11) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "DEC_PRT"  VALUES LESS THAN (MAXVALUE) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table RADREPLY
--------------------------------------------------------

  CREATE TABLE "RADREPLY" 
   (	"ID" NUMBER(*,0), 
	"USERNAME" VARCHAR2(30 BYTE), 
	"ATTRIBUTE" VARCHAR2(30 BYTE), 
	"OP" CHAR(2 BYTE), 
	"VALUE" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RADUSERGROUP
--------------------------------------------------------

  CREATE TABLE "RADUSERGROUP" 
   (	"ID" NUMBER(*,0), 
	"USERNAME" VARCHAR2(30 BYTE), 
	"GROUPNAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RAD_VPN_ACL
--------------------------------------------------------

  CREATE TABLE "RAD_VPN_ACL" 
   (	"ID_RAD_VPN_ACL" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"SRC_ADDRESS" VARCHAR2(30 BYTE), 
	"SRC_NETMASK" VARCHAR2(30 BYTE), 
	"DST_ADDRESS" VARCHAR2(30 BYTE), 
	"DST_NETMASK" VARCHAR2(30 BYTE), 
	"PROTOCOL" VARCHAR2(30 BYTE), 
	"CREATION_DATE" DATE, 
	"ID_VPN" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table REALMGROUP
--------------------------------------------------------

  CREATE TABLE "REALMGROUP" 
   (	"ID" NUMBER(*,0), 
	"REALMNAME" VARCHAR2(30 BYTE), 
	"GROUPNAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table REALMS
--------------------------------------------------------

  CREATE TABLE "REALMS" 
   (	"ID" NUMBER(*,0), 
	"REALMNAME" VARCHAR2(64 BYTE), 
	"NAS" VARCHAR2(128 BYTE), 
	"AUTHPORT" NUMBER(*,0), 
	"OPTIONS" VARCHAR2(128 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table REMOVING_STACK
--------------------------------------------------------

  CREATE TABLE "REMOVING_STACK" 
   (	"ID_CLIENT" NUMBER(10,0), 
	"ID_ORDER" NUMBER(5,0), 
	"ID_OBJECT" NUMBER(20,0), 
	"TYPE_OBJECT" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table REQUESTS_HISTORY
--------------------------------------------------------

  CREATE TABLE "REQUESTS_HISTORY" 
   (	"ID_REQUEST" NUMBER(28,0), 
	"ID_OBJECT" VARCHAR2(4000 BYTE), 
	"TYPE_CODE" VARCHAR2(30 BYTE), 
	"REQUEST_STATUS_CODE" VARCHAR2(20 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"ID_AGENT" NUMBER(10,0), 
	"FW_COUNTER" NUMBER(3,0), 
	"ERROR_DESCR" VARCHAR2(500 BYTE), 
	"SCHEDULE_TIME" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table REQUEST_STATUS
--------------------------------------------------------

  CREATE TABLE "REQUEST_STATUS" 
   (	"REQUEST_STATUS_CODE" VARCHAR2(20 BYTE), 
	"DESCR" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table REQUEST_TYPES
--------------------------------------------------------

  CREATE TABLE "REQUEST_TYPES" 
   (	"TYPE_CODE" VARCHAR2(30 BYTE), 
	"DESCR" VARCHAR2(100 BYTE), 
	"PRIORITY" NUMBER(2,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RESERVED_VPN_SEQNUM
--------------------------------------------------------

  CREATE TABLE "RESERVED_VPN_SEQNUM" 
   (	"ID_CM" NUMBER(10,0), 
	"SEQ_NUM" NUMBER(5,0), 
	"FLAG_VALID" NUMBER(1,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RETRIEVE_CURSOR_ADDMSISDN_TMP
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "RETRIEVE_CURSOR_ADDMSISDN_TMP" 
   (	"RESULT" NUMBER(1,0), 
	"ERROR_CODE" NUMBER(5,0), 
	"ERROR_DESCR" VARCHAR2(300 BYTE), 
	"RESULT_MSISDN" NUMBER(1,0), 
	"RESULT_MSISDN_ERROR_CODE" NUMBER(5,0), 
	"RESULT_MSISDN_ERROR_DESC" VARCHAR2(300 BYTE), 
	"MSISDN" VARCHAR2(100 BYTE), 
	"ID_GROUP" NUMBER(10,0)
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table RETRIEVE_CURSOR_DELMSISDN_TMP
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "RETRIEVE_CURSOR_DELMSISDN_TMP" 
   (	"RESULT_MSISDN" NUMBER(1,0), 
	"RESULT_MSISDN_ERROR_CODE" NUMBER(5,0), 
	"RESULT_MSISDN_ERROR_DESC" VARCHAR2(300 BYTE), 
	"MSISDN" VARCHAR2(100 BYTE)
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table RETRIEVE_CURSOR_MSISDN_TMP
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "RETRIEVE_CURSOR_MSISDN_TMP" 
   (	"RESULT" NUMBER(1,0), 
	"ERROR_DESC" VARCHAR2(300 BYTE), 
	"ERROR_CODE" NUMBER(5,0), 
	"CNT" NUMBER(5,0), 
	"RESULT_MSISDN" VARCHAR2(50 BYTE), 
	"RESULT_MSISDN_ERROR_CODE" NUMBER(5,0), 
	"RESULT_MSISDN_ERROR_DESC" VARCHAR2(300 BYTE), 
	"MSISDN" VARCHAR2(100 BYTE), 
	"ID_GROUP" NUMBER(10,0), 
	"ACTIVE" NUMBER(1,0), 
	"IPADDRESS" VARCHAR2(15 BYTE), 
	"FIXEDIP" NUMBER(1,0), 
	"FIXED_ADDRESSES" VARCHAR2(300 BYTE), 
	"LAST_CONNECTION" VARCHAR2(30 BYTE), 
	"LAST_DURATION" VARCHAR2(30 BYTE), 
	"LAST_TOTAL_BYTES" NUMBER(10,0), 
	"CONNECTABLE" NUMBER(1,0), 
	"CONTRACT" VARCHAR2(100 BYTE), 
	"TYPE_SIM" NUMBER(1,0), 
	"MCC" NUMBER(3,0), 
	"COUNTRY" VARCHAR2(100 BYTE), 
	"HUMAN_FLAG" NUMBER(1,0), 
	"PREPAID" NUMBER(1,0)
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table RETRIEVE_MSISDN_GROUP_TMP
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "RETRIEVE_MSISDN_GROUP_TMP" 
   (	"ID_GROUP" NUMBER(10,0), 
	"MSISDN" VARCHAR2(100 BYTE)
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table RETRIEVE_MSISDN_TMP
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "RETRIEVE_MSISDN_TMP" 
   (	"MSISDN" VARCHAR2(50 BYTE)
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table RULES_PROFILES
--------------------------------------------------------

  CREATE TABLE "RULES_PROFILES" 
   (	"ID_RULE_PROFILE" NUMBER(10,0), 
	"SYSTEM_FLAG" NUMBER(1,0) DEFAULT 0, 
	"ID_RULE_POLICY" NUMBER(20,0), 
	"STATUS" VARCHAR2(30 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"PFW_NAME" VARCHAR2(40 BYTE), 
	"CLOSING_FLAG" NUMBER(1,0), 
	"ID_FUNCTION_POLICY" NUMBER(10,0), 
	"ID_DEVICE" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RULE_PROFILE_STATUS
--------------------------------------------------------

  CREATE TABLE "RULE_PROFILE_STATUS" 
   (	"RP_STATUS_CODE" VARCHAR2(30 BYTE), 
	"DESCR" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table RULE_STATUS
--------------------------------------------------------

  CREATE TABLE "RULE_STATUS" 
   (	"RULE_STATUS_CODE" VARCHAR2(20 BYTE), 
	"DESCR" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table SERVICE_CONNECTIONS
--------------------------------------------------------

  CREATE TABLE "SERVICE_CONNECTIONS" 
   (	"ID_SC" NUMBER(10,0), 
	"ID_SERVICE" NUMBER(10,0), 
	"NUM_CONNECTIONS" NUMBER(10,0), 
	"TOT_SIM" NUMBER(10,0), 
	"ID_GGSN_TP" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table STATIC_ROUTES
--------------------------------------------------------

  CREATE TABLE "STATIC_ROUTES" 
   (	"ID_INTERFACE" NUMBER(10,0), 
	"ID_DEV_ROUTE" NUMBER(10,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table STATS_HOURLY_CONNECTIONS
--------------------------------------------------------

  CREATE TABLE "STATS_HOURLY_CONNECTIONS" 
   (	"LIM_DOWN" VARCHAR2(16 BYTE), 
	"LIM_UP" VARCHAR2(16 BYTE), 
	"SIMUL_CON" NUMBER(10,0) DEFAULT 0, 
	"INBOUND" NUMBER(15,0) DEFAULT 0, 
	"OUTBOUND" NUMBER(15,0) DEFAULT 0, 
	"TOT_CONN" NUMBER(10,0) DEFAULT 0, 
	"TOT_FAILURE" NUMBER(10,0) DEFAULT 0, 
	"SIMUL_CON_2G" NUMBER(10,0) DEFAULT 0, 
	"SIMUL_CON_3G" NUMBER(10,0) DEFAULT 0, 
	"SIMUL_CON_4G" NUMBER(10,0) DEFAULT 0, 
	"TOT_CONN_2G" NUMBER(10,0) DEFAULT 0, 
	"TOT_CONN_3G" NUMBER(10,0) DEFAULT 0, 
	"TOT_CONN_4G" NUMBER(10,0) DEFAULT 0, 
	"SIMUL_CON_UCT" NUMBER(10,0) DEFAULT 0, 
	"TOT_CONN_UCT" NUMBER(10,0) DEFAULT 0, 
	"ID_GGSN" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table SUBLEVEL_POOL
--------------------------------------------------------

  CREATE TABLE "SUBLEVEL_POOL" 
   (	"ID_GROUP" NUMBER(10,0), 
	"FRAMEDIPADDRESS" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(30 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(64 BYTE), 
	"USERNAME" VARCHAR2(100 BYTE), 
	"LOCKED" NUMBER(1,0), 
	"FLAG_USED" NUMBER(1,0), 
	"ID_GSUBNET" NUMBER(10,0), 
	"CL_MOD_GROUP" NUMBER(5,0) DEFAULT 0
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY LIST ("CL_MOD_GROUP") 
 (PARTITION "CL_MOD_GRP_PRT_0"  VALUES (0) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MOD_GRP_PRT_1"  VALUES (1) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MOD_GRP_PRT_2"  VALUES (2) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MOD_GRP_PRT_3"  VALUES (3) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MOD_GRP_PRT_4"  VALUES (4) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MOD_GRP_PRT_5"  VALUES (5) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MOD_GRP_PRT_6"  VALUES (6) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MOD_GRP_PRT_7"  VALUES (7) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MOD_GRP_PRT_8"  VALUES (8) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MOD_GRP_PRT_9"  VALUES (9) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "CL_MOD_GRP_PRT_10"  VALUES (10) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ) 
  PARALLEL  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table SYSTEM_DEVICES
--------------------------------------------------------

  CREATE TABLE "SYSTEM_DEVICES" 
   (	"ID_DEVICE" NUMBER(10,0), 
	"TYPE" VARCHAR2(100 BYTE), 
	"NAME" VARCHAR2(100 BYTE), 
	"USER1" VARCHAR2(100 BYTE), 
	"PWD1" VARCHAR2(100 BYTE), 
	"USER2" VARCHAR2(100 BYTE), 
	"PWD2" VARCHAR2(100 BYTE), 
	"CMD_WAIT_MS" NUMBER(5,0), 
	"CONN_TIMEOUT" NUMBER(3,0), 
	"CM_DEBUG" NUMBER(1,0), 
	"PROMPT" VARCHAR2(50 BYTE), 
	"USE_INIT_PROMPT" NUMBER(1,0) DEFAULT 0, 
	"ACTIVATED" NUMBER(1,0) DEFAULT 0, 
	"CHECK_DATE" DATE, 
	"CONN_MODE" VARCHAR2(20 BYTE), 
	"HOSTNAME" VARCHAR2(100 BYTE), 
	"FW_VERSION" VARCHAR2(20 BYTE), 
	"CMD_WAIT_MS_EXT" NUMBER(8,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"PROMPT_SUFFIX" VARCHAR2(50 BYTE) DEFAULT '#', 
	"FLAG_LOGGING" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table SYS_EXPORT_SCHEMA_01
--------------------------------------------------------

  CREATE TABLE "SYS_EXPORT_SCHEMA_01" 
   (	"PROCESS_ORDER" NUMBER, 
	"DUPLICATE" NUMBER, 
	"DUMP_FILEID" NUMBER, 
	"DUMP_POSITION" NUMBER, 
	"DUMP_LENGTH" NUMBER, 
	"DUMP_ALLOCATION" NUMBER, 
	"COMPLETED_ROWS" NUMBER, 
	"ERROR_COUNT" NUMBER, 
	"ELAPSED_TIME" NUMBER, 
	"OBJECT_TYPE_PATH" VARCHAR2(200 BYTE), 
	"OBJECT_PATH_SEQNO" NUMBER, 
	"OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"IN_PROGRESS" CHAR(1 BYTE), 
	"OBJECT_NAME" VARCHAR2(500 BYTE), 
	"OBJECT_LONG_NAME" VARCHAR2(4000 BYTE), 
	"OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ORIGINAL_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"PARTITION_NAME" VARCHAR2(30 BYTE), 
	"SUBPARTITION_NAME" VARCHAR2(30 BYTE), 
	"FLAGS" NUMBER, 
	"PROPERTY" NUMBER, 
	"COMPLETION_TIME" DATE, 
	"OBJECT_TABLESPACE" VARCHAR2(30 BYTE), 
	"SIZE_ESTIMATE" NUMBER, 
	"OBJECT_ROW" NUMBER, 
	"PROCESSING_STATE" CHAR(1 BYTE), 
	"PROCESSING_STATUS" CHAR(1 BYTE), 
	"BASE_PROCESS_ORDER" NUMBER, 
	"BASE_OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_NAME" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ANCESTOR_PROCESS_ORDER" NUMBER, 
	"DOMAIN_PROCESS_ORDER" NUMBER, 
	"PARALLELIZATION" NUMBER, 
	"UNLOAD_METHOD" NUMBER, 
	"GRANULES" NUMBER, 
	"SCN" NUMBER, 
	"GRANTOR" VARCHAR2(30 BYTE), 
	"XML_CLOB" CLOB, 
	"NAME" VARCHAR2(30 BYTE), 
	"VALUE_T" VARCHAR2(4000 BYTE), 
	"VALUE_N" NUMBER, 
	"IS_DEFAULT" NUMBER, 
	"FILE_TYPE" NUMBER, 
	"USER_DIRECTORY" VARCHAR2(4000 BYTE), 
	"USER_FILE_NAME" VARCHAR2(4000 BYTE), 
	"FILE_NAME" VARCHAR2(4000 BYTE), 
	"EXTEND_SIZE" NUMBER, 
	"FILE_MAX_SIZE" NUMBER, 
	"PROCESS_NAME" VARCHAR2(30 BYTE), 
	"LAST_UPDATE" DATE, 
	"WORK_ITEM" VARCHAR2(30 BYTE), 
	"OBJECT_NUMBER" NUMBER, 
	"COMPLETED_BYTES" NUMBER, 
	"TOTAL_BYTES" NUMBER, 
	"METADATA_IO" NUMBER, 
	"DATA_IO" NUMBER, 
	"CUMULATIVE_TIME" NUMBER, 
	"PACKET_NUMBER" NUMBER, 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"SEED" NUMBER, 
	"LAST_FILE" NUMBER, 
	"USER_NAME" VARCHAR2(30 BYTE), 
	"OPERATION" VARCHAR2(30 BYTE), 
	"JOB_MODE" VARCHAR2(30 BYTE), 
	"CONTROL_QUEUE" VARCHAR2(30 BYTE), 
	"STATUS_QUEUE" VARCHAR2(30 BYTE), 
	"REMOTE_LINK" VARCHAR2(4000 BYTE), 
	"VERSION" NUMBER, 
	"DB_VERSION" VARCHAR2(30 BYTE), 
	"TIMEZONE" VARCHAR2(64 BYTE), 
	"STATE" VARCHAR2(30 BYTE), 
	"PHASE" NUMBER, 
	"GUID" RAW(16), 
	"START_TIME" DATE, 
	"BLOCK_SIZE" NUMBER, 
	"METADATA_BUFFER_SIZE" NUMBER, 
	"DATA_BUFFER_SIZE" NUMBER, 
	"DEGREE" NUMBER, 
	"PLATFORM" VARCHAR2(101 BYTE), 
	"ABORT_STEP" NUMBER, 
	"INSTANCE" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 10 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 LOB ("XML_CLOB") STORE AS BASICFILE (
  TABLESPACE "{{ item.0.tablespace_data }}" ENABLE STORAGE IN ROW CHUNK 8192 PCTVERSION 10
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON TABLE "SYS_EXPORT_SCHEMA_01"  IS 'Data Pump Master Table EXPORT                         SCHEMA                        ';
--------------------------------------------------------
--  DDL for Table SYS_EXPORT_SCHEMA_02
--------------------------------------------------------

  CREATE TABLE "SYS_EXPORT_SCHEMA_02" 
   (	"PROCESS_ORDER" NUMBER, 
	"DUPLICATE" NUMBER, 
	"DUMP_FILEID" NUMBER, 
	"DUMP_POSITION" NUMBER, 
	"DUMP_LENGTH" NUMBER, 
	"DUMP_ALLOCATION" NUMBER, 
	"COMPLETED_ROWS" NUMBER, 
	"ERROR_COUNT" NUMBER, 
	"ELAPSED_TIME" NUMBER, 
	"OBJECT_TYPE_PATH" VARCHAR2(200 BYTE), 
	"OBJECT_PATH_SEQNO" NUMBER, 
	"OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"IN_PROGRESS" CHAR(1 BYTE), 
	"OBJECT_NAME" VARCHAR2(500 BYTE), 
	"OBJECT_LONG_NAME" VARCHAR2(4000 BYTE), 
	"OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ORIGINAL_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"PARTITION_NAME" VARCHAR2(30 BYTE), 
	"SUBPARTITION_NAME" VARCHAR2(30 BYTE), 
	"FLAGS" NUMBER, 
	"PROPERTY" NUMBER, 
	"COMPLETION_TIME" DATE, 
	"OBJECT_TABLESPACE" VARCHAR2(30 BYTE), 
	"SIZE_ESTIMATE" NUMBER, 
	"OBJECT_ROW" NUMBER, 
	"PROCESSING_STATE" CHAR(1 BYTE), 
	"PROCESSING_STATUS" CHAR(1 BYTE), 
	"BASE_PROCESS_ORDER" NUMBER, 
	"BASE_OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_NAME" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ANCESTOR_PROCESS_ORDER" NUMBER, 
	"DOMAIN_PROCESS_ORDER" NUMBER, 
	"PARALLELIZATION" NUMBER, 
	"UNLOAD_METHOD" NUMBER, 
	"GRANULES" NUMBER, 
	"SCN" NUMBER, 
	"GRANTOR" VARCHAR2(30 BYTE), 
	"XML_CLOB" CLOB, 
	"NAME" VARCHAR2(30 BYTE), 
	"VALUE_T" VARCHAR2(4000 BYTE), 
	"VALUE_N" NUMBER, 
	"IS_DEFAULT" NUMBER, 
	"FILE_TYPE" NUMBER, 
	"USER_DIRECTORY" VARCHAR2(4000 BYTE), 
	"USER_FILE_NAME" VARCHAR2(4000 BYTE), 
	"FILE_NAME" VARCHAR2(4000 BYTE), 
	"EXTEND_SIZE" NUMBER, 
	"FILE_MAX_SIZE" NUMBER, 
	"PROCESS_NAME" VARCHAR2(30 BYTE), 
	"LAST_UPDATE" DATE, 
	"WORK_ITEM" VARCHAR2(30 BYTE), 
	"OBJECT_NUMBER" NUMBER, 
	"COMPLETED_BYTES" NUMBER, 
	"TOTAL_BYTES" NUMBER, 
	"METADATA_IO" NUMBER, 
	"DATA_IO" NUMBER, 
	"CUMULATIVE_TIME" NUMBER, 
	"PACKET_NUMBER" NUMBER, 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"SEED" NUMBER, 
	"LAST_FILE" NUMBER, 
	"USER_NAME" VARCHAR2(30 BYTE), 
	"OPERATION" VARCHAR2(30 BYTE), 
	"JOB_MODE" VARCHAR2(30 BYTE), 
	"CONTROL_QUEUE" VARCHAR2(30 BYTE), 
	"STATUS_QUEUE" VARCHAR2(30 BYTE), 
	"REMOTE_LINK" VARCHAR2(4000 BYTE), 
	"VERSION" NUMBER, 
	"DB_VERSION" VARCHAR2(30 BYTE), 
	"TIMEZONE" VARCHAR2(64 BYTE), 
	"STATE" VARCHAR2(30 BYTE), 
	"PHASE" NUMBER, 
	"GUID" RAW(16), 
	"START_TIME" DATE, 
	"BLOCK_SIZE" NUMBER, 
	"METADATA_BUFFER_SIZE" NUMBER, 
	"DATA_BUFFER_SIZE" NUMBER, 
	"DEGREE" NUMBER, 
	"PLATFORM" VARCHAR2(101 BYTE), 
	"ABORT_STEP" NUMBER, 
	"INSTANCE" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 10 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 LOB ("XML_CLOB") STORE AS BASICFILE (
  TABLESPACE "{{ item.0.tablespace_data }}" ENABLE STORAGE IN ROW CHUNK 8192 PCTVERSION 10
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON TABLE "SYS_EXPORT_SCHEMA_02"  IS 'Data Pump Master Table EXPORT                         SCHEMA                        ';
--------------------------------------------------------
--  DDL for Table SYS_EXPORT_SCHEMA_03
--------------------------------------------------------

  CREATE TABLE "SYS_EXPORT_SCHEMA_03" 
   (	"PROCESS_ORDER" NUMBER, 
	"DUPLICATE" NUMBER, 
	"DUMP_FILEID" NUMBER, 
	"DUMP_POSITION" NUMBER, 
	"DUMP_LENGTH" NUMBER, 
	"DUMP_ALLOCATION" NUMBER, 
	"COMPLETED_ROWS" NUMBER, 
	"ERROR_COUNT" NUMBER, 
	"ELAPSED_TIME" NUMBER, 
	"OBJECT_TYPE_PATH" VARCHAR2(200 BYTE), 
	"OBJECT_PATH_SEQNO" NUMBER, 
	"OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"IN_PROGRESS" CHAR(1 BYTE), 
	"OBJECT_NAME" VARCHAR2(500 BYTE), 
	"OBJECT_LONG_NAME" VARCHAR2(4000 BYTE), 
	"OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ORIGINAL_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"PARTITION_NAME" VARCHAR2(30 BYTE), 
	"SUBPARTITION_NAME" VARCHAR2(30 BYTE), 
	"FLAGS" NUMBER, 
	"PROPERTY" NUMBER, 
	"COMPLETION_TIME" DATE, 
	"OBJECT_TABLESPACE" VARCHAR2(30 BYTE), 
	"SIZE_ESTIMATE" NUMBER, 
	"OBJECT_ROW" NUMBER, 
	"PROCESSING_STATE" CHAR(1 BYTE), 
	"PROCESSING_STATUS" CHAR(1 BYTE), 
	"BASE_PROCESS_ORDER" NUMBER, 
	"BASE_OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_NAME" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ANCESTOR_PROCESS_ORDER" NUMBER, 
	"DOMAIN_PROCESS_ORDER" NUMBER, 
	"PARALLELIZATION" NUMBER, 
	"UNLOAD_METHOD" NUMBER, 
	"GRANULES" NUMBER, 
	"SCN" NUMBER, 
	"GRANTOR" VARCHAR2(30 BYTE), 
	"XML_CLOB" CLOB, 
	"NAME" VARCHAR2(30 BYTE), 
	"VALUE_T" VARCHAR2(4000 BYTE), 
	"VALUE_N" NUMBER, 
	"IS_DEFAULT" NUMBER, 
	"FILE_TYPE" NUMBER, 
	"USER_DIRECTORY" VARCHAR2(4000 BYTE), 
	"USER_FILE_NAME" VARCHAR2(4000 BYTE), 
	"FILE_NAME" VARCHAR2(4000 BYTE), 
	"EXTEND_SIZE" NUMBER, 
	"FILE_MAX_SIZE" NUMBER, 
	"PROCESS_NAME" VARCHAR2(30 BYTE), 
	"LAST_UPDATE" DATE, 
	"WORK_ITEM" VARCHAR2(30 BYTE), 
	"OBJECT_NUMBER" NUMBER, 
	"COMPLETED_BYTES" NUMBER, 
	"TOTAL_BYTES" NUMBER, 
	"METADATA_IO" NUMBER, 
	"DATA_IO" NUMBER, 
	"CUMULATIVE_TIME" NUMBER, 
	"PACKET_NUMBER" NUMBER, 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"SEED" NUMBER, 
	"LAST_FILE" NUMBER, 
	"USER_NAME" VARCHAR2(30 BYTE), 
	"OPERATION" VARCHAR2(30 BYTE), 
	"JOB_MODE" VARCHAR2(30 BYTE), 
	"CONTROL_QUEUE" VARCHAR2(30 BYTE), 
	"STATUS_QUEUE" VARCHAR2(30 BYTE), 
	"REMOTE_LINK" VARCHAR2(4000 BYTE), 
	"VERSION" NUMBER, 
	"DB_VERSION" VARCHAR2(30 BYTE), 
	"TIMEZONE" VARCHAR2(64 BYTE), 
	"STATE" VARCHAR2(30 BYTE), 
	"PHASE" NUMBER, 
	"GUID" RAW(16), 
	"START_TIME" DATE, 
	"BLOCK_SIZE" NUMBER, 
	"METADATA_BUFFER_SIZE" NUMBER, 
	"DATA_BUFFER_SIZE" NUMBER, 
	"DEGREE" NUMBER, 
	"PLATFORM" VARCHAR2(101 BYTE), 
	"ABORT_STEP" NUMBER, 
	"INSTANCE" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 10 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 LOB ("XML_CLOB") STORE AS BASICFILE (
  TABLESPACE "{{ item.0.tablespace_data }}" ENABLE STORAGE IN ROW CHUNK 8192 PCTVERSION 10
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON TABLE "SYS_EXPORT_SCHEMA_03"  IS 'Data Pump Master Table EXPORT                         SCHEMA                        ';
--------------------------------------------------------
--  DDL for Table SYS_EXPORT_SCHEMA_04
--------------------------------------------------------

  CREATE TABLE "SYS_EXPORT_SCHEMA_04" 
   (	"PROCESS_ORDER" NUMBER, 
	"DUPLICATE" NUMBER, 
	"DUMP_FILEID" NUMBER, 
	"DUMP_POSITION" NUMBER, 
	"DUMP_LENGTH" NUMBER, 
	"DUMP_ALLOCATION" NUMBER, 
	"COMPLETED_ROWS" NUMBER, 
	"ERROR_COUNT" NUMBER, 
	"ELAPSED_TIME" NUMBER, 
	"OBJECT_TYPE_PATH" VARCHAR2(200 BYTE), 
	"OBJECT_PATH_SEQNO" NUMBER, 
	"OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"IN_PROGRESS" CHAR(1 BYTE), 
	"OBJECT_NAME" VARCHAR2(500 BYTE), 
	"OBJECT_LONG_NAME" VARCHAR2(4000 BYTE), 
	"OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ORIGINAL_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"PARTITION_NAME" VARCHAR2(30 BYTE), 
	"SUBPARTITION_NAME" VARCHAR2(30 BYTE), 
	"FLAGS" NUMBER, 
	"PROPERTY" NUMBER, 
	"COMPLETION_TIME" DATE, 
	"OBJECT_TABLESPACE" VARCHAR2(30 BYTE), 
	"SIZE_ESTIMATE" NUMBER, 
	"OBJECT_ROW" NUMBER, 
	"PROCESSING_STATE" CHAR(1 BYTE), 
	"PROCESSING_STATUS" CHAR(1 BYTE), 
	"BASE_PROCESS_ORDER" NUMBER, 
	"BASE_OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_NAME" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ANCESTOR_PROCESS_ORDER" NUMBER, 
	"DOMAIN_PROCESS_ORDER" NUMBER, 
	"PARALLELIZATION" NUMBER, 
	"UNLOAD_METHOD" NUMBER, 
	"GRANULES" NUMBER, 
	"SCN" NUMBER, 
	"GRANTOR" VARCHAR2(30 BYTE), 
	"XML_CLOB" CLOB, 
	"NAME" VARCHAR2(30 BYTE), 
	"VALUE_T" VARCHAR2(4000 BYTE), 
	"VALUE_N" NUMBER, 
	"IS_DEFAULT" NUMBER, 
	"FILE_TYPE" NUMBER, 
	"USER_DIRECTORY" VARCHAR2(4000 BYTE), 
	"USER_FILE_NAME" VARCHAR2(4000 BYTE), 
	"FILE_NAME" VARCHAR2(4000 BYTE), 
	"EXTEND_SIZE" NUMBER, 
	"FILE_MAX_SIZE" NUMBER, 
	"PROCESS_NAME" VARCHAR2(30 BYTE), 
	"LAST_UPDATE" DATE, 
	"WORK_ITEM" VARCHAR2(30 BYTE), 
	"OBJECT_NUMBER" NUMBER, 
	"COMPLETED_BYTES" NUMBER, 
	"TOTAL_BYTES" NUMBER, 
	"METADATA_IO" NUMBER, 
	"DATA_IO" NUMBER, 
	"CUMULATIVE_TIME" NUMBER, 
	"PACKET_NUMBER" NUMBER, 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"SEED" NUMBER, 
	"LAST_FILE" NUMBER, 
	"USER_NAME" VARCHAR2(30 BYTE), 
	"OPERATION" VARCHAR2(30 BYTE), 
	"JOB_MODE" VARCHAR2(30 BYTE), 
	"CONTROL_QUEUE" VARCHAR2(30 BYTE), 
	"STATUS_QUEUE" VARCHAR2(30 BYTE), 
	"REMOTE_LINK" VARCHAR2(4000 BYTE), 
	"VERSION" NUMBER, 
	"DB_VERSION" VARCHAR2(30 BYTE), 
	"TIMEZONE" VARCHAR2(64 BYTE), 
	"STATE" VARCHAR2(30 BYTE), 
	"PHASE" NUMBER, 
	"GUID" RAW(16), 
	"START_TIME" DATE, 
	"BLOCK_SIZE" NUMBER, 
	"METADATA_BUFFER_SIZE" NUMBER, 
	"DATA_BUFFER_SIZE" NUMBER, 
	"DEGREE" NUMBER, 
	"PLATFORM" VARCHAR2(101 BYTE), 
	"ABORT_STEP" NUMBER, 
	"INSTANCE" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 10 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 LOB ("XML_CLOB") STORE AS BASICFILE (
  TABLESPACE "{{ item.0.tablespace_data }}" ENABLE STORAGE IN ROW CHUNK 8192 PCTVERSION 10
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON TABLE "SYS_EXPORT_SCHEMA_04"  IS 'Data Pump Master Table EXPORT                         SCHEMA                        ';
--------------------------------------------------------
--  DDL for Table SYS_EXPORT_SCHEMA_05
--------------------------------------------------------

  CREATE TABLE "SYS_EXPORT_SCHEMA_05" 
   (	"PROCESS_ORDER" NUMBER, 
	"DUPLICATE" NUMBER, 
	"DUMP_FILEID" NUMBER, 
	"DUMP_POSITION" NUMBER, 
	"DUMP_LENGTH" NUMBER, 
	"DUMP_ALLOCATION" NUMBER, 
	"COMPLETED_ROWS" NUMBER, 
	"ERROR_COUNT" NUMBER, 
	"ELAPSED_TIME" NUMBER, 
	"OBJECT_TYPE_PATH" VARCHAR2(200 BYTE), 
	"OBJECT_PATH_SEQNO" NUMBER, 
	"OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"IN_PROGRESS" CHAR(1 BYTE), 
	"OBJECT_NAME" VARCHAR2(500 BYTE), 
	"OBJECT_LONG_NAME" VARCHAR2(4000 BYTE), 
	"OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ORIGINAL_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"PARTITION_NAME" VARCHAR2(30 BYTE), 
	"SUBPARTITION_NAME" VARCHAR2(30 BYTE), 
	"FLAGS" NUMBER, 
	"PROPERTY" NUMBER, 
	"COMPLETION_TIME" DATE, 
	"OBJECT_TABLESPACE" VARCHAR2(30 BYTE), 
	"SIZE_ESTIMATE" NUMBER, 
	"OBJECT_ROW" NUMBER, 
	"PROCESSING_STATE" CHAR(1 BYTE), 
	"PROCESSING_STATUS" CHAR(1 BYTE), 
	"BASE_PROCESS_ORDER" NUMBER, 
	"BASE_OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_NAME" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ANCESTOR_PROCESS_ORDER" NUMBER, 
	"DOMAIN_PROCESS_ORDER" NUMBER, 
	"PARALLELIZATION" NUMBER, 
	"UNLOAD_METHOD" NUMBER, 
	"GRANULES" NUMBER, 
	"SCN" NUMBER, 
	"GRANTOR" VARCHAR2(30 BYTE), 
	"XML_CLOB" CLOB, 
	"NAME" VARCHAR2(30 BYTE), 
	"VALUE_T" VARCHAR2(4000 BYTE), 
	"VALUE_N" NUMBER, 
	"IS_DEFAULT" NUMBER, 
	"FILE_TYPE" NUMBER, 
	"USER_DIRECTORY" VARCHAR2(4000 BYTE), 
	"USER_FILE_NAME" VARCHAR2(4000 BYTE), 
	"FILE_NAME" VARCHAR2(4000 BYTE), 
	"EXTEND_SIZE" NUMBER, 
	"FILE_MAX_SIZE" NUMBER, 
	"PROCESS_NAME" VARCHAR2(30 BYTE), 
	"LAST_UPDATE" DATE, 
	"WORK_ITEM" VARCHAR2(30 BYTE), 
	"OBJECT_NUMBER" NUMBER, 
	"COMPLETED_BYTES" NUMBER, 
	"TOTAL_BYTES" NUMBER, 
	"METADATA_IO" NUMBER, 
	"DATA_IO" NUMBER, 
	"CUMULATIVE_TIME" NUMBER, 
	"PACKET_NUMBER" NUMBER, 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"SEED" NUMBER, 
	"LAST_FILE" NUMBER, 
	"USER_NAME" VARCHAR2(30 BYTE), 
	"OPERATION" VARCHAR2(30 BYTE), 
	"JOB_MODE" VARCHAR2(30 BYTE), 
	"CONTROL_QUEUE" VARCHAR2(30 BYTE), 
	"STATUS_QUEUE" VARCHAR2(30 BYTE), 
	"REMOTE_LINK" VARCHAR2(4000 BYTE), 
	"VERSION" NUMBER, 
	"DB_VERSION" VARCHAR2(30 BYTE), 
	"TIMEZONE" VARCHAR2(64 BYTE), 
	"STATE" VARCHAR2(30 BYTE), 
	"PHASE" NUMBER, 
	"GUID" RAW(16), 
	"START_TIME" DATE, 
	"BLOCK_SIZE" NUMBER, 
	"METADATA_BUFFER_SIZE" NUMBER, 
	"DATA_BUFFER_SIZE" NUMBER, 
	"DEGREE" NUMBER, 
	"PLATFORM" VARCHAR2(101 BYTE), 
	"ABORT_STEP" NUMBER, 
	"INSTANCE" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 10 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 LOB ("XML_CLOB") STORE AS BASICFILE (
  TABLESPACE "{{ item.0.tablespace_data }}" ENABLE STORAGE IN ROW CHUNK 8192 PCTVERSION 10
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON TABLE "SYS_EXPORT_SCHEMA_05"  IS 'Data Pump Master Table EXPORT                         SCHEMA                        ';
--------------------------------------------------------
--  DDL for Table SYS_EXPORT_SCHEMA_06
--------------------------------------------------------

  CREATE TABLE "SYS_EXPORT_SCHEMA_06" 
   (	"PROCESS_ORDER" NUMBER, 
	"DUPLICATE" NUMBER, 
	"DUMP_FILEID" NUMBER, 
	"DUMP_POSITION" NUMBER, 
	"DUMP_LENGTH" NUMBER, 
	"DUMP_ALLOCATION" NUMBER, 
	"COMPLETED_ROWS" NUMBER, 
	"ERROR_COUNT" NUMBER, 
	"ELAPSED_TIME" NUMBER, 
	"OBJECT_TYPE_PATH" VARCHAR2(200 BYTE), 
	"OBJECT_PATH_SEQNO" NUMBER, 
	"OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"IN_PROGRESS" CHAR(1 BYTE), 
	"OBJECT_NAME" VARCHAR2(500 BYTE), 
	"OBJECT_LONG_NAME" VARCHAR2(4000 BYTE), 
	"OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ORIGINAL_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"PARTITION_NAME" VARCHAR2(30 BYTE), 
	"SUBPARTITION_NAME" VARCHAR2(30 BYTE), 
	"FLAGS" NUMBER, 
	"PROPERTY" NUMBER, 
	"COMPLETION_TIME" DATE, 
	"OBJECT_TABLESPACE" VARCHAR2(30 BYTE), 
	"SIZE_ESTIMATE" NUMBER, 
	"OBJECT_ROW" NUMBER, 
	"PROCESSING_STATE" CHAR(1 BYTE), 
	"PROCESSING_STATUS" CHAR(1 BYTE), 
	"BASE_PROCESS_ORDER" NUMBER, 
	"BASE_OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_NAME" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ANCESTOR_PROCESS_ORDER" NUMBER, 
	"DOMAIN_PROCESS_ORDER" NUMBER, 
	"PARALLELIZATION" NUMBER, 
	"UNLOAD_METHOD" NUMBER, 
	"GRANULES" NUMBER, 
	"SCN" NUMBER, 
	"GRANTOR" VARCHAR2(30 BYTE), 
	"XML_CLOB" CLOB, 
	"NAME" VARCHAR2(30 BYTE), 
	"VALUE_T" VARCHAR2(4000 BYTE), 
	"VALUE_N" NUMBER, 
	"IS_DEFAULT" NUMBER, 
	"FILE_TYPE" NUMBER, 
	"USER_DIRECTORY" VARCHAR2(4000 BYTE), 
	"USER_FILE_NAME" VARCHAR2(4000 BYTE), 
	"FILE_NAME" VARCHAR2(4000 BYTE), 
	"EXTEND_SIZE" NUMBER, 
	"FILE_MAX_SIZE" NUMBER, 
	"PROCESS_NAME" VARCHAR2(30 BYTE), 
	"LAST_UPDATE" DATE, 
	"WORK_ITEM" VARCHAR2(30 BYTE), 
	"OBJECT_NUMBER" NUMBER, 
	"COMPLETED_BYTES" NUMBER, 
	"TOTAL_BYTES" NUMBER, 
	"METADATA_IO" NUMBER, 
	"DATA_IO" NUMBER, 
	"CUMULATIVE_TIME" NUMBER, 
	"PACKET_NUMBER" NUMBER, 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"SEED" NUMBER, 
	"LAST_FILE" NUMBER, 
	"USER_NAME" VARCHAR2(30 BYTE), 
	"OPERATION" VARCHAR2(30 BYTE), 
	"JOB_MODE" VARCHAR2(30 BYTE), 
	"CONTROL_QUEUE" VARCHAR2(30 BYTE), 
	"STATUS_QUEUE" VARCHAR2(30 BYTE), 
	"REMOTE_LINK" VARCHAR2(4000 BYTE), 
	"VERSION" NUMBER, 
	"DB_VERSION" VARCHAR2(30 BYTE), 
	"TIMEZONE" VARCHAR2(64 BYTE), 
	"STATE" VARCHAR2(30 BYTE), 
	"PHASE" NUMBER, 
	"GUID" RAW(16), 
	"START_TIME" DATE, 
	"BLOCK_SIZE" NUMBER, 
	"METADATA_BUFFER_SIZE" NUMBER, 
	"DATA_BUFFER_SIZE" NUMBER, 
	"DEGREE" NUMBER, 
	"PLATFORM" VARCHAR2(101 BYTE), 
	"ABORT_STEP" NUMBER, 
	"INSTANCE" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 10 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 LOB ("XML_CLOB") STORE AS BASICFILE (
  TABLESPACE "{{ item.0.tablespace_data }}" ENABLE STORAGE IN ROW CHUNK 8192 PCTVERSION 10
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON TABLE "SYS_EXPORT_SCHEMA_06"  IS 'Data Pump Master Table EXPORT                         SCHEMA                        ';
--------------------------------------------------------
--  DDL for Table SYS_EXPORT_SCHEMA_07
--------------------------------------------------------

  CREATE TABLE "SYS_EXPORT_SCHEMA_07" 
   (	"PROCESS_ORDER" NUMBER, 
	"DUPLICATE" NUMBER, 
	"DUMP_FILEID" NUMBER, 
	"DUMP_POSITION" NUMBER, 
	"DUMP_LENGTH" NUMBER, 
	"DUMP_ORIG_LENGTH" NUMBER, 
	"DUMP_ALLOCATION" NUMBER, 
	"COMPLETED_ROWS" NUMBER, 
	"ERROR_COUNT" NUMBER, 
	"ELAPSED_TIME" NUMBER, 
	"OBJECT_TYPE_PATH" VARCHAR2(200 BYTE), 
	"OBJECT_PATH_SEQNO" NUMBER, 
	"OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"IN_PROGRESS" CHAR(1 BYTE), 
	"OBJECT_NAME" VARCHAR2(500 BYTE), 
	"OBJECT_LONG_NAME" VARCHAR2(4000 BYTE), 
	"OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ORIGINAL_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ORIGINAL_OBJECT_NAME" VARCHAR2(4000 BYTE), 
	"PARTITION_NAME" VARCHAR2(30 BYTE), 
	"SUBPARTITION_NAME" VARCHAR2(30 BYTE), 
	"DATAOBJ_NUM" NUMBER, 
	"FLAGS" NUMBER, 
	"PROPERTY" NUMBER, 
	"TRIGFLAG" NUMBER, 
	"CREATION_LEVEL" NUMBER, 
	"COMPLETION_TIME" DATE, 
	"OBJECT_TABLESPACE" VARCHAR2(30 BYTE), 
	"SIZE_ESTIMATE" NUMBER, 
	"OBJECT_ROW" NUMBER, 
	"PROCESSING_STATE" CHAR(1 BYTE), 
	"PROCESSING_STATUS" CHAR(1 BYTE), 
	"BASE_PROCESS_ORDER" NUMBER, 
	"BASE_OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_NAME" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ORIG_BASE_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ANCESTOR_PROCESS_ORDER" NUMBER, 
	"DOMAIN_PROCESS_ORDER" NUMBER, 
	"PARALLELIZATION" NUMBER, 
	"UNLOAD_METHOD" NUMBER, 
	"LOAD_METHOD" NUMBER, 
	"GRANULES" NUMBER, 
	"SCN" NUMBER, 
	"GRANTOR" VARCHAR2(30 BYTE), 
	"XML_CLOB" CLOB, 
	"TARGET_XML_CLOB" CLOB, 
	"PARENT_PROCESS_ORDER" NUMBER, 
	"TDE_REWRAPPED_KEY" RAW(2000), 
	"TEMPLATE_TABLE" VARCHAR2(30 BYTE), 
	"OPTION_TAG" VARCHAR2(30 BYTE), 
	"NAME" VARCHAR2(30 BYTE), 
	"VALUE_T" VARCHAR2(4000 BYTE), 
	"VALUE_N" NUMBER, 
	"IS_DEFAULT" NUMBER, 
	"FILE_TYPE" NUMBER, 
	"USER_DIRECTORY" VARCHAR2(4000 BYTE), 
	"USER_FILE_NAME" VARCHAR2(4000 BYTE), 
	"FILE_NAME" VARCHAR2(4000 BYTE), 
	"EXTEND_SIZE" NUMBER, 
	"FILE_MAX_SIZE" NUMBER, 
	"PROCESS_NAME" VARCHAR2(30 BYTE), 
	"LAST_UPDATE" DATE, 
	"WORK_ITEM" VARCHAR2(30 BYTE), 
	"OBJECT_NUMBER" NUMBER, 
	"COMPLETED_BYTES" NUMBER, 
	"TOTAL_BYTES" NUMBER, 
	"METADATA_IO" NUMBER, 
	"DATA_IO" NUMBER, 
	"CUMULATIVE_TIME" NUMBER, 
	"PACKET_NUMBER" NUMBER, 
	"INSTANCE_ID" NUMBER, 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"SEED" NUMBER, 
	"LAST_FILE" NUMBER, 
	"USER_NAME" VARCHAR2(30 BYTE), 
	"OPERATION" VARCHAR2(30 BYTE), 
	"JOB_MODE" VARCHAR2(30 BYTE), 
	"QUEUE_TABNUM" NUMBER, 
	"CONTROL_QUEUE" VARCHAR2(30 BYTE), 
	"STATUS_QUEUE" VARCHAR2(30 BYTE), 
	"REMOTE_LINK" VARCHAR2(4000 BYTE), 
	"VERSION" NUMBER, 
	"JOB_VERSION" VARCHAR2(30 BYTE), 
	"DB_VERSION" VARCHAR2(30 BYTE), 
	"TIMEZONE" VARCHAR2(64 BYTE), 
	"STATE" VARCHAR2(30 BYTE), 
	"PHASE" NUMBER, 
	"GUID" RAW(16), 
	"START_TIME" DATE, 
	"BLOCK_SIZE" NUMBER, 
	"METADATA_BUFFER_SIZE" NUMBER, 
	"DATA_BUFFER_SIZE" NUMBER, 
	"DEGREE" NUMBER, 
	"PLATFORM" VARCHAR2(101 BYTE), 
	"ABORT_STEP" NUMBER, 
	"INSTANCE" VARCHAR2(60 BYTE), 
	"CLUSTER_OK" NUMBER, 
	"SERVICE_NAME" VARCHAR2(100 BYTE), 
	"OBJECT_INT_OID" VARCHAR2(32 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 10 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 LOB ("XML_CLOB") STORE AS SECUREFILE (
  TABLESPACE "{{ item.0.tablespace_data }}" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("TARGET_XML_CLOB") STORE AS SECUREFILE (
  TABLESPACE "{{ item.0.tablespace_data }}" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON TABLE "SYS_EXPORT_SCHEMA_07"  IS 'Data Pump Master Table EXPORT                         SCHEMA                        ';
--------------------------------------------------------
--  DDL for Table SYS_EXPORT_SCHEMA_08
--------------------------------------------------------

  CREATE TABLE "SYS_EXPORT_SCHEMA_08" 
   (	"ABORT_STEP" NUMBER, 
	"ANCESTOR_PROCESS_ORDER" NUMBER, 
	"BASE_OBJECT_NAME" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"BASE_OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"BASE_PROCESS_ORDER" NUMBER, 
	"BLOCK_SIZE" NUMBER, 
	"CLUSTER_OK" NUMBER, 
	"COMPLETED_BYTES" NUMBER, 
	"COMPLETED_ROWS" NUMBER, 
	"COMPLETION_TIME" DATE, 
	"CONTROL_QUEUE" VARCHAR2(30 BYTE), 
	"CREATION_LEVEL" NUMBER, 
	"CUMULATIVE_TIME" NUMBER, 
	"DATA_BUFFER_SIZE" NUMBER, 
	"DATA_IO" NUMBER, 
	"DATAOBJ_NUM" NUMBER, 
	"DB_VERSION" VARCHAR2(60 BYTE), 
	"DEGREE" NUMBER, 
	"DOMAIN_PROCESS_ORDER" NUMBER, 
	"DUMP_ALLOCATION" NUMBER, 
	"DUMP_FILEID" NUMBER, 
	"DUMP_LENGTH" NUMBER, 
	"DUMP_ORIG_LENGTH" NUMBER, 
	"DUMP_POSITION" NUMBER, 
	"DUPLICATE" NUMBER, 
	"ELAPSED_TIME" NUMBER, 
	"ERROR_COUNT" NUMBER, 
	"EXTEND_SIZE" NUMBER, 
	"FILE_MAX_SIZE" NUMBER, 
	"FILE_NAME" VARCHAR2(4000 BYTE), 
	"FILE_TYPE" NUMBER, 
	"FLAGS" NUMBER, 
	"GRANTOR" VARCHAR2(30 BYTE), 
	"GRANULES" NUMBER, 
	"GUID" RAW(16), 
	"IN_PROGRESS" CHAR(1 BYTE), 
	"INSTANCE" VARCHAR2(60 BYTE), 
	"INSTANCE_ID" NUMBER, 
	"IS_DEFAULT" NUMBER, 
	"JOB_MODE" VARCHAR2(21 BYTE), 
	"JOB_VERSION" VARCHAR2(60 BYTE), 
	"LAST_FILE" NUMBER, 
	"LAST_UPDATE" DATE, 
	"LOAD_METHOD" NUMBER, 
	"METADATA_BUFFER_SIZE" NUMBER, 
	"METADATA_IO" NUMBER, 
	"NAME" VARCHAR2(30 BYTE), 
	"OBJECT_INT_OID" VARCHAR2(32 BYTE), 
	"OBJECT_LONG_NAME" VARCHAR2(4000 BYTE), 
	"OBJECT_NAME" VARCHAR2(200 BYTE), 
	"OBJECT_NUMBER" NUMBER, 
	"OBJECT_PATH_SEQNO" NUMBER, 
	"OBJECT_ROW" NUMBER, 
	"OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"OBJECT_TABLESPACE" VARCHAR2(30 BYTE), 
	"OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"OBJECT_TYPE_PATH" VARCHAR2(200 BYTE), 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"OPERATION" VARCHAR2(8 BYTE), 
	"OPTION_TAG" VARCHAR2(30 BYTE), 
	"ORIG_BASE_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"ORIGINAL_OBJECT_NAME" VARCHAR2(128 BYTE), 
	"ORIGINAL_OBJECT_SCHEMA" VARCHAR2(30 BYTE), 
	"PACKET_NUMBER" NUMBER, 
	"PARALLELIZATION" NUMBER, 
	"PARENT_PROCESS_ORDER" NUMBER, 
	"PARTITION_NAME" VARCHAR2(30 BYTE), 
	"PHASE" NUMBER, 
	"PLATFORM" VARCHAR2(101 BYTE), 
	"PROCESS_NAME" VARCHAR2(30 BYTE), 
	"PROCESS_ORDER" NUMBER, 
	"PROCESSING_STATE" CHAR(1 BYTE), 
	"PROCESSING_STATUS" CHAR(1 BYTE), 
	"PROPERTY" NUMBER, 
	"QUEUE_TABNUM" NUMBER, 
	"REMOTE_LINK" VARCHAR2(128 BYTE), 
	"SCN" NUMBER, 
	"SEED" NUMBER, 
	"SERVICE_NAME" VARCHAR2(64 BYTE), 
	"SIZE_ESTIMATE" NUMBER, 
	"START_TIME" DATE, 
	"STATE" VARCHAR2(12 BYTE), 
	"STATUS_QUEUE" VARCHAR2(30 BYTE), 
	"SUBPARTITION_NAME" VARCHAR2(30 BYTE), 
	"TARGET_XML_CLOB" CLOB, 
	"TDE_REWRAPPED_KEY" RAW(2000), 
	"TEMPLATE_TABLE" VARCHAR2(30 BYTE), 
	"TIMEZONE" VARCHAR2(64 BYTE), 
	"TOTAL_BYTES" NUMBER, 
	"TRIGFLAG" NUMBER, 
	"UNLOAD_METHOD" NUMBER, 
	"USER_DIRECTORY" VARCHAR2(4000 BYTE), 
	"USER_FILE_NAME" VARCHAR2(4000 BYTE), 
	"USER_NAME" VARCHAR2(30 BYTE), 
	"VALUE_N" NUMBER, 
	"VALUE_T" VARCHAR2(4000 BYTE), 
	"VERSION" NUMBER, 
	"WORK_ITEM" VARCHAR2(21 BYTE), 
	"XML_CLOB" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 10 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
 LOB ("TARGET_XML_CLOB") STORE AS SECUREFILE (
  TABLESPACE "{{ item.0.tablespace_data }}" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("XML_CLOB") STORE AS SECUREFILE (
  TABLESPACE "{{ item.0.tablespace_data }}" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON TABLE "SYS_EXPORT_SCHEMA_08"  IS 'Data Pump Master Table EXPORT                         SCHEMA                        ';
--------------------------------------------------------
--  DDL for Table TEMP_PKG
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "TEMP_PKG" 
   (	"ID_PKG" NUMBER, 
	"CLOB_PKG" CLOB
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table TEMP_TABLE
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "TEMP_TABLE" 
   (	"LLL" NUMBER
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table TEMP_TEST_YII
--------------------------------------------------------

  CREATE TABLE "TEMP_TEST_YII" 
   (	"ID_RADACT" NUMBER(*,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"MNC" NUMBER(3,0), 
	"MCC" NUMBER(3,0), 
	"IMEI" VARCHAR2(15 BYTE), 
	"IMEI_SW_VERSION" VARCHAR2(2 BYTE), 
	"RAT_TYPE" NUMBER(2,0), 
	"FLAG_MISSING" NUMBER(1,0), 
	"UPDATE_DATE" DATE, 
	"NAS_IDENTIFIER" VARCHAR2(40 BYTE), 
	"ID_CLIENT" NUMBER(10,0), 
	"CL_MOD_CLIENT" NUMBER(5,0), 
	"MONTH_ACCTSTARTTIME" NUMBER(2,0), 
	"SGSN_ADDRESS" VARCHAR2(30 BYTE), 
	"CONN_CLOSED" NUMBER, 
	"ID_GGSN" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table TESTCRUD
--------------------------------------------------------

  CREATE TABLE "TESTCRUD" 
   (	"THREAD" VARCHAR2(50 BYTE), 
	"OPER" VARCHAR2(50 BYTE), 
	"PROGR" NUMBER(5,0), 
	"RANDSTR" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table TESTCRUD_2
--------------------------------------------------------

  CREATE TABLE "TESTCRUD_2" 
   (	"THREAD" VARCHAR2(50 BYTE), 
	"OPER" VARCHAR2(50 BYTE), 
	"PROGR" NUMBER(5,0), 
	"THREAD3" VARCHAR2(50 BYTE), 
	"OPER3" VARCHAR2(50 BYTE), 
	"PROGR3" NUMBER(5,0), 
	"RANDSTR2" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table TESTCRUD_3
--------------------------------------------------------

  CREATE TABLE "TESTCRUD_3" 
   (	"THREAD3" VARCHAR2(50 BYTE), 
	"OPER3" VARCHAR2(50 BYTE), 
	"PROGR3" NUMBER(5,0), 
	"RANDSTR3" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table TESTUPDATE
--------------------------------------------------------

  CREATE TABLE "TESTUPDATE" 
   (	"PROVA" NUMBER, 
	"CHIAVE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table THRESHOLD
--------------------------------------------------------

  CREATE TABLE "THRESHOLD" 
   (	"ID_THRESHOLD" NUMBER(10,0), 
	"ID_CLIENT" NUMBER(10,0), 
	"NAME" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"ID_MAP" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table THRESHOLD_DETAILS
--------------------------------------------------------

  CREATE TABLE "THRESHOLD_DETAILS" 
   (	"ID_THD" NUMBER(10,0), 
	"ID_AREA" NUMBER(5,0), 
	"ID_THRESHOLD" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE, 
	"TH_VALUE" NUMBER(5,0), 
	"ID_PERIOD" NUMBER(10,0), 
	"TYPE" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table TMP_PROVA_CANC
--------------------------------------------------------

  CREATE TABLE "TMP_PROVA_CANC" 
   (	"RESULT" NUMBER, 
	"ERROR_CODE" VARCHAR2(3 BYTE), 
	"ERROR_DESCR" VARCHAR2(3 BYTE), 
	"ACTIVE" NUMBER, 
	"FIXED_IP" NUMBER, 
	"IP" VARCHAR2(30 BYTE), 
	"LAST_CONN" VARCHAR2(19 BYTE), 
	"LAST_DURATION" NUMBER, 
	"LAST_TOTBYTE" NUMBER, 
	"MSISDN" VARCHAR2(4000 BYTE), 
	"ID_GROUP" NUMBER, 
	"CONNECTABLE" NUMBER, 
	"CONTRACT" VARCHAR2(100 BYTE), 
	"TYPE" NUMBER, 
	"CNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table TRANSFORM_SET
--------------------------------------------------------

  CREATE TABLE "TRANSFORM_SET" 
   (	"ID_TS" NUMBER(10,0), 
	"ID_DEVICE" NUMBER(10,0), 
	"TYPE_IKE" VARCHAR2(100 BYTE), 
	"NAME" VARCHAR2(100 BYTE), 
	"VALUE_CRYPTO" VARCHAR2(200 BYTE), 
	"VALUE_HASH" VARCHAR2(200 BYTE), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"IPSEC_MODE" VARCHAR2(50 BYTE) DEFAULT 'TUNNEL'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table TSET_CRYPTO
--------------------------------------------------------

  CREATE TABLE "TSET_CRYPTO" 
   (	"ID_TS" NUMBER(10,0), 
	"ID_CPP" NUMBER(10,0), 
	"CREATION_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table TUNNEL_GROUP
--------------------------------------------------------

  CREATE TABLE "TUNNEL_GROUP" 
   (	"ID_TG" NUMBER(10,0), 
	"ID_DEVICE" NUMBER(10,0), 
	"DEFAULT_GRP" NUMBER(10,0), 
	"TYPE" VARCHAR2(100 BYTE), 
	"PRE_SHARED_KEY" VARCHAR2(30 BYTE), 
	"FLAG_LOAD" NUMBER(1,0) DEFAULT 0, 
	"NAME" VARCHAR2(64 BYTE), 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"FLAG_REMOVING" NUMBER(1,0), 
	"IPSEC_TYPE" VARCHAR2(10 BYTE) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table USER_FUNCTIONS
--------------------------------------------------------

  CREATE TABLE "USER_FUNCTIONS" 
   (	"ID_ACCOUNT" NUMBER(10,0), 
	"USERNAME" VARCHAR2(200 BYTE), 
	"ID_FUNCTION" NUMBER(10,0), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table USER_FUNCTIONS_PARAMS
--------------------------------------------------------

  CREATE TABLE "USER_FUNCTIONS_PARAMS" 
   (	"USERNAME" VARCHAR2(200 BYTE), 
	"ID_FUNCTION" NUMBER(10,0), 
	"PARAM_KEY" VARCHAR2(100 BYTE), 
	"PARAM_VALUE" VARCHAR2(2000 BYTE), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table VPNHOST_SUBNET
--------------------------------------------------------

  CREATE TABLE "VPNHOST_SUBNET" 
   (	"OC1" NUMBER(3,0), 
	"OC2" NUMBER(3,0), 
	"OC3" NUMBER(3,0), 
	"OC4" NUMBER(3,0), 
	"L2L_FLAG" NUMBER(1,0), 
	"ID_APN" NUMBER(10,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table VPNHOST_SUBNET_OC1
--------------------------------------------------------

  CREATE TABLE "VPNHOST_SUBNET_OC1" 
   (	"OC1" NUMBER(3,0), 
	"ID_APN" NUMBER(10,0) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table VPN_ACCESS_PARAMS
--------------------------------------------------------

  CREATE TABLE "VPN_ACCESS_PARAMS" 
   (	"ID_VPN" NUMBER(10,0), 
	"PARAM" VARCHAR2(100 BYTE), 
	"PARAM_VALUE" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table VPN_CONF_PARAMS
--------------------------------------------------------

  CREATE TABLE "VPN_CONF_PARAMS" 
   (	"ID_VPN" NUMBER(10,0), 
	"ID_VPN_CONF" NUMBER(10,0), 
	"PARAM" VARCHAR2(100 BYTE), 
	"PARAM_VALUE" VARCHAR2(100 BYTE), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table VPN_DETAIL_POOL
--------------------------------------------------------

  CREATE TABLE "VPN_DETAIL_POOL" 
   (	"ID_VSUBNET" NUMBER(10,0), 
	"IP_ADDRESS" VARCHAR2(30 BYTE), 
	"ID_VPN" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table VPN_OBJ_GRP_MAP
--------------------------------------------------------

  CREATE TABLE "VPN_OBJ_GRP_MAP" 
   (	"ID_VPN" NUMBER(10,0), 
	"ID_OBJ_GRP" NUMBER(10,0), 
	"CREATION_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table VPN_POOL_SUBNET
--------------------------------------------------------

  CREATE TABLE "VPN_POOL_SUBNET" 
   (	"ID_VSUBNET" NUMBER(10,0), 
	"IP_PREFIX" VARCHAR2(30 BYTE), 
	"NETMASK" VARCHAR2(30 BYTE), 
	"FIRST_IP" VARCHAR2(30 BYTE), 
	"LAST_IP" VARCHAR2(30 BYTE), 
	"POOL_SIZE" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"FLAG_L2L" NUMBER(1,0) DEFAULT 0, 
	"ID_CLIENT" NUMBER(10,0), 
	"ID_SUB" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table VPN_RADACCT
--------------------------------------------------------

  CREATE TABLE "VPN_RADACCT" 
   (	"ID_VPN_RADACCT" NUMBER(*,0), 
	"ID_VPN" NUMBER(10,0), 
	"ID_CLIENT" NUMBER(10,0), 
	"CREATION_DATE" DATE, 
	"ACCTSESSIONID" VARCHAR2(32 BYTE), 
	"ACCTUNIQUEID" VARCHAR2(32 BYTE), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"REALM" VARCHAR2(30 BYTE), 
	"NASIPADDRESS" VARCHAR2(15 BYTE), 
	"NASPORTID" VARCHAR2(15 BYTE), 
	"NASPORTTYPE" VARCHAR2(32 BYTE), 
	"ACCTSTARTTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSTOPTIME" TIMESTAMP (6) WITH TIME ZONE, 
	"ACCTSESSIONTIME" NUMBER(19,0), 
	"ACCTAUTHENTIC" VARCHAR2(32 BYTE), 
	"CONNECTINFO_START" VARCHAR2(50 BYTE), 
	"CONNECTINFO_STOP" VARCHAR2(50 BYTE), 
	"ACCTINPUTOCTETS" NUMBER(19,0), 
	"ACCTOUTPUTOCTETS" NUMBER(19,0), 
	"CALLEDSTATIONID" VARCHAR2(50 BYTE), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"ACCTTERMINATECAUSE" VARCHAR2(32 BYTE), 
	"SERVICETYPE" VARCHAR2(32 BYTE), 
	"FRAMEDPROTOCOL" VARCHAR2(32 BYTE), 
	"FRAMEDIPADDRESS" VARCHAR2(15 BYTE), 
	"ACCTSTARTDELAY" NUMBER(12,0), 
	"ACCTSTOPDELAY" NUMBER(12,0), 
	"XASCENDSESSIONSVRKEY" VARCHAR2(10 BYTE), 
	"FLAG_MISSING" NUMBER(1,0) DEFAULT 0, 
	"UPDATE_DATE" DATE, 
	"CL_MOD_CLIENT" NUMBER(5,0) DEFAULT 0, 
	"MONTH_ACCTSTARTTIME" NUMBER(2,0) DEFAULT 0
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" 
  PARTITION BY RANGE ("MONTH_ACCTSTARTTIME") 
  SUBPARTITION BY LIST ("CL_MOD_CLIENT") 
  SUBPARTITION TEMPLATE ( 
    SUBPARTITION "CL_MOD_PRT_0" VALUES ( 0 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_1" VALUES ( 1 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_2" VALUES ( 2 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_3" VALUES ( 3 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_4" VALUES ( 4 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_5" VALUES ( 5 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_6" VALUES ( 6 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_7" VALUES ( 7 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_8" VALUES ( 8 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_9" VALUES ( 9 )
  TABLESPACE "{{ item.0.tablespace_data }}" , 
    SUBPARTITION "CL_MOD_PRT_10" VALUES ( 10 )
  TABLESPACE "{{ item.0.tablespace_data }}"  ) 
 (PARTITION "JAN_PRT"  VALUES LESS THAN (2) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "FEB_PRT"  VALUES LESS THAN (3) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MAR_PRT"  VALUES LESS THAN (4) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "APR_PRT"  VALUES LESS THAN (5) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "MAY_PRT"  VALUES LESS THAN (6) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "JUN_PRT"  VALUES LESS THAN (7) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "JUL_PRT"  VALUES LESS THAN (8) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "AUG_PRT"  VALUES LESS THAN (9) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "SEP_PRT"  VALUES LESS THAN (10) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "OCT_PRT"  VALUES LESS THAN (11) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "NOV_PRT"  VALUES LESS THAN (12) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" , 
 PARTITION "DEC_PRT"  VALUES LESS THAN (MAXVALUE) 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE ROW MOVEMENT ;
--------------------------------------------------------
--  DDL for Table VPN_STATUS
--------------------------------------------------------

  CREATE TABLE "VPN_STATUS" 
   (	"STATUS_CODE" VARCHAR2(30 BYTE), 
	"DESCR" VARCHAR2(150 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table VPN_TUN_GRP
--------------------------------------------------------

  CREATE TABLE "VPN_TUN_GRP" 
   (	"ID_VPN" NUMBER(10,0), 
	"FLAG_LOAD" NUMBER(1,0) DEFAULT 0, 
	"CREATION_DATE" DATE DEFAULT SYSDATE, 
	"UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"NAME_CPP" VARCHAR2(100 BYTE), 
	"SEQ_CPP" NUMBER(5,0), 
	"NAME_GP" VARCHAR2(100 BYTE), 
	"NAME_TG" VARCHAR2(100 BYTE), 
	"NAME_ACL_CRYPTO" VARCHAR2(100 BYTE), 
	"NAME_ACL_FILTER" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table VPN_TYPES
--------------------------------------------------------

  CREATE TABLE "VPN_TYPES" 
   (	"VPN_CODE" VARCHAR2(30 BYTE), 
	"VPN_DESCRIPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table WRK_EVENTHISTORY
--------------------------------------------------------

  CREATE TABLE "WRK_EVENTHISTORY" 
   (	"ID_EVENT" NUMBER(10,0), 
	"ID_CLIENT" NUMBER(10,0), 
	"ID_VPN" NUMBER(10,0), 
	"ID_GROUP" NUMBER(10,0), 
	"CALLINGSTATIONID" VARCHAR2(50 BYTE), 
	"EVENT_TYPE" VARCHAR2(20 BYTE), 
	"EVENT_LEVEL" VARCHAR2(20 BYTE), 
	"EVENT_MSG" VARCHAR2(4000 BYTE), 
	"CREATION_DATE" DATE, 
	"ID_RULE_PROFILE" NUMBER(10,0), 
	"COUNTER" NUMBER(10,0), 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for Table WRK_RADPOSTAUTH
--------------------------------------------------------

  CREATE TABLE "WRK_RADPOSTAUTH" 
   (	"ID" NUMBER(*,0), 
	"USERNAME" VARCHAR2(64 BYTE), 
	"PASS" VARCHAR2(64 BYTE), 
	"REPLY" VARCHAR2(32 BYTE), 
	"AUTHDATE" DATE, 
	"MSISDN" VARCHAR2(50 BYTE), 
	"NASIPADDRESS" VARCHAR2(30 BYTE), 
	"COUNTER" NUMBER(10,0), 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" ;
--------------------------------------------------------
--  DDL for View V_AREA_LIST
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_AREA_LIST" ("ID_MAP", "ID_AREA", "AREA_NAME") AS 
  SELECT AM.ID_MAP, AM.ID_AREA, AD.AREA_NAME
FROM AREA_DESC AD, AREA_MAP AM
WHERE AD.ID_AREA = AM.ID_AREA
ORDER BY AM.ID_MAP, AM.ID_AREA, AD.AREA_NAME
;
--------------------------------------------------------
--  DDL for View V_ERROR_CODES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_ERROR_CODES" ("CODE_ERROR", "DESCRIPTION") AS 
  SELECT CODE_ERROR, DESCRIPTION
FROM ERROR_CODE
;
--------------------------------------------------------
--  DDL for View V_FWPROF_GRP_NAV_MAP
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_FWPROF_GRP_NAV_MAP" ("ID_FW_PROFILE", "ID_SUBNET", "NAVIGATION_CRITERIA", "ID_GROUP") AS 
  select FWP2.ID_FW_PROFILE, GPS.ID_GSUBNET, FWP2.NAVIGATION_CRITERIA, FWP2.ID_GROUP
from
(
    select CFNM.*, CGM.ID_GROUP
    FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
         MASTER_DATA_CLIENTS MDC,
         FW_PROFILES FWP,
         CPROF_FWPROF_NAV_MAP CFNM,
         CPROF_GRP_MAP CGM
    WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
    AND MDC.FLAG_VALID = 1
    and MDC.CLOSING_FLAG is null
    AND FWP.STATUS NOT IN ('REMOVED')
    and FWP.CLOSING_FLAG is null
    and (
            (FWP.SYSTEM_FLAG = 1 AND FWP.ID_FUNCTION NOT IN (SELECT ID_FUNCTION FROM MASTER_DATA_FUNCTIONS WHERE FUNCTION_CODE = 'INTERNET'))
            OR FWP.SYSTEM_FLAG = 0
        )
    AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
    and MDC.ID_CLIENT = CAM.ID_CLIENT
    and MDC.ID_CLIENT = FWP.ID_CLIENT
    and FWP.ID_FW_PROFILE = CFNM.ID_FW_PROFILE
    and CGM.ID_CPROFILE = CFNM.ID_CPROFILE
    AND FWP.ID_CLIENT IN
    (
        SELECT MDR.ID_CLIENT
        FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
             MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
        WHERE MDR.ID_SERVICE = FS.ID_SERVICE
        AND MW.ID_GROUP = MDR.ID_GROUP
        AND FS.ID_FUNCTION = MDF.ID_FUNCTION
        AND MDF.FUNCTION_CODE = 'INTERNET'
    )
) FWP2 left join GROUP_POOL_SUBNET GPS
    on GPS.ID_GROUP = FWP2.ID_GROUP
    and GPS.ID_FW_PROFILE = FWP2.ID_FW_PROFILE
    AND GPS.ID_CPROFILE = FWP2.ID_CPROFILE
;
--------------------------------------------------------
--  DDL for View V_FW_CATEGORIES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_FW_CATEGORIES" ("CAT_ID", "CAT_GROUP_ID", "CAT_NAME") AS 
  SELECT CAT_ID, CAT_GROUP_ID, CAT_NAME
FROM FIREWALL_CATEGORIES
;
--------------------------------------------------------
--  DDL for View V_FW_CAT_GROUPS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_FW_CAT_GROUPS" ("CAT_GROUP_ID", "CAT_GROUP_NAME") AS 
  SELECT CAT_GROUP_ID, CAT_GROUP_NAME
FROM FIREWALL_CAT_GROUPS
;
--------------------------------------------------------
--  DDL for View V_FW_PROFILES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_FW_PROFILES" ("ID_FW_PROFILE", "NAME", "ID_CLIENT", "POLICY", "USED_COUNTER", "TYPE", "STATUS", "SERVICE_NAME", "CREATION_DATE", "UPDATE_DATE") AS 
  select FWP2.ID_FW_PROFILE, FWP2.name, 
       FWP2.ID_CLIENT,         
       CASE WHEN PLCY.PROFILE_POLICY IS NULL THEN 
               CASE WHEN FWP2.FLAG_POLICY = 0 THEN 'ACCEPT'
                    WHEN FWP2.FLAG_POLICY = 1 THEN 'BLOCK'
               END 
            ELSE PLCY.PROFILE_POLICY
       END AS POLICY,
       FWP2.USED_COUNTER, FWP2.SYSTEM_FLAG AS TYPE,
       CASE WHEN ( FWP2.IGNORE_RP_IDLE =  1 AND  FWP2.STATUS = 'IDLE') THEN 'ACTIVATED'       
       ELSE
               CASE WHEN PLCY.PROFILE_POLICY IS NULL THEN 
                       CASE WHEN FWP2.STATUS = 'ACTIVATED' AND FWP2.RULE_STATUS_CODE = 'ACTIVATED'
                                THEN FWP2.STATUS
                            WHEN FWP2.STATUS = 'ACTIVATED' AND FWP2.RULE_STATUS_CODE <> 'ACTIVATED'
                                THEN FWP2.RULE_STATUS_CODE
                            WHEN FWP2.STATUS <> 'ACTIVATED'
                                THEN FWP2.STATUS
                       END
                   ELSE 
                       CASE WHEN (
                                   CASE WHEN FWP2.STATUS = 'ACTIVATED' AND FWP2.RULE_STATUS_CODE = 'ACTIVATED'
                                            THEN FWP2.STATUS
                                        WHEN FWP2.STATUS = 'ACTIVATED' AND FWP2.RULE_STATUS_CODE <> 'ACTIVATED'
                                            THEN FWP2.RULE_STATUS_CODE
                                        WHEN FWP2.STATUS <> 'ACTIVATED'
                                            THEN FWP2.STATUS
                                   END
                               ) IN ('ACTIVATED', 'IDLE') THEN 'PENDING_ACTIVATION'
                       ELSE 
                           CASE WHEN FWP2.STATUS = 'ACTIVATED' AND FWP2.RULE_STATUS_CODE = 'ACTIVATED'
                                    THEN FWP2.STATUS
                                WHEN FWP2.STATUS = 'ACTIVATED' AND FWP2.RULE_STATUS_CODE <> 'ACTIVATED'
                                    THEN FWP2.RULE_STATUS_CODE
                                WHEN FWP2.STATUS <> 'ACTIVATED'
                                    THEN FWP2.STATUS
                           END
                       END          
            END           
       end as STATUS,
       SRV.SERVICE_NAME,
       FCCONVERTUTCDATEINSPECIFICTZ(FWP2.CREATION_DATE, (SELECT VALUE 
                                                        from PLATFORM_CONFIGURATION 
                                                        where PARAM = 'APNS_TIMEZONE')) as CD,
       FCCONVERTUTCDATEINSPECIFICTZ(FWP2.UPDATE_DATE, (SELECT VALUE 
                                                        from PLATFORM_CONFIGURATION 
                                                        where PARAM = 'APNS_TIMEZONE')) AS UD
from (
    select FWP.*, FWR.RULE_STATUS_CODE, FWR.FLAG_POLICY
    FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM, 
         MASTER_DATA_CLIENTS MDC, 
         FW_PROFILES FWP,
         FW_RULES FWR
    WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
    AND MDC.FLAG_VALID = 1
    and MDC.CLOSING_FLAG is null
    AND FWP.STATUS NOT IN ('REMOVED')
    and FWP.CLOSING_FLAG is null
    and (
            (FWP.SYSTEM_FLAG = 1 AND FWP.ID_FUNCTION NOT IN (SELECT ID_FUNCTION FROM MASTER_DATA_FUNCTIONS WHERE FUNCTION_CODE = 'INTERNET'))
            OR FWP.SYSTEM_FLAG = 0
        )
    AND FWR.RULE_STATUS_CODE NOT IN ('REMOVED')
    AND FWR.FLAG_REMOVING IS NULL
    and FWR.INTERNAL = 1
    AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
    and MDC.ID_CLIENT = CAM.ID_CLIENT
    and MDC.ID_CLIENT = FWP.ID_CLIENT
    and FWP.ID_FW_PROFILE = FWR.ID_FW_PROFILE        
    AND FWP.ID_CLIENT IN
    (
        SELECT MDR.ID_CLIENT
        FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
             MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
        WHERE MDR.ID_SERVICE = FS.ID_SERVICE
        AND MW.ID_GROUP = MDR.ID_GROUP
        AND FS.ID_FUNCTION = MDF.ID_FUNCTION
        AND MDF.FUNCTION_CODE = 'INTERNET'
    )
) FWP2 LEFT JOIN
(
    SELECT FS.ID_SERVICE, MDS.SERVICE_NAME, MDF.ID_FUNCTION, MDF.FUNCTION_CODE
    FROM FUNCTIONS_SERVICES FS, MASTER_DATA_FUNCTIONS MDF,
         MASTER_DATA_SERVICES MDS
    WHERE FS.ID_SERVICE = MDS.ID_SERVICE
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    and MDF.FUNCTION_CODE in ('INTERNET', 'DEFAULT_POLICY_BLOCK', 'DEFAULT_POLICY_BLOCK_FULL')
) SRV 
    ON SRV.ID_FUNCTION = FWP2.ID_FUNCTION
LEFT JOIN 
(
    select TMP2.ID_REQUEST,
            TMP2.ID_FW_PROFILE,
            CASE WHEN TMP2.FLAG_POLICY = 0 THEN 'ACCEPT'
                 WHEN TMP2.FLAG_POLICY = 1 THEN 'BLOCK'
            END AS PROFILE_POLICY,
            TMP2.ORD_REQ
    FROM (
        SELECT TMP.*, 
                RANK() OVER (PARTITION BY TMP.ID_FW_PROFILE 
                             ORDER BY TMP.CREATION_DATE DESC, TMP.ID_REQUEST DESC) AS ORD_REQ
        FROM (
            SELECT RH.*, 
                   TO_NUMBER(NVL(SUBSTR(RH.ID_OBJECT, 1, INSTR(RH.ID_OBJECT, '-') - 1), -1)) AS ID_FW_PROFILE,
                   TO_NUMBER(NVL(SUBSTR(RH.ID_OBJECT, INSTR(RH.ID_OBJECT, '-') + 1), -1)) AS FLAG_POLICY
            FROM REQUESTS_HISTORY RH
            WHERE RH.TYPE_CODE IN ('CHANGE_POLICY')
            AND RH.REQUEST_STATUS_CODE IN ('NEW', 'IN_PROGRESS', 'ERROR')
        ) TMP
    ) TMP2
    WHERE TMP2.ORD_REQ = 1 
) PLCY
    on PLCY.ID_FW_PROFILE = FWP2.ID_FW_PROFILE
;
--------------------------------------------------------
--  DDL for View V_FW_PROTOCOLS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_FW_PROTOCOLS" ("NAME") AS 
  SELECT NAME
FROM FW_PROTOCOLS
;
--------------------------------------------------------
--  DDL for View V_FW_SERVICES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_FW_SERVICES" ("NAME", "DETAIL", "PROTOCOLS", "PORTS") AS 
  select name, DETAIL, PROTOCOLS, PORTS
from FW_SERVICES 
where name not in ('ANY', 'TCP', 'UDP')
;
--------------------------------------------------------
--  DDL for View V_GET_ACCOUNT_PARAM_TIDS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_ACCOUNT_PARAM_TIDS" ("PARAM_KEY", "PARAM_VALUE") AS 
  SELECT APAR.PARAM_KEY, APAR.PARAM_VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA, ACCOUNT_PARAMS APAR
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MPA.ID_ACCOUNT = APAR.ID_ACCOUNT
;
--------------------------------------------------------
--  DDL for View V_GET_CLIENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_CLIENTS" ("ID_CLIENT", "NAME", "CREATION_DATE", "GRP_LIMIT", "VPN_LIMIT", "RULES_LIMIT", "FLAG_EXT_LIMITS", "THRESHOLD_ID_MAP", "THRESHOLD_LIMIT") AS 
  SELECT MDC.ID_CLIENT, MDC.CLIENT_NAME,       
       FCCONVERTUTCDATEINSPECIFICTZ(MDC.CREATION_DATE, (SELECT VALUE 
                                                        FROM PLATFORM_CONFIGURATION 
                                                        WHERE PARAM = 'APNS_TIMEZONE')),
       MDC.GRP_LIMIT, MDC.VPN_LIMIT, MDC.RULES_LIMIT, MDC.FLAG_EXT_LIMITS, MDC.DEFAULT_ID_MAP, MDC.THRESHOLD_LIMIT
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDC.FLAG_VALID = 1
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
;
--------------------------------------------------------
--  DDL for View V_GET_CLIENTS_TIDS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_CLIENTS_TIDS" ("ID_CLIENT", "NAME", "CREATION_DATE", "GRP_LIMIT", "VPN_LIMIT", "RULES_LIMIT", "FLAG_EXT_LIMITS", "THRESHOLD_ID_MAP", "THRESHOLD_LIMIT", "CLOSURE", "ID_APN", "HPGL_FLAG") AS 
  SELECT MDC.ID_CLIENT, MDC.CLIENT_NAME,       
       FCCONVERTUTCDATEINSPECIFICTZ(MDC.CREATION_DATE, (SELECT VALUE 
                                                        FROM PLATFORM_CONFIGURATION 
                                                        WHERE PARAM = 'APNS_TIMEZONE')),
       MDC.GRP_LIMIT, MDC.VPN_LIMIT, MDC.RULES_LIMIT, MDC.FLAG_EXT_LIMITS,
       MDC.DEFAULT_ID_MAP, MDC.THRESHOLD_LIMIT, MDC.CLOSURE, MDC.ID_APN,
       (nvl (
       (SELECT 1
                        FROM   MASTER_DATA_CLIENTS MDC2,
                               CLIENT_FUNCTIONS CF,
                               MASTER_DATA_FUNCTIONS MDF
                        WHERE  MDC2.ID_CLIENT = MDC.ID_CLIENT
                        AND MDC2.ID_CLIENT = CF.ID_CLIENT
                        AND MDF.ID_FUNCTION = CF.ID_FUNCTION
                        AND MDF.FUNCTION_CODE = 'HIGH_PRIORITY_GROUP_LABEL')
        ,0)      )  AS HPGL_FLAG 
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDC.FLAG_VALID = 1
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
;
--------------------------------------------------------
--  DDL for View V_GET_CONNECTION_INFO
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_CONNECTION_INFO" ("MSISDN", "ID_CLIENT", "ID_GROUP", "ACTIVE", "FIXED_IP", "IP", "LAST_CONNECTION", "LAST_DURATION", "LAST_TOTAL_BYTE", "CONNECTABLE", "PREPAID_FLAG", "MCC", "LAST_INPUT_OCTETS", "LAST_OUTPUT_OCTETS") AS 
  SELECT FCDENORMALIZEMSISDN(TMP_POOL2.MSISDN) AS MSISDN,
     TMP_POOL2.ID_CLIENT,
     TMP_POOL2.ID_GROUP,
     TMP_POOL2.ACTIVE,
     TMP_POOL2.FIXED_IP,
     TMP_POOL2.IP,
     TMP_POOL2.LAST_CONN,
     TMP_POOL2.LAST_DURATION,
     TMP_POOL2.LAST_TOTBYTE,
     TMP_POOL2.CONNECTABLE,
     TMP_POOL2.PREPAID_FLAG,
     TMP_POOL2.MCC,
     TMP_POOL2.ACCTINPUTOCTETS,
     TMP_POOL2.ACCTOUTPUTOCTETS
FROM
(
    SELECT TMP_POOL.*, COUNT(1) OVER () AS TOT
    FROM
    (
        SELECT CASE
                  WHEN SP2.CALLINGSTATIONID IS NULL THEN 0
                  ELSE 1
               end                          as ACTIVE,
               CASE WHEN TMP_MSISDN.IPADDRESS IS NULL THEN 0
                    else 1
               end as FIXED_IP,
               --CASE WHEN SP2.CALLINGSTATIONID IS NULL
               --         THEN TMP_MSISDN.IPADDRESS
               --         ELSE SP2.FRAMEDIPADDRESS
               --END AS IP,
               SP2.FRAMEDIPADDRESS AS IP,
               TO_CHAR(TMP_RA_NOT_CLOSED.ACCTSTARTTIME at time zone 'Europe/Rome', 'MM/DD/YYYY HH24:MI:SS')
                                            AS LAST_CONN,
               CASE WHEN TMP_MSISDN.ID_RADACT_CLOSED = TMP_MSISDN.ID_RADACT
                            AND TMP_MSISDN.ID_RADACT_CLOSED IS NOT NULL
                    THEN
                       ROUND (
                         TO_NUMBER (
                            CAST (TMP_RA_NOT_CLOSED.ACCTSTOPTIME AS DATE) -
                            cast (TMP_RA_NOT_CLOSED.ACCTSTARTTIME as date)
                         ) * 24 * 60 * 60
                       )
                    ELSE NULL
               END AS LAST_DURATION,
               TMP_RA_NOT_CLOSED.TOTALOCTETS_RANK AS LAST_TOTBYTE,
               TMP_MSISDN.MSISDN      AS MSISDN,
               TMP_MSISDN.ID_CLIENT,
               TMP_MSISDN.ID_GROUP,
               case when TMP_MSISDN.MSISDN is not null
                        then TMP_MSISDN.CONNECTABLE
                        ELSE 1 --FOR VERTICAL MSISDN ARE ALWAYS CONNECTABLE
               END AS CONNECTABLE,
               TMP_MSISDN.PREPAID as PREPAID_FLAG,
               TMP_RA_NOT_CLOSED.MCC,
               TMP_RA_NOT_CLOSED.ACCTINPUTOCTETS,
               TMP_RA_NOT_CLOSED.ACCTOUTPUTOCTETS,
               COUNT(1)  OVER ()            AS CNT
        FROM
        (
            SELECT TMP_MSISDN_0.*, LC_TMP.ID_RADACT, LC_TMP.ID_RADACT_CLOSED
            FROM
            (
                SELECT TMP_MSISDN_1.*,  MF.IPADDRESS as IPADDRESS  --null as IPADDRESS -- MF.IPADDRESS
                FROM
                (
                    select /*+ INDEX (MW IDX_MSISDN_MWDENORM)*/
                           MW.MSISDN, MDR.ID_CLIENT, MW.ID_GROUP,
                           MW.CONNECTABLE, MW.PREPAID
                    FROM    M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
                            MASTER_DATA_CLIENTS MDC,
                            MSISDN_WHITELIST MW,
                            MASTER_DATA_RELATIONSHIPS MDR
                    WHERE MDR.ACTIVATED IN (0, 1)
                    and MDR.CLOSING_FLAG is null
                    AND MDC.FLAG_VALID = 1
                    AND MDC.CLOSING_FLAG IS NULL
                    AND MW.FLAG_INTERNAL = 0
                    AND UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
                    AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
                    AND MDC.ID_CLIENT = CAM.ID_CLIENT
                    AND MDR.ID_CLIENT = MDC.ID_CLIENT
                    and MW.ID_GROUP = MDR.ID_GROUP
                ) TMP_MSISDN_1  left join    -- MSISDN_FIXEDIP MF
                                   (select MSISDN,max(IPADDRESS) as IPADDRESS
                                    from  MSISDN_FIXEDIP
                                    group by MSISDN)  MF
                     ON TMP_MSISDN_1.MSISDN = MF.MSISDN
            ) TMP_MSISDN_0
            LEFT JOIN LAST_CONNECTION LC_TMP
                ON TMP_MSISDN_0.MSISDN = LC_TMP.CALLINGSTATIONID
        ) TMP_MSISDN
        left join
        (
           select RA.ID_RADACT, RA.CALLINGSTATIONID, RA.ACCTSTARTTIME,
                  RA.ACCTSTOPTIME, RA.ACCTINPUTOCTETS,
                  RA.ACCTOUTPUTOCTETS, RA.ID_GROUP, RA.FRAMEDIPADDRESS,
                  RA.MCC, RA.ID_CLIENT, RA.TOTALOCTETS_RANK
           FROM RADACCT RA
           UNION
           select RAO.ID_RADACT, RAO.CALLINGSTATIONID, RAO.ACCTSTARTTIME,
                  RAO.ACCTSTOPTIME, RAO.ACCTINPUTOCTETS,
                  RAO.ACCTOUTPUTOCTETS, RAO.ID_GROUP, RAO.FRAMEDIPADDRESS,
                  RAO.MCC, RAO.ID_CLIENT, RAO.TOTALOCTETS_RANK
           FROM RADACCT_ONLINE RAO
        ) TMP_RA_NOT_CLOSED
            on TMP_MSISDN.MSISDN = TMP_RA_NOT_CLOSED.CALLINGSTATIONID
            AND TMP_MSISDN.ID_RADACT = TMP_RA_NOT_CLOSED.ID_RADACT
        LEFT JOIN SUBLEVEL_POOL SP2
            ON (--JOIN WITH MSISDN_WHITELIST IF PRESENT THE MSISDN IN TABLE
                -- OTHERWISE JOIN WITH GROUP PRESENT THROUGH TABLE LAST_CONNECTION
                    (
                        TMP_MSISDN.ID_GROUP IS NULL
                        AND SP2.ID_GROUP = TMP_RA_NOT_CLOSED.ID_GROUP
                        AND (SP2.FRAMEDIPADDRESS = TMP_RA_NOT_CLOSED.FRAMEDIPADDRESS
                            OR SP2.CALLINGSTATIONID = TMP_RA_NOT_CLOSED.CALLINGSTATIONID)
                    )
                    OR
                    (
                        TMP_MSISDN.ID_GROUP IS NOT NULL
                        AND SP2.ID_GROUP = TMP_MSISDN.ID_GROUP
                        AND (SP2.FRAMEDIPADDRESS = TMP_RA_NOT_CLOSED.FRAMEDIPADDRESS
                            OR SP2.CALLINGSTATIONID = TMP_RA_NOT_CLOSED.CALLINGSTATIONID)
                    )
                )
    ) TMP_POOL
) TMP_POOL2
UNION
SELECT FCDENORMALIZEMSISDN(TMP_POOL2.MSISDN) AS MSISDN,
     TMP_POOL2.ID_CLIENT,
     TMP_POOL2.ID_GROUP,
     TMP_POOL2.ACTIVE,
     TMP_POOL2.FIXED_IP,
     TMP_POOL2.IP,
     TMP_POOL2.LAST_CONN,
     TMP_POOL2.LAST_DURATION,
     TMP_POOL2.LAST_TOTBYTE,
     TMP_POOL2.CONNECTABLE,
     TMP_POOL2.PREPAID_FLAG,
     TMP_POOL2.MCC,     
     TMP_POOL2.ACCTINPUTOCTETS,
     TMP_POOL2.ACCTOUTPUTOCTETS     
FROM
(
    SELECT TMP_POOL.*, COUNT(1) OVER () AS TOT
    FROM
    (
        SELECT CASE
                  WHEN SP2.CALLINGSTATIONID IS NULL THEN 0
                  ELSE 1
               end                          as ACTIVE,
               CASE WHEN TMP_MSISDN.IPADDRESS IS NULL THEN 0
                    else 1
               end as FIXED_IP,
               --CASE WHEN SP2.CALLINGSTATIONID IS NULL
               --         THEN TMP_MSISDN.IPADDRESS
               --         ELSE SP2.FRAMEDIPADDRESS
               --END AS IP,
               SP2.FRAMEDIPADDRESS AS IP,
               TO_CHAR(TMP_RA_NOT_CLOSED.ACCTSTARTTIME at time zone 'Europe/Rome', 'MM/DD/YYYY HH24:MI:SS')
                                            AS LAST_CONN,
               CASE WHEN TMP_MSISDN.ID_RADACT_CLOSED = TMP_MSISDN.ID_RADACT
                            AND TMP_MSISDN.ID_RADACT_CLOSED IS NOT NULL
                    THEN
                       ROUND (
                         TO_NUMBER (
                            CAST (TMP_RA_NOT_CLOSED.ACCTSTOPTIME AS DATE) -
                            cast (TMP_RA_NOT_CLOSED.ACCTSTARTTIME as date)
                         ) * 24 * 60 * 60
                       )
                    ELSE NULL
               END AS LAST_DURATION,
               TMP_RA_NOT_CLOSED.TOTALOCTETS_RANK AS LAST_TOTBYTE,
               TMP_MSISDN.MSISDN      AS MSISDN,
               TMP_MSISDN.ID_CLIENT,
               TMP_MSISDN.ID_GROUP,
               case when TMP_MSISDN.MSISDN is not null
                        then TMP_MSISDN.CONNECTABLE
                        ELSE 1 --FOR VERTICAL MSISDN ARE ALWAYS CONNECTABLE
               END AS CONNECTABLE,
               TMP_MSISDN.PREPAID as PREPAID_FLAG,
               TMP_RA_NOT_CLOSED.MCC,
               TMP_RA_NOT_CLOSED.ACCTINPUTOCTETS,
               TMP_RA_NOT_CLOSED.ACCTOUTPUTOCTETS,
               COUNT(1)  OVER ()            AS CNT
        FROM
        (
            SELECT TMP_MSISDN_0.*, LC_TMP.ID_RADACT, LC_TMP.ID_RADACT_CLOSED
            FROM
            (
                SELECT TMP_MSISDN_1.*, MFS.IPADDRESS
                FROM
                (
                   select   /*+ INDEX (MW IDX_MSISDN_MWDENORM)*/                  
                           MS.MSISDN, MDR.ID_CLIENT, MS.ID_GROUP,
                           0 AS CONNECTABLE,  MS.PREPAID
                    FROM    M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
                            MASTER_DATA_CLIENTS MDC,
                            MSISDN_SHADOW MS,
                            MASTER_DATA_RELATIONSHIPS MDR
                    WHERE MDR.ACTIVATED IN (0, 1)
                    and MDR.CLOSING_FLAG is null
                    AND MDC.FLAG_VALID = 1
                    AND MDC.CLOSING_FLAG IS NULL
                    AND MS.FLAG_INTERNAL = 0
                    AND UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
                    AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
                    AND MDC.ID_CLIENT = CAM.ID_CLIENT
                    AND MDR.ID_CLIENT = MDC.ID_CLIENT
                    and MS.ID_GROUP = MDR.ID_GROUP
                ) TMP_MSISDN_1 left join  -- MSISDN_FIXEDIP_SHADOW MFS
                                    (select MSISDN,max(IPADDRESS) as IPADDRESS
                                    from  MSISDN_FIXEDIP_SHADOW
                                    group by MSISDN)  MFS
                    on TMP_MSISDN_1.MSISDN = MFS.MSISDN
            ) TMP_MSISDN_0
            LEFT JOIN LAST_CONNECTION LC_TMP
                ON TMP_MSISDN_0.MSISDN = LC_TMP.CALLINGSTATIONID
        ) TMP_MSISDN
        LEFT JOIN
        (
           select RA.ID_RADACT, RA.CALLINGSTATIONID, RA.ACCTSTARTTIME,
                  RA.ACCTSTOPTIME, RA.ACCTINPUTOCTETS,
                  RA.ACCTOUTPUTOCTETS, RA.ID_GROUP, RA.FRAMEDIPADDRESS,
                  RA.MCC, RA.ID_CLIENT, RA.TOTALOCTETS_RANK
           FROM RADACCT RA
        ) TMP_RA_NOT_CLOSED
            on TMP_MSISDN.MSISDN = TMP_RA_NOT_CLOSED.CALLINGSTATIONID
            AND TMP_MSISDN.ID_RADACT = TMP_RA_NOT_CLOSED.ID_RADACT
        LEFT JOIN SUBLEVEL_POOL SP2
            ON (--JOIN WITH MSISDN_WHITELIST IF PRESENT THE MSISDN IN TABLE
                -- OTHERWISE JOIN WITH GROUP PRESENT THROUGH TABLE LAST_CONNECTION
                    (
                        TMP_MSISDN.ID_GROUP IS NULL
                        AND SP2.ID_GROUP = TMP_RA_NOT_CLOSED.ID_GROUP
                        AND (SP2.FRAMEDIPADDRESS = TMP_RA_NOT_CLOSED.FRAMEDIPADDRESS
                            OR SP2.CALLINGSTATIONID = TMP_RA_NOT_CLOSED.CALLINGSTATIONID)
                    ) OR
                    (
                        TMP_MSISDN.ID_GROUP IS NOT NULL
                        AND SP2.ID_GROUP = TMP_MSISDN.ID_GROUP
                        AND (SP2.FRAMEDIPADDRESS = TMP_RA_NOT_CLOSED.FRAMEDIPADDRESS
                            OR SP2.CALLINGSTATIONID = TMP_RA_NOT_CLOSED.CALLINGSTATIONID)
                    )
                )
    )    
    TMP_POOL   
) TMP_POOL2
;
--------------------------------------------------------
--  DDL for View V_GET_CONNECTION_INFO_OCPP
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_CONNECTION_INFO_OCPP" ("MSISDN", "ID_CLIENT", "ID_GROUP", "ACTIVE", "FIXED_IP", "IP", "LAST_CONNECTION", "LAST_DURATION", "LAST_TOTAL_BYTE", "CONNECTABLE", "PREPAID_FLAG", "MCC") AS 
  WITH
TMP_RA AS 
(
   select RA.ID_RADACT, RA.CALLINGSTATIONID, RA.ACCTSTARTTIME,
          RA.ACCTSTOPTIME, RA.ACCTINPUTOCTETS,
          RA.ACCTOUTPUTOCTETS, RA.ID_GROUP, RA.FRAMEDIPADDRESS,
          RA.MCC, RA.ID_CLIENT
   FROM RADACCT RA
   UNION
   select RAO.ID_RADACT, RAO.CALLINGSTATIONID, RAO.ACCTSTARTTIME,
          RAO.ACCTSTOPTIME, RAO.ACCTINPUTOCTETS,
          RAO.ACCTOUTPUTOCTETS, RAO.ID_GROUP, RAO.FRAMEDIPADDRESS,
          RAO.MCC, RAO.ID_CLIENT
   FROM RADACCT_ONLINE RAO
) 
SELECT FCDENORMALIZEMSISDN(TMP_POOL2.MSISDN) AS MSISDN,
     TMP_POOL2.ID_CLIENT,
     TMP_POOL2.ID_GROUP,
     TMP_POOL2.ACTIVE,
     TMP_POOL2.FIXED_IP,
     TMP_POOL2.IP,
     TMP_POOL2.LAST_CONN,
     TMP_POOL2.LAST_DURATION,
     TMP_POOL2.LAST_TOTBYTE,
     TMP_POOL2.CONNECTABLE,
     TMP_POOL2.PREPAID_FLAG,
     TMP_POOL2.MCC
FROM
(
    SELECT TMP_POOL.*, COUNT(1) OVER () AS TOT
    FROM
    (
        SELECT CASE
                  WHEN SP2.CALLINGSTATIONID IS NULL THEN 0
                  ELSE 1
               end                          as ACTIVE,
               0 as FIXED_IP,
               --CASE WHEN SP2.CALLINGSTATIONID IS NULL
               --         THEN TMP_MSISDN.IPADDRESS
               --         ELSE SP2.FRAMEDIPADDRESS
               --END AS IP,
               SP2.FRAMEDIPADDRESS AS IP,
               TO_CHAR(TMP_RA_NOT_CLOSED.ACCTSTARTTIME, 'MM/DD/YYYY HH24:MI:SS')
                                            AS LAST_CONN,
               CASE WHEN TMP_MSISDN.ID_RADACT_CLOSED = TMP_MSISDN.ID_RADACT
                            AND TMP_MSISDN.ID_RADACT_CLOSED IS NOT NULL
                    THEN
                       ROUND (
                         TO_NUMBER (
                            CAST (TMP_RA_NOT_CLOSED.ACCTSTOPTIME AS DATE) -
                            cast (TMP_RA_NOT_CLOSED.ACCTSTARTTIME as date)
                         ) * 24 * 60 * 60
                       )
                    ELSE NULL
               END AS LAST_DURATION,
               TMP_RA_NOT_CLOSED.ACCTINPUTOCTETS
               + TMP_RA_NOT_CLOSED.ACCTOUTPUTOCTETS AS LAST_TOTBYTE,
               TMP_MSISDN.MSISDN      AS MSISDN,
               TMP_RA_NOT_CLOSED.ID_CLIENT,
               TMP_RA_NOT_CLOSED.ID_GROUP,
               case when TMP_MSISDN.MSISDN is not null
                        then TMP_MSISDN.CONNECTABLE
                        ELSE 1 --FOR VERTICAL MSISDN ARE ALWAYS CONNECTABLE
               END AS CONNECTABLE,
               TMP_MSISDN.PREPAID as PREPAID_FLAG,
               TMP_RA_NOT_CLOSED.MCC,
               COUNT(1)  OVER ()            AS CNT
        FROM
        (
            select LC_TMP.CALLINGSTATIONID as MSISDN, 
                   LC_TMP.ID_RADACT, LC_TMP.ID_RADACT_CLOSED,
                   1 as connectable, 0 as prepaid
            FROM LAST_CONNECTION LC_TMP
        ) TMP_MSISDN
        INNER join 
        (
            select TMP_RA.*
            FROM    MASTER_DATA_CLIENTS MDC,
                    MASTER_DATA_RELATIONSHIPS MDR,
                    MASTER_DATA_SERVICES MDS,
                    TMP_RA
            WHERE MDS.SERVICE_NAME = 'VERTICALS'
            AND MDR.ACTIVATED IN (0, 1)
            and MDR.CLOSING_FLAG is null
            AND MDC.FLAG_VALID = 1
            AND MDC.CLOSING_FLAG IS NULL
            AND MDR.ID_CLIENT = MDC.ID_CLIENT
            AND MDS.ID_SERVICE = MDR.ID_SERVICE        
            AND MDR.ID_CLIENT = TMP_RA.ID_CLIENT
            and MDR.ID_GROUP = TMP_RA.ID_GROUP
        )TMP_RA_NOT_CLOSED
            on TMP_MSISDN.MSISDN = TMP_RA_NOT_CLOSED.CALLINGSTATIONID
            AND TMP_MSISDN.ID_RADACT = TMP_RA_NOT_CLOSED.ID_RADACT
        LEFT JOIN SUBLEVEL_POOL SP2
            ON SP2.ID_GROUP = TMP_RA_NOT_CLOSED.ID_GROUP
               AND (SP2.FRAMEDIPADDRESS = TMP_RA_NOT_CLOSED.FRAMEDIPADDRESS
                    OR SP2.CALLINGSTATIONID = TMP_RA_NOT_CLOSED.CALLINGSTATIONID)
    ) TMP_POOL
) TMP_POOL2
;
--------------------------------------------------------
--  DDL for View V_GET_GROUPS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_GROUPS" ("ID_GROUP", "ID_CLIENT", "GROUP_NAME", "TYPE", "SERVICE_NAME", "CREATION_DATE_GROUP", "SUBNET_CONF_PENDING") AS 
  SELECT MDR.ID_GROUP, MDR.ID_CLIENT, MDR.GROUP_NAME_REL AS GROUP_NAME, MDR.SYSTEM_FLAG AS TYPE, MDS.SERVICE_NAME,
        FCCONVERTUTCDATEINSPECIFICTZ(MDR.CREATION_DATE, (SELECT VALUE
                                                         FROM PLATFORM_CONFIGURATION
                                                         where PARAM = 'APNS_TIMEZONE')) as CREATION_DATE_GROUP,        
        MDR.SUBNET_CONF_PENDING
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_RELATIONSHIPS MDR,
     MASTER_DATA_SERVICES MDS
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MDR.ACTIVATED IN (0, 1)
AND MDR.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDR.ID_CLIENT
AND MDR.ID_SERVICE = MDS.ID_SERVICE
AND (MDR.ID_CLIENT, MDS.ID_SERVICE) IN
(
    SELECT MDR.ID_CLIENT, FS.ID_SERVICE
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    GROUP BY MDR.ID_CLIENT, FS.ID_SERVICE
)
;
--------------------------------------------------------
--  DDL for View V_GET_GROUPS_TIDS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_GROUPS_TIDS" ("ID_GROUP", "ID_CLIENT", "GROUP_NAME", "TYPE", "SERVICE_NAME", "CREATION_DATE_GROUP", "SUBNET_CONF_PENDING", "POOL_SIZE", "NUM_SIM") AS 
  SELECT MDR.ID_GROUP, MDR.ID_CLIENT, MDR.GROUP_NAME_REL AS GROUP_NAME, MDR.SYSTEM_FLAG AS TYPE, MDS.SERVICE_NAME,
        FCCONVERTUTCDATEINSPECIFICTZ(MDR.CREATION_DATE, (SELECT VALUE
                                                         FROM PLATFORM_CONFIGURATION
                                                         where PARAM = 'APNS_TIMEZONE')) as CREATION_DATE_GROUP,
        MDR.SUBNET_CONF_PENDING,
        (
            SELECT SUM(GPS.POOL_SIZE)
            FROM GROUP_POOL_SUBNET GPS
            WHERE MDR.ID_GROUP = GPS.ID_GROUP
            AND CLOSING_FLAG IS NULL
            AND ID_GGSN = (
                SELECT MIN(GPS.ID_GGSN)
                FROM GROUP_POOL_SUBNET GPS
                WHERE MDR.ID_GROUP = GPS.ID_GROUP
            )
            GROUP BY 1
        ) AS POOL_SIZE,
        (
            SELECT COUNT(1)
            FROM MSISDN_WHITELIST MW
            WHERE MDR.ID_GROUP = MW.ID_GROUP
        ) AS NUM_SIM
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_RELATIONSHIPS MDR,
     MASTER_DATA_SERVICES MDS
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MDR.ACTIVATED IN (0, 1)
AND MDR.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDR.ID_CLIENT
AND MDR.ID_SERVICE = MDS.ID_SERVICE
;
--------------------------------------------------------
--  DDL for View V_GET_MSISDN
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_MSISDN" ("ID_CLIENT", "ID_GROUP", "SERVICE_NAME", "MSISDN", "CONTRACT", "HUMAN_FLAG", "PREPAID_FLAG", "USERNAME", "PASSWORD") AS 
  SELECT MDC.ID_CLIENT, MDR.ID_GROUP, MDS.SERVICE_NAME,
       FCDENORMALIZEMSISDN(MW.MSISDN) AS MSISDN,
       CASE WHEN MW.CONTRACT IS NULL THEN '-'
            ELSE MW.CONTRACT
       END AS CONTRACT,
       MW.HUMAN_FLAG,
       MW.PREPAID as PREPAID_FLAG,
       MW.USERNAME,
       MW.password
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_RELATIONSHIPS MDR,
     MASTER_DATA_SERVICES MDS, MSISDN_WHITELIST MW
WHERE MDR.ACTIVATED IN (0, 1)
AND MDR.CLOSING_FLAG is null
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MW.FLAG_INTERNAL = 0
AND UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDR.ID_CLIENT = MDC.ID_CLIENT
AND MDS.ID_SERVICE = MDR.ID_SERVICE
AND MW.ID_GROUP = MDR.ID_GROUP
UNION
SELECT MDC.ID_CLIENT, MDR.ID_GROUP, MDS.SERVICE_NAME,
       FCDENORMALIZEMSISDN(MS.MSISDN) AS MSISDN,
       CASE WHEN MS.CONTRACT IS NULL THEN '-'
            ELSE MS.CONTRACT
       END AS CONTRACT,
       MS.HUMAN_FLAG,
       MS.PREPAID AS PREPAID_FLAG,
       MS.USERNAME,
       MS.password
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_RELATIONSHIPS MDR,
     MASTER_DATA_SERVICES MDS, MSISDN_SHADOW MS
WHERE MDR.ACTIVATED IN (0, 1)
AND MDR.CLOSING_FLAG is null
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MS.FLAG_INTERNAL = 0
AND UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDR.ID_CLIENT = MDC.ID_CLIENT
AND MDS.ID_SERVICE = MDR.ID_SERVICE
and MS.ID_GROUP = MDR.ID_GROUP
;
--------------------------------------------------------
--  DDL for View V_GET_RULES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_RULES" ("ID_FW_RULE", "ID_FW_PROFILE", "CREATION_DATE", "UPDATE_DATE", "STATUS", "ID_ORDER") AS 
  SELECT FWR.ID_FW_RULE, FWR.ID_FW_PROFILE, 
       FCCONVERTUTCDATEINSPECIFICTZ(FWR.CREATION_DATE, (SELECT VALUE 
                                                        FROM PLATFORM_CONFIGURATION 
                                                        WHERE PARAM = 'APNS_TIMEZONE')),
       FCCONVERTUTCDATEINSPECIFICTZ(FWR.UPDATE_DATE, (SELECT VALUE 
                                                        FROM PLATFORM_CONFIGURATION 
                                                        WHERE PARAM = 'APNS_TIMEZONE')),
       FWR.RULE_STATUS_CODE AS STATUS, FWR.ID_ORDER       
from M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM, 
     MASTER_DATA_CLIENTS MDC, FW_PROFILES FWP,
     FW_RULES FWR
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND FWP.STATUS NOT IN ('REMOVED')
AND FWP.CLOSING_FLAG IS NULL
AND FWR.RULE_STATUS_CODE NOT IN ('REMOVED')
AND FWR.FLAG_REMOVING IS NULL
AND FWR.INTERNAL = 0
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = FWP.ID_CLIENT
AND FWP.ID_FW_PROFILE = FWR.ID_FW_PROFILE
AND FWP.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS, 
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTERNET'
)
;
--------------------------------------------------------
--  DDL for View V_GET_RULES_PARAMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_RULES_PARAMS" ("ID_FW_RULE", "NAME", "VALUE") AS 
  SELECT FWR.ID_FW_RULE, FWRP.PARAM_KEY AS NAME, FWRP.PARAM_VALUE AS VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, FW_PROFILES FWP,
     FW_RULES FWR, FW_RULES_PARAMS FWRP
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND FWP.STATUS NOT IN ('REMOVED')
AND FWP.CLOSING_FLAG IS NULL
AND FWR.RULE_STATUS_CODE NOT IN ('REMOVED')
AND FWR.FLAG_REMOVING IS NULL
AND FWR.INTERNAL = 0
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = FWP.ID_CLIENT
AND FWP.ID_FW_PROFILE = FWR.ID_FW_PROFILE
AND FWR.ID_FW_RULE = FWRP.ID_FW_RULE
AND FWP.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTERNET'
)    
UNION 
SELECT FWR.ID_FW_RULE, 'DST_ADDRESS', FWR.DST_ADDRESS         
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, FW_PROFILES FWP, FW_RULES FWR 
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND FWP.STATUS NOT IN ('REMOVED')
AND FWP.CLOSING_FLAG IS NULL
AND FWR.RULE_STATUS_CODE NOT IN ('REMOVED')
AND FWR.FLAG_REMOVING IS NULL
AND FWR.INTERNAL = 0
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = FWP.ID_CLIENT
AND FWP.ID_FW_PROFILE = FWR.ID_FW_PROFILE
AND FWP.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTERNET'
)
ORDER BY 1,2,3
;
--------------------------------------------------------
--  DDL for View V_GET_SERVICES
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_SERVICES" ("SERVICE_NAME") AS 
  SELECT MDS.SERVICE_NAME
FROM MASTER_DATA_SERVICES MDS
WHERE MDS.SERVICE_NAME IN ('FULL', 'FULL_PLUS', 
                           'INTERNET', 'INTERNET_PLUS', 
                           'INTRANET', 'INTRANET_PLUS')
;
--------------------------------------------------------
--  DDL for View V_GET_SIZE_VPN
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_SIZE_VPN" ("SIZE_VPN") AS 
  SELECT LST_SZ.SZ AS SIZE_VPN
FROM (
    SELECT POWER(2, LEVEL - 1) AS SZ
    FROM DUAL 
    CONNECT BY LEVEL <= 33
) LST_SZ,
(
    SELECT MAX(CASE WHEN PARAM = 'MIN_SIZE_VPN' 
                    THEN TO_NUMBER(VALUE) 
                    ELSE 0 
               END) AS MIN_SIZE_VPN,
           MAX(CASE WHEN PARAM = 'MAX_SIZE_VPN' 
                    THEN TO_NUMBER(VALUE) 
                    else 0 
               end) as MAX_SIZE_VPN,
           MAX(case when PARAM = 'VPN_SIZE_DEFAULT' 
                    THEN TO_NUMBER(VALUE) + 2
                    else 0 
               END) AS DEF_SIZE_VPN
    from PLATFORM_CONFIGURATION 
    WHERE PARAM IN ('MIN_SIZE_VPN', 'MAX_SIZE_VPN', 'VPN_SIZE_DEFAULT')
    GROUP BY 1
) LIMITS,
(
    SELECT MIN(MPH.FREE_SIZE) AS MIN_FREE_SIZE,
           MAX(MPH.FREE_SIZE) AS MAX_FREE_SIZE
    FROM MAIN_POOL_SUBNET MPS, 
         MAIN_POOL_SERVICES MPSRV, 
         MASTER_DATA_FUNCTIONS MDF,
         MAIN_POOL_HWM MPH
    WHERE MDF.FUNCTION_CODE IN ('VPN_L2L')
    AND MPSRV.ID_FUNCTION = MDF.ID_FUNCTION
    AND MPSRV.ID_SUB = MPS.ID_SUB
    AND MPS.ID_SUB = MPH.ID_SUB
) MPH_FREE
WHERE LST_SZ.SZ >= LIMITS.MIN_SIZE_VPN
AND LST_SZ.SZ <= LIMITS.MAX_SIZE_VPN
AND LST_SZ.SZ <= MPH_FREE.MAX_FREE_SIZE
ORDER BY LST_SZ.SZ
;
--------------------------------------------------------
--  DDL for View V_GET_VPNS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_VPNS" ("ID_CLIENT", "ID_VPN", "CREATION_DATE_VPN", "VPN_STATUS", "REFERENT", "REFERENT_EMAIL", "REFERENT_NOTE", "REFERENT_PHONE1", "REFERENT_PHONE2", "RESTART_FLAG", "VPN_SIZE", "FLAG_USED") AS 
  SELECT MDV.ID_CLIENT, MDV.ID_VPN, 
       FCCONVERTUTCDATEINSPECIFICTZ(MDV.CREATION_DATE, (SELECT VALUE 
                                                        FROM PLATFORM_CONFIGURATION 
                                                        WHERE PARAM = 'APNS_TIMEZONE')),
       MDV.STATUS_CODE as VPN_STATUS, 
       MDV.REFERENT, MDV.REFERENT_EMAIL, MDV.REFERENT_NOTE, MDV.REFERENT_PHONE1, 
       MDV.REFERENT_PHONE2, MDV.RESTART_FLAG,
       CASE WHEN VCP.PARAM_VALUE in ('HOST2LAN' , 'HOST2LAN_SSL') THEN 1
       ELSE VPS.POOL_SIZE +2
       END AS VPN_SIZE, MDV.FLAG_USED
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM, 
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV , VPN_DETAIL_POOL VDP ,  
      VPN_POOL_SUBNET VPS , VPN_CONF_PARAMS VCP
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED') 
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDV.ID_CLIENT
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS, 
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
AND MDV.ID_VPN = VDP.ID_VPN
and VDP.ID_VSUBNET = VPS.ID_VSUBNET
and MDV.ID_VPN= VCP.ID_VPN
and VCP.PARAM = 'VPN_TYPE'
;
--------------------------------------------------------
--  DDL for View V_GET_VPNS_EXTENDED
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_VPNS_EXTENDED" ("ID_CLIENT", "ID_VPN", "CREATION_DATE_VPN", "VPN_STATUS", "REFERENT", "REFERENT_EMAIL", "REFERENT_NOTE", "REFERENT_PHONE1", "REFERENT_PHONE2", "RESTART_FLAG", "VPN_TYPE", "CONNECTION_REQUESTS", "SERVICES") AS 
  SELECT TMP2.ID_CLIENT, VV2.ID_VPN, VV2.CREATION_DATE_VPN, VV2.VPN_STATUS,
        VV2.REFERENT, VV2.REFERENT_EMAIL, VV2.REFERENT_NOTE,
        VV2.REFERENT_PHONE1, VV2.REFERENT_PHONE2, VV2.RESTART_FLAG,
        VGVP.VPN_PARAM_VALUE, TMP2.CONNECTION_REQUESTS, VGG4.SERVICES
FROM
(
    SELECT TMP.ID_CLIENT, NULL AS ID_VPN, 0 AS CONNECTION_REQUESTS
    FROM (
        SELECT VGC.ID_CLIENT, VGC.NAME, VGG.SERVICE_NAME
        FROM V_GET_CLIENTS VGC, V_GET_GROUPS VGG
        WHERE VGC.ID_CLIENT NOT IN (SELECT VV.ID_CLIENT FROM V_GET_VPNS VV)
        AND (
                SUBSTR(VGG.SERVICE_NAME, 1, 8) = 'INTRANET'
                OR SUBSTR(VGG.SERVICE_NAME, 1, 4) = 'FULL'
            )
        GROUP BY VGC.ID_CLIENT, VGC.NAME, VGG.SERVICE_NAME
    ) TMP
    GROUP BY TMP.ID_CLIENT
    UNION
    SELECT VV.ID_CLIENT, VV.ID_VPN, NVL(SUM(EH.COUNTER), 0) AS CONNECTION_REQUESTS
    FROM V_GET_VPNS VV LEFT JOIN
    (
        SELECT *
        FROM EVENT_HISTORY
        WHERE ID_VPN IS NOT NULL
        AND EVENT_TYPE = 'VPN_AUTH_REQUEST'
    ) EH
    ON VV.ID_CLIENT = EH.ID_CLIENT
    AND VV.ID_VPN = EH.ID_VPN
    GROUP BY VV.ID_CLIENT, VV.ID_VPN
) TMP2 LEFT JOIN V_GET_VPNS VV2
ON TMP2.ID_VPN = VV2.ID_VPN
LEFT JOIN V_GET_VPN_PARAMS VGVP
ON VGVP.ID_VPN = VV2.ID_VPN
AND VGVP.VPN_PARAM = 'VPN_TYPE'
LEFT JOIN (
    SELECT VGG3.ID_CLIENT, FCSTRING_AGG(VGG3.SERVICE_NAME) AS SERVICES
    FROM (
        SELECT VGG2.ID_CLIENT, VGG2.SERVICE_NAME
        FROM V_GET_GROUPS VGG2
        GROUP BY VGG2.ID_CLIENT, VGG2.SERVICE_NAME
        ORDER BY VGG2.ID_CLIENT, VGG2.SERVICE_NAME
    ) VGG3
    GROUP BY VGG3.ID_CLIENT
) VGG4
ON VGG4.ID_CLIENT = TMP2.ID_CLIENT
ORDER BY TMP2.ID_CLIENT, VV2.ID_VPN
;
--------------------------------------------------------
--  DDL for View V_GET_VPN_ACC_PARAMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_VPN_ACC_PARAMS" ("ID_VPN", "VAP_PARAM", "VAP_PARAM_VALUE") AS 
  select VAP.ID_VPN, VAP.PARAM AS VAP_PARAM, VAP.PARAM_VALUE AS VAP_PARAM_VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV, VPN_ACCESS_PARAMS VAP
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDV.ID_CLIENT
AND MDV.ID_VPN = VAP.ID_VPN
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
UNION
SELECT  TO_NUMBER(VPC.ID_VPN) AS ID_VPN,
         CASE WHEN APNPAR.PARAM_KEY = 'ASA_HOST'
                then
                      'VPN_HOST'
                else
                      APNPAR.PARAM_KEY
         END  AS PARAM ,
         APNPAR.PARAM_VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV,
     APN_PARAMS APNPAR, VPN_CONF_PARAMS VPC
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDV.ID_CLIENT
AND MDV.ID_VPN = VPC.ID_VPN
AND APNPAR.ID_APN = MDC.ID_APN 
AND VPC.PARAM IN ('VPN_TYPE')
and (
            APNPAR.PARAM_KEY IN ('ASA_HOST',
                                  'GROUP_AUTH_NAME',
                                  'GROUP_AUTH_PASS')
            AND VPC.PARAM = 'VPN_TYPE'
            and VPC.PARAM_VALUE in ( 'HOST2LAN')
    )
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
UNION
SELECT  TO_NUMBER(VPC.ID_VPN) AS ID_VPN,
         CASE WHEN APNPAR.PARAM_KEY = 'ASA_HOST'
                then
                      'VPN_HOST'
                else
                      APNPAR.PARAM_KEY
         END  AS PARAM ,
         APNPAR.PARAM_VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV,
     APN_PARAMS APNPAR, VPN_CONF_PARAMS VPC
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDV.ID_CLIENT
AND MDV.ID_VPN = VPC.ID_VPN
AND APNPAR.ID_APN = MDC.ID_APN 
AND VPC.PARAM IN ('VPN_TYPE')
and (
            APNPAR.PARAM_KEY IN ('ASA_HOST')
            AND VPC.PARAM = 'VPN_TYPE'
            and VPC.PARAM_VALUE in ( 'HOST2LAN_SSL')
    )
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
UNION
SELECT  TO_NUMBER(VPC.ID_VPN) AS ID_VPN,
         'GROUP_AUTH_NAME'  AS PARAM ,
         VTG.NAME_TG
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, 
     VPN_CONF_PARAMS VPC,
     MASTER_DATA_VPN MDV     
     LEFT OUTER JOIN VPN_TUN_GRP VTG
     ON MDV.ID_VPN = VTG.ID_VPN
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDV.ID_CLIENT
AND MDV.ID_VPN = VPC.ID_VPN
AND VPC.PARAM IN ('VPN_TYPE')
and (            
            VPC.PARAM = 'VPN_TYPE'
            and VPC.PARAM_VALUE in ( 'HOST2LAN_SSL')
    )
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
UNION
SELECT  TO_NUMBER(VPC.ID_VPN) AS ID_VPN,
         CASE WHEN APNPAR.PARAM_KEY = 'ASA_HOST'
               then
                      'VPN_HOST'
              WHEN APNPAR.PARAM_KEY = 'GROUP_AUTH_NAME_NEM'
               then
                      'GROUP_AUTH_NAME'
               else
                      'GROUP_AUTH_PASS'
         END  AS PARAM ,
         CASE WHEN APNPAR.PARAM_KEY = 'ASA_HOST'
               THEN 
                      APNPAR.PARAM_VALUE
              WHEN APNPAR.PARAM_KEY = 'GROUP_AUTH_NAME_NEM'
               then
                      TG.NAME
               else
                      TG.PRE_SHARED_KEY
         END  AS PARAM_VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV,
     APN_PARAMS APNPAR, VPN_CONF_PARAMS VPC
     LEFT OUTER JOIN VPN_TUN_GRP VTG  ON  VPC.ID_VPN = VTG.ID_VPN
     LEFT OUTER JOIN TUNNEL_GROUP TG ON VTG.NAME_TG = TG.NAME
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDV.ID_CLIENT
AND MDV.ID_VPN = VPC.ID_VPN
AND APNPAR.ID_APN = MDC.ID_APN 
AND VPC.PARAM IN ('VPN_TYPE')
AND (
        (
             (APNPAR.PARAM_KEY in ('ASA_HOST',
                                   'GROUP_AUTH_NAME_NEM',
                                   'GROUP_AUTH_PASS_NEM')
                and VPC.PARAM = 'VPN_TYPE' 
                AND VPC.PARAM_VALUE = 'LAN2LAN_EASYVPN')
        )
    )
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
UNION
SELECT  TO_NUMBER(VPC.ID_VPN) AS ID_VPN,
          'VPN_HOST' AS PARAM ,
          DS.IP_PREFIX AS PARAM_VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV,
     VPN_CONF_PARAMS VPC, VPN_TUN_GRP VTG
     LEFT OUTER JOIN TUNNEL_GROUP TG ON VTG.NAME_TG = TG.NAME
     LEFT OUTER JOIN DEVICE_INTERFACES DI ON TG.ID_DEVICE= DI.ID_DEVICE  AND DI.DEFAULT4IPSEC=1
  LEFT OUTER JOIN DEVICE_SUBNETS DS ON DI.ID_SUBNET = DS.ID_SUBNET
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDV.ID_CLIENT
AND MDV.ID_VPN = VPC.ID_VPN
AND MDV.ID_VPN = VTG.ID_VPN
AND VPC.PARAM IN ('VPN_TYPE')
AND VPC.PARAM_VALUE in ( 'LAN2LAN'   ,'LAN2LAN_IKEV2' )
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
UNION
SELECT  TO_NUMBER(VPC.ID_VPN) AS ID_VPN,
         'VPN_PHASE1' AS PARAM,
  '<BR>'||REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' * Opzione 1' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- pre-shared-key' || CHR(13) ||  '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- encryption 3des-Sha' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- dh group 2' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- SA lifetime 86400' || CHR(13) || '<BR>' ||
  '              ' || chr(13) ||
  REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' * Opzione 2' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- pre-shared-key' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- encryption 3des-md5' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- dh group 2' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- SA lifetime 86400' || CHR(13) || '<BR>' ||
  '              ' || chr(13) ||
  REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'* Opzione 3' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- pre-shared-key' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- encryption aes256-md5' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- dh group 2' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- SA lifetime 86400' ||    '<BR>' ||
  '              ' || chr(13) ||
  '              ' || CHR(13) ||
  '<BR>'||REPLACE(REPLACE(LPAD('A', 3, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' Pre-shared-key = ' ||
         TG.PRE_SHARED_KEY  || '<BR>'  AS PARAM_VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV,
     VPN_CONF_PARAMS VPC, VPN_TUN_GRP VTG, TUNNEL_GROUP TG
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDV.ID_CLIENT
AND MDV.ID_VPN = VPC.ID_VPN
AND MDV.ID_VPN = VTG.ID_VPN
AND VTG.NAME_TG = TG.NAME
AND VPC.PARAM IN ('VPN_TYPE')
AND VPC.PARAM_VALUE in ( 'LAN2LAN')
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
UNION
SELECT  TO_NUMBER(VPC3.ID_VPN) AS ID_VPN,
         'VPN_PHASE2' AS PARAM,
  '<BR>'||REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' * Transforms supportati: ' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- esp-des esp-sha-hmac' || CHR(13) ||  '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- esp-des esp-md5-hmac' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- esp-aes-192 esp-md5-hmac' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- esp-aes-256 esp-sha-hmac' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- esp-aes esp-sha-hmac' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- esp-aes-192 esp-sha-hmac' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- esp-aes esp-md5-hmac' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- esp-3des esp-md5-hmac' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- esp-aes-256 esp-md5-hmac' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- esp-3des esp-sha-hmac' || CHR(13) || '<BR>' ||
  '              ' || CHR(13) ||
  REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' * Security Association Lifetime ' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- seconds 86400' || chr(13) || '<BR>' ||
  '              ' || CHR(13) ||
  REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' * '||VPC3.PFS_VALUE||' ' || CHR(13) || '<BR>'
    AS PARAM_VALUE
FROM (
    SELECT VPC2.ID_VPN,
          CASE WHEN VPC2.PFS_FLAG = 0 THEN 'PFS disable'
               WHEN OP.KEY IS NULL AND VPC2.PFS_FLAG = 1 THEN 'PFS dh group 2'
               WHEN OP.KEY IS NOT NULL AND VPC2.PFS_FLAG = 1 THEN 'PFS '||OP.VALUE        
          END AS PFS_VALUE,
          OP.KEY, OP.VALUE, VPC2.ID_CPP    
    FROM (
        SELECT VPC.ID_VPN, CPP.ID_CPP, CPP.PFS_FLAG
        FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
             MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV,
             VPN_CONF_PARAMS VPC, VPN_TUN_GRP VTG, TUNNEL_GROUP TG, 
             CRYPTO_POLICY_P2 CPP, CRYPTO_MAP CM    
        WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
        AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
        AND MDC.FLAG_VALID = 1
        AND MDC.CLOSING_FLAG IS NULL
        AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
        AND MDC.ID_CLIENT = CAM.ID_CLIENT
        AND MDC.ID_CLIENT = MDV.ID_CLIENT
        AND MDV.ID_VPN = VPC.ID_VPN
        AND MDV.ID_VPN = VTG.ID_VPN
        AND VTG.NAME_TG = TG.NAME
        AND VTG.NAME_CPP = CM.NAME
        AND VTG.SEQ_CPP = CPP.SEQ_NUM
        AND CPP.ID_CM = CM.ID_CM
        AND VPC.PARAM IN ('VPN_TYPE')
        AND VPC.PARAM_VALUE in ( 'LAN2LAN')
        AND MDC.ID_CLIENT IN
        (
            SELECT MDR.ID_CLIENT
            FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
                 MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
            WHERE MDR.ID_SERVICE = FS.ID_SERVICE
            AND MW.ID_GROUP = MDR.ID_GROUP
            AND FS.ID_FUNCTION = MDF.ID_FUNCTION
            AND MDF.FUNCTION_CODE = 'INTRANET'
        )
    ) VPC2
    LEFT JOIN OBJ_PROPERTIES OP
        ON OP.ID_OBJECT = VPC2.ID_CPP
        AND OP.TYPE = 'CRYPTO_POLICY'
        AND OP.KEY = 'PFS_GROUP'
) VPC3
UNION
SELECT  TO_NUMBER(MDV.ID_VPN) AS ID_VPN,
       'MOBILE_SUBNETS' AS PARAM,
        CASE WHEN FCSTRING_AGG(GPS.ID_GSUBNET) IS NULL THEN '-'
             ELSE fcstring_agg(GPS.IP_PREFIX||'/'||GPS.NETMASK) END AS
PARAM_VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA
        INNER JOIN CLIENT_ACCOUNT_MAP CAM
            ON MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
        INNER JOIN MASTER_DATA_CLIENTS MDC
            ON MDC.ID_CLIENT = CAM.ID_CLIENT
        INNER JOIN MASTER_DATA_VPN MDV
            ON MDC.ID_CLIENT = MDV.ID_CLIENT
        LEFT JOIN GRP_VPN_MAP GVM
            ON MDV.ID_VPN = GVM.ID_VPN
        LEFT JOIN MASTER_DATA_RELATIONSHIPS MDR
            ON GVM.ID_GROUP = MDR.ID_GROUP
        LEFT JOIN GROUP_POOL_SUBNET GPS
            ON MDR.ID_GROUP = GPS.ID_GROUP
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND (
     (MDR.ID_GROUP IS NOT NULL AND MDR.ACTIVATED = 1 
      AND MDR.CLOSING_FLAG IS NULL)
     OR MDR.ID_GROUP IS NULL
    )
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
GROUP BY MDV.ID_VPN
UNION
SELECT  TO_NUMBER(VPC.ID_VPN) AS ID_VPN,
         'VPN_PHASE1' AS PARAM,
  '<BR>'||REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' * Opzione 1' || CHR(13) || '<BR>' ||  
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- pre-shared-key' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- encryption 3des' || CHR(13) || '<BR>' ||  
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- integrity md5' || CHR(13) ||  '<BR>' ||     
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- group 2' || chr(13) || '<BR>' ||
REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- prf md5' || CHR(13) ||  '<BR>' ||   
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- lifetime 86400' || CHR(13) || '<BR>' ||
  '              ' || chr(13) ||
  REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' * Opzione 2' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- pre-shared-key' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- encryption aes-256' || CHR(13) || '<BR>' ||  
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- integrity md5' || CHR(13) ||  '<BR>' ||     
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- group 2' || chr(13) || '<BR>' ||
REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- prf md5' || CHR(13) ||  '<BR>' ||   
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- lifetime 86400' || CHR(13) || '<BR>' ||
  '              ' || chr(13) ||
  REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' * Opzione 3' || CHR(13) || '<BR>' ||  
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- pre-shared-key' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- encryption 3des' || CHR(13) || '<BR>' ||  
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- integrity Sha' || CHR(13) ||  '<BR>' ||     
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- group 2' || chr(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- prf sha-1' || CHR(13) ||  '<BR>' ||   
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- lifetime 86400' || CHR(13) || '<BR>' ||
  '              ' || chr(13) ||
  '              ' || CHR(13) ||
  '<BR>'||REPLACE(REPLACE(LPAD('A', 3, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' Pre-shared-key = ' ||
         TG.PRE_SHARED_KEY  || '<BR>'  AS PARAM_VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV,
     VPN_CONF_PARAMS VPC, VPN_TUN_GRP VTG, TUNNEL_GROUP TG
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDV.ID_CLIENT
AND MDV.ID_VPN = VPC.ID_VPN
AND MDV.ID_VPN = VTG.ID_VPN
AND VTG.NAME_TG = TG.NAME
AND VPC.PARAM IN ('VPN_TYPE')
AND VPC.PARAM_VALUE in ( 'LAN2LAN_IKEV2')
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
UNION
SELECT  TO_NUMBER(VPC3.ID_VPN) AS ID_VPN,
         'VPN_PHASE2' AS PARAM,
(select '<BR>'||REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' * IPsec Proposal supportati: ' || CHR(13) || '<BR>' ||
(select 
   LISTAGG(REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- '||  NAME||'-'||VALUE_CRYPTO||'-'||VALUE_HASH , chr(13) || '<BR>' ) WITHIN GROUP (ORDER BY NAME||'-'||VALUE_CRYPTO||'-'||VALUE_HASH) as campo
FROM transform_set
where TYPE_IKE = 'ikev2'
GROUP BY 1)
||    REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')|| CHR(13) ||' * Security Association Lifetime ' || CHR(13) || '<BR>' ||
  REPLACE(REPLACE(LPAD('A', 10, 'B'), 'A', ''), 'B', '&'||'nbsp;')||'- seconds 86400' || chr(13) || '<BR>' ||
  '              ' || CHR(13) 
|| REPLACE(REPLACE(LPAD('A', 5, 'B'), 'A', ''), 'B', '&'||'nbsp;')||' * '||VPC3.PFS_VALUE||' ' || CHR(13) || '<BR>'
    AS PARAM_VALUE
from dual )
    AS PARAM_VALUE
FROM (
    SELECT VPC2.ID_VPN,
          CASE WHEN VPC2.PFS_FLAG = 0 THEN 'PFS disable'
               WHEN OP.KEY IS NULL AND VPC2.PFS_FLAG = 1 THEN 'PFS dh group 2'
               WHEN OP.KEY IS NOT NULL AND VPC2.PFS_FLAG = 1 THEN 'PFS '||OP.VALUE        
          END AS PFS_VALUE,
          OP.KEY, OP.VALUE, VPC2.ID_CPP    
    FROM (
        SELECT VPC.ID_VPN, CPP.ID_CPP, CPP.PFS_FLAG
        FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
             MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV,
             VPN_CONF_PARAMS VPC, VPN_TUN_GRP VTG, TUNNEL_GROUP TG, 
             CRYPTO_POLICY_P2 CPP, CRYPTO_MAP CM    
        WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
        AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED')
        AND MDC.FLAG_VALID = 1
        AND MDC.CLOSING_FLAG IS NULL
        AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
        AND MDC.ID_CLIENT = CAM.ID_CLIENT
        AND MDC.ID_CLIENT = MDV.ID_CLIENT
        AND MDV.ID_VPN = VPC.ID_VPN
        AND MDV.ID_VPN = VTG.ID_VPN
        AND VTG.NAME_TG = TG.NAME
        AND VTG.NAME_CPP = CM.NAME
        AND VTG.SEQ_CPP = CPP.SEQ_NUM
        AND CPP.ID_CM = CM.ID_CM
        AND VPC.PARAM IN ('VPN_TYPE')
        AND VPC.PARAM_VALUE in ( 'LAN2LAN_IKEV2')
        AND MDC.ID_CLIENT IN
        (
            SELECT MDR.ID_CLIENT
            FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS,
                 MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
            WHERE MDR.ID_SERVICE = FS.ID_SERVICE
            AND MW.ID_GROUP = MDR.ID_GROUP
            AND FS.ID_FUNCTION = MDF.ID_FUNCTION
            AND MDF.FUNCTION_CODE = 'INTRANET'
        )
    ) VPC2
    LEFT JOIN OBJ_PROPERTIES OP
        ON OP.ID_OBJECT = VPC2.ID_CPP
        AND OP.TYPE = 'CRYPTO_POLICY'
        AND OP.KEY = 'PFS_GROUP'
) VPC3
;
--------------------------------------------------------
--  DDL for View V_GET_VPN_PARAMS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GET_VPN_PARAMS" ("ID_VPN", "VPN_PARAM", "VPN_PARAM_VALUE") AS 
  select VCP.ID_VPN, VCP.PARAM as VPN_PARAM, VCP.PARAM_VALUE as VPN_PARAM_VALUE
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM, 
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_VPN MDV, VPN_CONF_PARAMS VCP
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDV.STATUS_CODE NOT IN ('PENDING_DEACTIVATION', 'DEACTIVATED') 
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDV.ID_CLIENT
AND MDV.ID_VPN = VCP.ID_VPN
AND MDC.ID_CLIENT IN
(
    SELECT MDR.ID_CLIENT
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS, 
         MSISDN_WHITELIST MW, MASTER_DATA_FUNCTIONS MDF
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    AND FS.ID_FUNCTION = MDF.ID_FUNCTION
    AND MDF.FUNCTION_CODE = 'INTRANET'
)
;
--------------------------------------------------------
--  DDL for View V_GROUPS_SUBNETS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GROUPS_SUBNETS" ("ID_GROUP", "ID_SUBNET") AS 
  SELECT MDR.ID_GROUP, GPS.ID_GSUBNET
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM, 
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_RELATIONSHIPS MDR, 
     MASTER_DATA_SERVICES MDS, GROUP_POOL_SUBNET GPS
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MDR.ACTIVATED IN (0, 1)
AND MDR.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDR.ID_CLIENT
AND MDR.ID_SERVICE = MDS.ID_SERVICE
AND MDR.ID_GROUP = GPS.ID_GROUP
AND (MDR.ID_CLIENT, MDS.ID_SERVICE) IN
(
    SELECT MDR.ID_CLIENT, FS.ID_SERVICE
    FROM MASTER_DATA_RELATIONSHIPS MDR, FUNCTIONS_SERVICES FS, 
         MSISDN_WHITELIST MW
    WHERE MDR.ID_SERVICE = FS.ID_SERVICE
    AND MW.ID_GROUP = MDR.ID_GROUP
    GROUP BY MDR.ID_CLIENT, FS.ID_SERVICE
)
;
--------------------------------------------------------
--  DDL for View V_GRP_INTERVAL
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GRP_INTERVAL" ("ID_GROUP", "ID_INTERVAL", "DAY", "FROM_HOUR", "TO_HOUR", "CREATION_DATE", "UPDATE_DATE") AS 
  SELECT ID_GROUP, ID_INTERVAL, DAY, FROM_HOUR, TO_HOUR, CREATION_DATE, UPDATE_DATE FROM GRP_INTERVAL
;
--------------------------------------------------------
--  DDL for View V_GRP_VPN_MAP
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_GRP_VPN_MAP" ("ID_GROUP", "ID_VPN", "CREATION_DATE_GROUP") AS 
  SELECT GVM.ID_GROUP, GVM.ID_VPN, GVM.CREATION_DATE
FROM GRP_VPN_MAP GVM
;
--------------------------------------------------------
--  DDL for View V_LIST_SUBNETS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_LIST_SUBNETS" ("ID_SUBNET", "SUBNET_CIDR") AS 
  SELECT GPS.ID_GSUBNET, GPS.IP_PREFIX||'/'||GPS.NETMASK AS SBN
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM, 
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_RELATIONSHIPS MDR, 
     MASTER_DATA_SERVICES MDS, GROUP_POOL_SUBNET GPS
WHERE UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MDR.ACTIVATED IN (0, 1)
AND MDR.CLOSING_FLAG IS NULL
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDC.ID_CLIENT = MDR.ID_CLIENT
AND MDR.ID_SERVICE = MDS.ID_SERVICE
AND MDR.ID_GROUP = GPS.ID_GROUP
;
--------------------------------------------------------
--  DDL for View V_MCC_LIST
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_MCC_LIST" ("MCC", "COUNTRY_EXTENDED", "ID_AREA", "ID_MAP") AS 
  select   RIS."MCC",RIS."COUNTRY_EXTENDED",RIS."ID_AREA",RIS."ID_MAP"  from (
    select TEMP_MCC.MCC, TEMP_MCC.COUNTRY_EXTENDED, 
           AM.ID_AREA, AM.ID_MAP 
    from (
        SELECT MCC, COUNTRY_EXTENDED 
        FROM MCC_MNC_TABLE
        WHERE MCC <> 340
        GROUP BY MCC, COUNTRY_EXTENDED
        UNION
        SELECT TMP.MCC, REPLACE(FCSTRING_AGG(COUNTRY_EXTENDED), ',', ' / ') AS COUNTRY_EXTENDED
        FROM (
            SELECT MCC, COUNTRY_EXTENDED 
            FROM MCC_MNC_TABLE
            WHERE MCC = 340
            GROUP BY MCC, COUNTRY_EXTENDED
            ORDER BY MCC, 
                     CASE WHEN COUNTRY_EXTENDED = 'Guadeloupe' THEN 0 
                          WHEN COUNTRY_EXTENDED = 'Martinique' THEN 1 
                          ELSE 2 
                     END
        ) TMP
        group by TMP.MCC
    )  TEMP_MCC 
    LEFT JOIN MCC_AREA MCA
        ON TEMP_MCC.MCC = MCA.MCC
    LEFT JOIN AREA_MAP AM
        on AM.ID_AREA = MCA.ID_AREA 
) RIS
ORDER BY MCC, COUNTRY_EXTENDED
;
--------------------------------------------------------
--  DDL for View V_MOBILE_SUBNET
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_MOBILE_SUBNET" ("OC1", "OC2", "OC3", "OC4") AS 
  SELECT OC1, OC2, OC3, OC4
FROM MOBILE_SUBNET ms
WHERE
 ID_GGSN IN (
    SELECT ID_GGSN
    FROM GGSN_NODE GN, APN_ACCOUNT_MAP AAM
    WHERE GN.ID_APN = AAM.ID_APN
    and AAM.ID_ACCOUNT in (select ID_ACCOUNT from M2M_PLATFORM_ACCOUNTS M2MPA
   where  UPPER(M2MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))    
    ))
;
--------------------------------------------------------
--  DDL for View V_MOBILE_SUBNET_OC1
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_MOBILE_SUBNET_OC1" ("OC1") AS 
  SELECT OC1
FROM MOBILE_SUBNET_OC1
WHERE ID_GGSN IN (
    SELECT ID_GGSN
    FROM GGSN_NODE GN, APN_ACCOUNT_MAP AAM
    WHERE GN.ID_APN = AAM.ID_APN
    and AAM.ID_ACCOUNT in (select ID_ACCOUNT from M2M_PLATFORM_ACCOUNTS M2MPA
   where  UPPER(M2MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))    
    ))
;
--------------------------------------------------------
--  DDL for View V_MSISDN_FIXEDIP
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_MSISDN_FIXEDIP" ("MSISDN", "ID_SUBNET", "IPADDRESS", "CREATION_DATE") AS 
  select FCDENORMALIZEMSISDN(MF.MSISDN) as MSISDN,
       MF.ID_GSUBNET,
       MF.IPADDRESS,
       FCCONVERTUTCDATEINSPECIFICTZ(MF.CREATION_DATE, (select value 
                                                        from PLATFORM_CONFIGURATION 
                                                        where PARAM = 'APNS_TIMEZONE')) as CD
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_RELATIONSHIPS MDR,
     MASTER_DATA_SERVICES MDS, MSISDN_WHITELIST MW, MSISDN_FIXEDIP MF
WHERE MDR.ACTIVATED IN (0, 1)
AND MDR.CLOSING_FLAG is null
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MW.FLAG_INTERNAL = 0
AND UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDR.ID_CLIENT = MDC.ID_CLIENT
AND MDS.ID_SERVICE = MDR.ID_SERVICE
and MW.ID_GROUP = MDR.ID_GROUP
AND MW.MSISDN = MF.MSISDN
union
select FCDENORMALIZEMSISDN(MFS.MSISDN) as MSISDN,
       MFS.ID_GSUBNET,
       MFS.IPADDRESS,
       FCCONVERTUTCDATEINSPECIFICTZ(MFS.CREATION_DATE, (select value 
                                                        from PLATFORM_CONFIGURATION 
                                                        where PARAM = 'APNS_TIMEZONE')) as CD
FROM M2M_PLATFORM_ACCOUNTS MPA, CLIENT_ACCOUNT_MAP CAM,
     MASTER_DATA_CLIENTS MDC, MASTER_DATA_RELATIONSHIPS MDR,
     MASTER_DATA_SERVICES MDS, MSISDN_SHADOW MS, MSISDN_FIXEDIP_SHADOW MFS
WHERE MDR.ACTIVATED IN (0, 1)
AND MDR.CLOSING_FLAG is null
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
AND MS.FLAG_INTERNAL = 0
AND UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND MDC.ID_CLIENT = CAM.ID_CLIENT
AND MDR.ID_CLIENT = MDC.ID_CLIENT
and MDS.ID_SERVICE = MDR.ID_SERVICE
and MS.ID_GROUP = MDR.ID_GROUP
AND MS.MSISDN = MFS.MSISDN
;
--------------------------------------------------------
--  DDL for View V_MSISDN_THRESHOLD
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_MSISDN_THRESHOLD" ("MSISDN", "ID_THD", "TOT_TRAFFIC", "CREATION_DATE", "START_THRESHOLD", "END_THRESHOLD", "FLAG_REACHED") AS 
  SELECT FCDENORMALIZEMSISDN(MT.MSISDN), MT.ID_THD, 
       CASE WHEN MTH.MSISDN IS NULL
            THEN MT.TOT_TRAFFIC_RANK
            ELSE MT.TOT_TRAFFIC_RANK + NVL(MTH.SESSION_RANK, 0)
       END AS TOT_TRAFFIC,
       MT.CREATION_DATE, MT.START_THRESHOLD, MT.END_THRESHOLD,  MT.FLAG_REACHED
FROM MSISDN_THRESHOLD MT INNER JOIN THRESHOLD_DETAILS TD
    ON TD.ID_THD = MT.ID_THD
LEFT JOIN MSISDN_THR_MAP MTH
    ON MTH.MSISDN = MT.MSISDN
    AND MTH.SESSION_ID_AREA = TD.ID_AREA
;
--------------------------------------------------------
--  DDL for View V_PERIOD_LIST
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_PERIOD_LIST" ("ID_PERIOD", "PERIOD_NAME") AS 
  SELECT ID_PERIOD, PERIOD_NAME FROM PERIOD_LIST
;
--------------------------------------------------------
--  DDL for View V_RADACCT_UNION
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_RADACCT_UNION" ("ID_RADACT", "ID_GROUP", "CREATION_DATE", "ACCTSESSIONID", "ACCTUNIQUEID", "USERNAME", "REALM", "NASIPADDRESS", "NASPORTID", "NASPORTTYPE", "ACCTSTARTTIME", "ACCTSTOPTIME", "ACCTSESSIONTIME", "ACCTAUTHENTIC", "CONNECTINFO_START", "CONNECTINFO_STOP", "ACCTINPUTOCTETS", "ACCTOUTPUTOCTETS", "CALLEDSTATIONID", "CALLINGSTATIONID", "ACCTTERMINATECAUSE", "SERVICETYPE", "FRAMEDPROTOCOL", "FRAMEDIPADDRESS", "ACCTSTARTDELAY", "ACCTSTOPDELAY", "XASCENDSESSIONSVRKEY", "MNC", "MCC", "IMEI", "IMEI_SW_VERSION", "RAT_TYPE", "FLAG_MISSING", "UPDATE_DATE", "NAS_IDENTIFIER", "ID_CLIENT", "CL_MOD_CLIENT", "MONTH_ACCTSTARTTIME", "SGSN_ADDRESS", "CONN_CLOSED", "ID_GGSN") AS 
  select "ID_RADACT","ID_GROUP","CREATION_DATE","ACCTSESSIONID","ACCTUNIQUEID","USERNAME","REALM","NASIPADDRESS","NASPORTID","NASPORTTYPE","ACCTSTARTTIME","ACCTSTOPTIME","ACCTSESSIONTIME","ACCTAUTHENTIC","CONNECTINFO_START","CONNECTINFO_STOP","ACCTINPUTOCTETS","ACCTOUTPUTOCTETS","CALLEDSTATIONID","CALLINGSTATIONID","ACCTTERMINATECAUSE","SERVICETYPE","FRAMEDPROTOCOL","FRAMEDIPADDRESS","ACCTSTARTDELAY","ACCTSTOPDELAY","XASCENDSESSIONSVRKEY","MNC","MCC","IMEI","IMEI_SW_VERSION","RAT_TYPE","FLAG_MISSING","UPDATE_DATE","NAS_IDENTIFIER","ID_CLIENT","CL_MOD_CLIENT","MONTH_ACCTSTARTTIME","SGSN_ADDRESS","CONN_CLOSED","ID_GGSN" from  V_RADACCT_UNION_M2M 
UNION 
SELECT "ID_RADACT","ID_GROUP","CREATION_DATE","ACCTSESSIONID","ACCTUNIQUEID","USERNAME","REALM","NASIPADDRESS","NASPORTID","NASPORTTYPE","ACCTSTARTTIME","ACCTSTOPTIME","ACCTSESSIONTIME","ACCTAUTHENTIC","CONNECTINFO_START","CONNECTINFO_STOP","ACCTINPUTOCTETS","ACCTOUTPUTOCTETS","CALLEDSTATIONID","CALLINGSTATIONID","ACCTTERMINATECAUSE","SERVICETYPE","FRAMEDPROTOCOL","FRAMEDIPADDRESS","ACCTSTARTDELAY","ACCTSTOPDELAY","XASCENDSESSIONSVRKEY","MNC","MCC","IMEI","IMEI_SW_VERSION","RAT_TYPE","FLAG_MISSING","UPDATE_DATE","NAS_IDENTIFIER","ID_CLIENT","CL_MOD_CLIENT","MONTH_ACCTSTARTTIME","SGSN_ADDRESS","CONN_CLOSED","ID_GGSN" FROM  V_RADACCT_UNION_TIDS
UNION 
SELECT "ID_RADACT","ID_GROUP","CREATION_DATE","ACCTSESSIONID","ACCTUNIQUEID","USERNAME","REALM","NASIPADDRESS","NASPORTID","NASPORTTYPE","ACCTSTARTTIME","ACCTSTOPTIME","ACCTSESSIONTIME","ACCTAUTHENTIC","CONNECTINFO_START","CONNECTINFO_STOP","ACCTINPUTOCTETS","ACCTOUTPUTOCTETS","CALLEDSTATIONID","CALLINGSTATIONID","ACCTTERMINATECAUSE","SERVICETYPE","FRAMEDPROTOCOL","FRAMEDIPADDRESS","ACCTSTARTDELAY","ACCTSTOPDELAY","XASCENDSESSIONSVRKEY","MNC","MCC","IMEI","IMEI_SW_VERSION","RAT_TYPE","FLAG_MISSING","UPDATE_DATE","NAS_IDENTIFIER","ID_CLIENT","CL_MOD_CLIENT","MONTH_ACCTSTARTTIME","SGSN_ADDRESS","CONN_CLOSED","ID_GGSN" FROM  V_RADACCT_UNION_TEST
;
--------------------------------------------------------
--  DDL for View V_RADACCT_UNION_M2M
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_RADACCT_UNION_M2M" ("ID_RADACT", "ID_GROUP", "CREATION_DATE", "ACCTSESSIONID", "ACCTUNIQUEID", "USERNAME", "REALM", "NASIPADDRESS", "NASPORTID", "NASPORTTYPE", "ACCTSTARTTIME", "ACCTSTOPTIME", "ACCTSESSIONTIME", "ACCTAUTHENTIC", "CONNECTINFO_START", "CONNECTINFO_STOP", "ACCTINPUTOCTETS", "ACCTOUTPUTOCTETS", "CALLEDSTATIONID", "CALLINGSTATIONID", "ACCTTERMINATECAUSE", "SERVICETYPE", "FRAMEDPROTOCOL", "FRAMEDIPADDRESS", "ACCTSTARTDELAY", "ACCTSTOPDELAY", "XASCENDSESSIONSVRKEY", "MNC", "MCC", "IMEI", "IMEI_SW_VERSION", "RAT_TYPE", "FLAG_MISSING", "UPDATE_DATE", "NAS_IDENTIFIER", "ID_CLIENT", "CL_MOD_CLIENT", "MONTH_ACCTSTARTTIME", "SGSN_ADDRESS", "CONN_CLOSED", "ID_GGSN") AS 
  select 
RAO.ID_RADACT,
RAO.ID_GROUP,
RAO.CREATION_DATE,
RAO.ACCTSESSIONID,
RAO.ACCTUNIQUEID,
RAO.USERNAME,
RAO.REALM,
RAO.NASIPADDRESS,
RAO.NASPORTID,
RAO.NASPORTTYPE,
RAO.ACCTSTARTTIME,
RAO.ACCTSTOPTIME,
RAO.ACCTSESSIONTIME,
RAO.ACCTAUTHENTIC,
RAO.CONNECTINFO_START,
RAO.CONNECTINFO_STOP,
RAO.ACCTINPUTOCTETS,
RAO.ACCTOUTPUTOCTETS,
RAO.CALLEDSTATIONID,
RAO.CALLINGSTATIONID,
RAO.ACCTTERMINATECAUSE,
RAO.SERVICETYPE,
RAO.FRAMEDPROTOCOL,
RAO.FRAMEDIPADDRESS,
RAO.ACCTSTARTDELAY,
RAO.ACCTSTOPDELAY,
RAO.XASCENDSESSIONSVRKEY,
RAO.MNC,
RAO.MCC,
RAO.IMEI,
RAO.IMEI_SW_VERSION,
RAO.RAT_TYPE,
RAO.FLAG_MISSING,
RAO.UPDATE_DATE,
RAO.NAS_IDENTIFIER,
RAO.ID_CLIENT,
RAO.CL_MOD_CLIENT,
RAO.MONTH_ACCTSTARTTIME,
RAO.SGSN_ADDRESS,
RAO.CONN_CLOSED,
RAO.ID_GGSN
from RADACCT_ONLINE RAO, 
M2M_PLATFORM_ACCOUNTS MPA, 
CLIENT_ACCOUNT_MAP CAM
where
MPA.NAME='M2M'
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND RAO.ID_CLIENT = CAM.ID_CLIENT
union 
select 
ID_RADACT,
ID_GROUP,
CREATION_DATE,
ACCTSESSIONID,
ACCTUNIQUEID,
USERNAME,
REALM,
NASIPADDRESS,
NASPORTID,
NASPORTTYPE,
ACCTSTARTTIME,
ACCTSTOPTIME,
ACCTSESSIONTIME,
ACCTAUTHENTIC,
CONNECTINFO_START,
CONNECTINFO_STOP,
ACCTINPUTOCTETS,
ACCTOUTPUTOCTETS,
CALLEDSTATIONID,
CALLINGSTATIONID,
ACCTTERMINATECAUSE,
SERVICETYPE,
FRAMEDPROTOCOL,
FRAMEDIPADDRESS,
ACCTSTARTDELAY,
ACCTSTOPDELAY,
XASCENDSESSIONSVRKEY,
MNC,
MCC,
IMEI,
IMEI_SW_VERSION,
RAT_TYPE,
FLAG_MISSING,
UPDATE_DATE,
NAS_IDENTIFIER,
ID_CLIENT,
CL_MOD_CLIENT,
MONTH_ACCTSTARTTIME,
SGSN_ADDRESS,
1,
ID_GGSN
from RADACCT
;
--------------------------------------------------------
--  DDL for View V_RADACCT_UNION_TEST
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_RADACCT_UNION_TEST" ("ID_RADACT", "ID_GROUP", "CREATION_DATE", "ACCTSESSIONID", "ACCTUNIQUEID", "USERNAME", "REALM", "NASIPADDRESS", "NASPORTID", "NASPORTTYPE", "ACCTSTARTTIME", "ACCTSTOPTIME", "ACCTSESSIONTIME", "ACCTAUTHENTIC", "CONNECTINFO_START", "CONNECTINFO_STOP", "ACCTINPUTOCTETS", "ACCTOUTPUTOCTETS", "CALLEDSTATIONID", "CALLINGSTATIONID", "ACCTTERMINATECAUSE", "SERVICETYPE", "FRAMEDPROTOCOL", "FRAMEDIPADDRESS", "ACCTSTARTDELAY", "ACCTSTOPDELAY", "XASCENDSESSIONSVRKEY", "MNC", "MCC", "IMEI", "IMEI_SW_VERSION", "RAT_TYPE", "FLAG_MISSING", "UPDATE_DATE", "NAS_IDENTIFIER", "ID_CLIENT", "CL_MOD_CLIENT", "MONTH_ACCTSTARTTIME", "SGSN_ADDRESS", "CONN_CLOSED", "ID_GGSN") AS 
  select 
RAO.ID_RADACT,
RAO.ID_GROUP,
RAO.CREATION_DATE,
RAO.ACCTSESSIONID,
RAO.ACCTUNIQUEID,
RAO.USERNAME,
RAO.REALM,
RAO.NASIPADDRESS,
RAO.NASPORTID,
RAO.NASPORTTYPE,
RAO.ACCTSTARTTIME,
RAO.ACCTSTOPTIME,
RAO.ACCTSESSIONTIME,
RAO.ACCTAUTHENTIC,
RAO.CONNECTINFO_START,
RAO.CONNECTINFO_STOP,
RAO.ACCTINPUTOCTETS,
RAO.ACCTOUTPUTOCTETS,
RAO.CALLEDSTATIONID,
RAO.CALLINGSTATIONID,
RAO.ACCTTERMINATECAUSE,
RAO.SERVICETYPE,
RAO.FRAMEDPROTOCOL,
RAO.FRAMEDIPADDRESS,
RAO.ACCTSTARTDELAY,
RAO.ACCTSTOPDELAY,
RAO.XASCENDSESSIONSVRKEY,
RAO.MNC,
RAO.MCC,
RAO.IMEI,
RAO.IMEI_SW_VERSION,
RAO.RAT_TYPE,
RAO.FLAG_MISSING,
RAO.UPDATE_DATE,
RAO.NAS_IDENTIFIER,
RAO.ID_CLIENT,
RAO.CL_MOD_CLIENT,
RAO.MONTH_ACCTSTARTTIME,
RAO.SGSN_ADDRESS,
RAO.CONN_CLOSED,
RAO.ID_GGSN
from RADACCT_ONLINE RAO, 
M2M_PLATFORM_ACCOUNTS MPA, 
CLIENT_ACCOUNT_MAP CAM
WHERE
MPA.NAME NOT IN('M2M', 'TIDS')
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND RAO.ID_CLIENT = CAM.ID_CLIENT
union 
SELECT 
RA.ID_RADACT,
RA.ID_GROUP,
RA.CREATION_DATE,
RA.ACCTSESSIONID,
RA.ACCTUNIQUEID,
RA.USERNAME,
RA.REALM,
RA.NASIPADDRESS,
RA.NASPORTID,
RA.NASPORTTYPE,
RA.ACCTSTARTTIME,
RA.ACCTSTOPTIME,
RA.ACCTSESSIONTIME,
RA.ACCTAUTHENTIC,
RA.CONNECTINFO_START,
RA.CONNECTINFO_STOP,
RA.ACCTINPUTOCTETS,
RA.ACCTOUTPUTOCTETS,
RA.CALLEDSTATIONID,
RA.CALLINGSTATIONID,
RA.ACCTTERMINATECAUSE,
RA.SERVICETYPE,
RA.FRAMEDPROTOCOL,
RA.FRAMEDIPADDRESS,
RA.ACCTSTARTDELAY,
RA.ACCTSTOPDELAY,
RA.XASCENDSESSIONSVRKEY,
RA.MNC,
RA.MCC,
RA.IMEI,
RA.IMEI_SW_VERSION,
RA.RAT_TYPE,
RA.FLAG_MISSING,
RA.UPDATE_DATE,
RA.NAS_IDENTIFIER,
RA.ID_CLIENT,
RA.CL_MOD_CLIENT,
RA.MONTH_ACCTSTARTTIME,
RA.SGSN_ADDRESS,
1,
RA.ID_GGSN
FROM RADACCT RA,
M2M_PLATFORM_ACCOUNTS MPA,
CLIENT_ACCOUNT_MAP CAM
WHERE
MPA.NAME NOT IN('M2M', 'TIDS')
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND RA.ID_CLIENT = CAM.ID_CLIENT
;
--------------------------------------------------------
--  DDL for View V_RADACCT_UNION_TIDS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_RADACCT_UNION_TIDS" ("ID_RADACT", "ID_GROUP", "CREATION_DATE", "ACCTSESSIONID", "ACCTUNIQUEID", "USERNAME", "REALM", "NASIPADDRESS", "NASPORTID", "NASPORTTYPE", "ACCTSTARTTIME", "ACCTSTOPTIME", "ACCTSESSIONTIME", "ACCTAUTHENTIC", "CONNECTINFO_START", "CONNECTINFO_STOP", "ACCTINPUTOCTETS", "ACCTOUTPUTOCTETS", "CALLEDSTATIONID", "CALLINGSTATIONID", "ACCTTERMINATECAUSE", "SERVICETYPE", "FRAMEDPROTOCOL", "FRAMEDIPADDRESS", "ACCTSTARTDELAY", "ACCTSTOPDELAY", "XASCENDSESSIONSVRKEY", "MNC", "MCC", "IMEI", "IMEI_SW_VERSION", "RAT_TYPE", "FLAG_MISSING", "UPDATE_DATE", "NAS_IDENTIFIER", "ID_CLIENT", "CL_MOD_CLIENT", "MONTH_ACCTSTARTTIME", "SGSN_ADDRESS", "CONN_CLOSED", "ID_GGSN") AS 
  select 
RAO.ID_RADACT,
RAO.ID_GROUP,
RAO.CREATION_DATE,
RAO.ACCTSESSIONID,
RAO.ACCTUNIQUEID,
RAO.USERNAME,
RAO.REALM,
RAO.NASIPADDRESS,
RAO.NASPORTID,
RAO.NASPORTTYPE,
RAO.ACCTSTARTTIME,
RAO.ACCTSTOPTIME,
RAO.ACCTSESSIONTIME,
RAO.ACCTAUTHENTIC,
RAO.CONNECTINFO_START,
RAO.CONNECTINFO_STOP,
RAO.ACCTINPUTOCTETS,
RAO.ACCTOUTPUTOCTETS,
RAO.CALLEDSTATIONID,
RAO.CALLINGSTATIONID,
RAO.ACCTTERMINATECAUSE,
RAO.SERVICETYPE,
RAO.FRAMEDPROTOCOL,
RAO.FRAMEDIPADDRESS,
RAO.ACCTSTARTDELAY,
RAO.ACCTSTOPDELAY,
RAO.XASCENDSESSIONSVRKEY,
RAO.MNC,
RAO.MCC,
RAO.IMEI,
RAO.IMEI_SW_VERSION,
RAO.RAT_TYPE,
RAO.FLAG_MISSING,
RAO.UPDATE_DATE,
RAO.NAS_IDENTIFIER,
RAO.ID_CLIENT,
RAO.CL_MOD_CLIENT,
RAO.MONTH_ACCTSTARTTIME,
RAO.SGSN_ADDRESS,
RAO.CONN_CLOSED,
RAO.ID_GGSN
from RADACCT_ONLINE RAO, 
M2M_PLATFORM_ACCOUNTS MPA, 
CLIENT_ACCOUNT_MAP CAM
where
MPA.NAME='TIDS'
AND MPA.ID_ACCOUNT = CAM.ID_ACCOUNT
AND RAO.ID_CLIENT = CAM.ID_CLIENT
union 
select 
ID_RADACT,
ID_GROUP,
CREATION_DATE,
ACCTSESSIONID,
ACCTUNIQUEID,
USERNAME,
REALM,
NASIPADDRESS,
NASPORTID,
NASPORTTYPE,
ACCTSTARTTIME,
ACCTSTOPTIME,
ACCTSESSIONTIME,
ACCTAUTHENTIC,
CONNECTINFO_START,
CONNECTINFO_STOP,
ACCTINPUTOCTETS,
ACCTOUTPUTOCTETS,
CALLEDSTATIONID,
CALLINGSTATIONID,
ACCTTERMINATECAUSE,
SERVICETYPE,
FRAMEDPROTOCOL,
FRAMEDIPADDRESS,
ACCTSTARTDELAY,
ACCTSTOPDELAY,
XASCENDSESSIONSVRKEY,
MNC,
MCC,
IMEI,
IMEI_SW_VERSION,
RAT_TYPE,
FLAG_MISSING,
UPDATE_DATE,
NAS_IDENTIFIER,
ID_CLIENT,
CL_MOD_CLIENT,
MONTH_ACCTSTARTTIME,
SGSN_ADDRESS,
1,
ID_GGSN
from RADACCT_TIDS
;
--------------------------------------------------------
--  DDL for View V_TEST_VIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_TEST_VIEW" ("USER") AS 
  SELECT UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER')) FROM DUAL
;
--------------------------------------------------------
--  DDL for View V_THRESHOLD
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_THRESHOLD" ("ID_THRESHOLD", "ID_CLIENT", "NAME", "CREATION_DATE", "UPDATE_DATE", "ID_MAP") AS 
  SELECT ID_THRESHOLD, ID_CLIENT, NAME, CREATION_DATE, UPDATE_DATE, ID_MAP  FROM THRESHOLD
;
--------------------------------------------------------
--  DDL for View V_THRESHOLD_DETAILS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_THRESHOLD_DETAILS" ("ID_THD", "ID_AREA", "ID_THRESHOLD", "CREATION_DATE", "UPDATE_DATE", "TH_VALUE", "ID_PERIOD", "TYPE") AS 
  SELECT ID_THD,ID_AREA, ID_THRESHOLD, CREATION_DATE, UPDATE_DATE, TH_VALUE, ID_PERIOD, TYPE  FROM THRESHOLD_DETAILS
;
--------------------------------------------------------
--  DDL for View V_TRAFFIC
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_TRAFFIC" ("ID_GROUP", "ID_CLIENT", "CALLINGSTATIONID", "ACCTINPUTOCTETS", "ACCTOUTPUTOCTETS", "ACCTSTARTTIME", "ACCTSTOPTIME", "NET_TYPE", "IMEI", "MCC", "BRAND_PHONE", "MODEL_PHONE", "MONTH_ACCTSTARTTIME", "CL_MOD_CLIENT", "COUNTRY_EXTENDED", "IPADDRESS", "TOTAL_TRAFFIC_RANK") AS 
  SELECT
    MDR.ID_GROUP,
    MDR.ID_CLIENT,
    fcdenormalizemsisdn(RA.CALLINGSTATIONID),
    RA.ACCTINPUTOCTETS,
    RA.ACCTOUTPUTOCTETS,
    ra.ACCTSTARTTIME at time zone 'Europe/Rome' as ACCTSTARTTIME,
    ra.ACCTSTOPTIME AT TIME ZONE 'Europe/Rome' AS ACCTSTOPTIME,
    CASE
      WHEN RA.RAT_TYPE = 1 THEN '3G'
      WHEN RA.RAT_TYPE = 2 THEN '2G'
      WHEN RA.RAT_TYPE = 6 THEN '4G'
    END AS NET_TYPE,
    RA.IMEI,
    RA.MCC,
    NVL(PI.BRAND_PHONE, '-'),
    NVL(PI.MODEL_PHONE, '-'),
    RA.MONTH_ACCTSTARTTIME,
    RA.CL_MOD_CLIENT,
    VMCC.COUNTRY_EXTENDED,
    RA.FRAMEDIPADDRESS AS IPADDRESS, 
    RA.TOTALOCTETS_RANK
FROM
    (
        select ID_RADACT, ID_GROUP, CREATION_DATE, ACCTSESSIONID, 
                ACCTUNIQUEID, USERNAME, REALM, NASIPADDRESS, 
                NASPORTID, NASPORTTYPE, ACCTSTARTTIME, 
                ACCTSTOPTIME, ACCTSESSIONTIME, ACCTAUTHENTIC, 
                CONNECTINFO_START, CONNECTINFO_STOP, 
                ACCTINPUTOCTETS, ACCTOUTPUTOCTETS, 
                CALLEDSTATIONID, CALLINGSTATIONID, 
                ACCTTERMINATECAUSE, SERVICETYPE, FRAMEDPROTOCOL, 
                FRAMEDIPADDRESS, ACCTSTARTDELAY, ACCTSTOPDELAY, 
                XASCENDSESSIONSVRKEY, MNC, MCC, IMEI, 
                IMEI_SW_VERSION, RAT_TYPE, FLAG_MISSING, 
                UPDATE_DATE, NAS_IDENTIFIER, ID_CLIENT, 
                CL_MOD_CLIENT, MONTH_ACCTSTARTTIME, 
                SGSN_ADDRESS, ID_GGSN, ID_AREA, TOTALOCTETS_RANK
        FROM RADACCT
        UNION
        select ID_RADACT, ID_GROUP, CREATION_DATE, ACCTSESSIONID, 
                ACCTUNIQUEID, USERNAME, REALM, NASIPADDRESS, 
                NASPORTID, NASPORTTYPE, ACCTSTARTTIME, 
                ACCTSTOPTIME, ACCTSESSIONTIME, ACCTAUTHENTIC, 
                CONNECTINFO_START, CONNECTINFO_STOP, 
                ACCTINPUTOCTETS, ACCTOUTPUTOCTETS, 
                CALLEDSTATIONID, CALLINGSTATIONID, 
                ACCTTERMINATECAUSE, SERVICETYPE, FRAMEDPROTOCOL, 
                FRAMEDIPADDRESS, ACCTSTARTDELAY, ACCTSTOPDELAY, 
                XASCENDSESSIONSVRKEY, MNC, MCC, IMEI, 
                IMEI_SW_VERSION, RAT_TYPE, FLAG_MISSING, 
                UPDATE_DATE, NAS_IDENTIFIER, ID_CLIENT, 
                CL_MOD_CLIENT, MONTH_ACCTSTARTTIME, 
                SGSN_ADDRESS, ID_GGSN, ID_AREA, TOTALOCTETS_RANK
        FROM RADACCT_ONLINE
    ) RA inner join MASTER_DATA_RELATIONSHIPS MDR
        ON RA.ID_GROUP = MDR.ID_GROUP
        AND RA.ID_CLIENT = MDR.ID_CLIENT
        AND RA.CL_MOD_CLIENT = MOD(MDR.ID_CLIENT, 11)
    INNER JOIN MASTER_DATA_CLIENTS MDC
        ON MDR.ID_CLIENT = MDC.ID_CLIENT        
    INNER JOIN CLIENT_ACCOUNT_MAP CAM
        ON MDC.ID_CLIENT = CAM.ID_CLIENT
    INNER JOIN M2M_PLATFORM_ACCOUNTS MPA
        ON MPA.ID_ACCOUNT = CAM.ID_ACCOUNT    
        AND UPPER(MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))
    LEFT JOIN PHONE_INFO PI
        ON RA.CALLINGSTATIONID = PI.MSISDN
        AND RA.IMEI = PI.IMEI
    LEFT JOIN V_MCC_LIST  VMCC
      ON RA.MCC = VMCC.MCC
      AND RA.ID_AREA = VMCC.ID_AREA
      AND MDC.DEFAULT_ID_MAP = VMCC.ID_MAP         
where (
        RA.FLAG_MISSING <> 1
        or
        (
            RA.FLAG_MISSING = 1
            and
            (RA.ACCTINPUTOCTETS > 0 or RA.ACCTOUTPUTOCTETS > 0)
        )
)
AND MDC.FLAG_VALID = 1
AND MDC.CLOSING_FLAG IS NULL
;
--------------------------------------------------------
--  DDL for View V_VPNHOST_SUBNET
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_VPNHOST_SUBNET" ("OC1", "OC2", "OC3", "OC4", "L2L_FLAG") AS 
  SELECT OC1, OC2, OC3, OC4, L2L_FLAG
FROM VPNHOST_SUBNET
WHERE ID_APN IN (
    SELECT AAM.ID_APN
    FROM APN_ACCOUNT_MAP AAM
    WHERE AAM.ID_ACCOUNT IN (SELECT ID_ACCOUNT FROM M2M_PLATFORM_ACCOUNTS M2MPA
                             where  UPPER(M2MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))    
    )
)
;
--------------------------------------------------------
--  DDL for View V_VPNHOST_SUBNET_OC1
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_VPNHOST_SUBNET_OC1" ("OC1") AS 
  SELECT OC1
FROM VPNHOST_SUBNET_OC1
WHERE ID_APN IN (
    SELECT AAM.ID_APN
    FROM APN_ACCOUNT_MAP AAM
    WHERE AAM.ID_ACCOUNT IN (SELECT ID_ACCOUNT FROM M2M_PLATFORM_ACCOUNTS M2MPA
                             where  UPPER(M2MPA.DB_USER) = UPPER(SYS_CONTEXT('USERENV', 'SESSION_USER'))    
    )
)
;
--------------------------------------------------------
--  DDL for Trigger TRG_ACL_NAME
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_ACL_NAME" BEFORE
INSERT ON ACL_DEVICE
for each row
DECLARE
   RES NUMBER := 0;
   EXP_ACL_PRESENT EXCEPTION;
BEGIN
    SELECT COUNT(1) INTO RES
    FROM ACL_DEVICE AD
    WHERE AD.NAME = :NEW.NAME
    AND AD.FLAG_REMOVING is null;

    IF RES > 0 THEN
        RAISE EXP_ACL_PRESENT;
    END IF;
exception
   WHEN EXP_ACL_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20003, 'TRIGGER TRG_ACL_NAME FAILED - ALREADY PRESENT ACL NAME: '||:NEW.NAME);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_ACL_NAME FAILED - GENERIC ERROR - ACL NAME: '||:NEW.NAME);
END TRG_ACL_NAME;



/
ALTER TRIGGER "TRG_ACL_NAME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_CM_INTCHECK
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_CM_INTCHECK" 
AFTER INSERT OR UPDATE ON CRYPTO_MAP
DECLARE
    RES                 NUMBER := 0;
    V_USERNAME          VARCHAR2(300) := '';
    EXP_DUPLICATE_INT  EXCEPTION;
    ERROR_CODE          NUMBER;
    ERROR_MSG           VARCHAR2 (300);
BEGIN

    SELECT COUNT(1) INTO RES
    FROM CRYPTO_MAP
    GROUP BY ID_INTERFACE
    having COUNT(1) > 1;    

    if RES > 0 then
        RAISE EXP_DUPLICATE_INT;
    END IF;

exception
   WHEN NO_DATA_FOUND THEN
        RES := 0;
   when EXP_DUPLICATE_INT then
        RAISE_APPLICATION_ERROR(-20030, 'TRIGGER TRG_CM_INTCHECK FAILED - DUPLICATE ID_INTERFACE');
   WHEN OTHERS THEN
        error_code := SQLCODE;
        ERROR_MSG  := SQLERRM;
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_CM_INTCHECK FAILED - GENERIC ERROR ');
END TRG_CM_INTCHECK;




/
ALTER TRIGGER "TRG_CM_INTCHECK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_CPP_SEQ_NUM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_CPP_SEQ_NUM" BEFORE
INSERT ON CRYPTO_POLICY_P2
for each row
DECLARE
   RES NUMBER := 0;
   EXP_CPP_PRESENT EXCEPTION;
BEGIN
    SELECT COUNT(1) INTO RES
    FROM CRYPTO_POLICY_P2 CPP
    WHERE CPP.SEQ_NUM = :NEW.SEQ_NUM
    AND CPP.ID_CM = :NEW.ID_CM
    AND CPP.FLAG_REMOVING is null;

    IF RES > 0 THEN
        RAISE EXP_CPP_PRESENT;
    END IF;
exception
   WHEN EXP_CPP_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20003, 'TRIGGER TRG_CPP_SEQ_NUM FAILED - ALREADY PRESENT CPP SEQ_NUM: '||:NEW.SEQ_NUM);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_CPP_SEQ_NUM FAILED - GENERIC ERROR - CPP SEQ_NUM: '||:NEW.SEQ_NUM);
END TRG_CPP_SEQ_NUM;

/
ALTER TRIGGER "TRG_CPP_SEQ_NUM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_GP_NAME
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_GP_NAME" BEFORE
INSERT ON GROUP_POLICY
for each row
DECLARE
   RES NUMBER := 0;
   EXP_GP_PRESENT EXCEPTION;
BEGIN
    SELECT COUNT(1) INTO RES
    FROM GROUP_POLICY GP
    WHERE GP.NAME = :NEW.NAME
    AND GP.FLAG_REMOVING is null;

    IF RES > 0 THEN
        RAISE EXP_GP_PRESENT;
    END IF;
exception
   WHEN EXP_GP_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20003, 'TRIGGER TRG_GP_NAME FAILED - ALREADY PRESENT GP NAME: '||:NEW.NAME);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_GP_NAME FAILED - GENERIC ERROR - GP NAME: '||:NEW.NAME);
END TRG_GP_NAME;



/
ALTER TRIGGER "TRG_GP_NAME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_LAST_CONNECTION
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_LAST_CONNECTION" BEFORE
INSERT ON LAST_CONNECTION
for each row
DECLARE
   RES      NUMBER := 0;
   RES_TIDS NUMBER := 0;
   RES_ONLINE NUMBER := 0;
   V_ID_RADACT  LAST_CONNECTION.ID_RADACT%TYPE;
   V_ID_RADACT_CLOSED  LAST_CONNECTION.ID_RADACT_CLOSED%TYPE;
   EXP_ID_RADACT_NOT_PRT EXCEPTION;
   EXP_ID_RADACT_CLD_NOT_PRT EXCEPTION;
BEGIN

    V_ID_RADACT := :NEW.ID_RADACT;
    V_ID_RADACT_CLOSED := :NEW.ID_RADACT_CLOSED;

    RES := 0;

    IF V_ID_RADACT IS NOT NULL THEN

        SELECT COUNT(1) INTO RES_ONLINE
        FROM RADACCT_ONLINE 
        WHERE ID_RADACT = V_ID_RADACT;

        IF RES_ONLINE = 0 THEN
            RAISE EXP_ID_RADACT_NOT_PRT;
        END IF;        

    END IF;

    RES := 0;

    IF V_ID_RADACT_CLOSED IS NOT NULL THEN

        SELECT COUNT(1) INTO RES
        FROM RADACCT
        WHERE ID_RADACT = V_ID_RADACT_CLOSED;

        SELECT COUNT(1) INTO RES_TIDS
        FROM RADACCT_TIDS
        WHERE ID_RADACT = V_ID_RADACT_CLOSED;

        SELECT COUNT(1) INTO RES_ONLINE
        FROM RADACCT_ONLINE
        WHERE ID_RADACT = V_ID_RADACT_CLOSED;

        IF RES+RES_TIDS+RES_ONLINE = 0 THEN
            RAISE EXP_ID_RADACT_CLD_NOT_PRT;
        END IF;

    END IF;

EXCEPTION
   WHEN EXP_ID_RADACT_NOT_PRT THEN
        RAISE_APPLICATION_ERROR(-20002, 'TRIGGER TRG_LAST_CONNECTION FAILED - NOT PRESENT ID_RADACT: '||:NEW.ID_RADACT);
   WHEN EXP_ID_RADACT_CLD_NOT_PRT THEN
        RAISE_APPLICATION_ERROR(-20002, 'TRIGGER TRG_LAST_CONNECTION FAILED - NOT PRESENT ID_RADACT_CLOSED: '||:NEW.ID_RADACT_CLOSED);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_LAST_CONNECTION FAILED - GENERIC ERROR - ');
END TRG_LAST_CONNECTION;

/
ALTER TRIGGER "TRG_LAST_CONNECTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_LAST_CONNECTION2
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_LAST_CONNECTION2" BEFORE
UPDATE OF ID_RADACT, ID_RADACT_CLOSED ON LAST_CONNECTION
for each row
DECLARE
   RES      NUMBER := 0;
   RES_TIDS NUMBER := 0;
   RES_ONLINE NUMBER := 0;
   V_ID_RADACT  LAST_CONNECTION.ID_RADACT%TYPE;
   V_ID_RADACT_CLOSED  LAST_CONNECTION.ID_RADACT_CLOSED%TYPE;
   EXP_ID_RADACT_NOT_PRT EXCEPTION;
   EXP_ID_RADACT_CLD_NOT_PRT EXCEPTION;
BEGIN

    V_ID_RADACT := :NEW.ID_RADACT;
    V_ID_RADACT_CLOSED := :NEW.ID_RADACT_CLOSED;

    RES := 0;

    IF V_ID_RADACT IS NOT NULL THEN

        SELECT COUNT(1) INTO RES
        FROM RADACCT
        WHERE ID_RADACT = V_ID_RADACT;

        SELECT COUNT(1) INTO RES_TIDS
        FROM RADACCT_TIDS
        WHERE ID_RADACT = V_ID_RADACT;        

        SELECT COUNT(1) INTO RES_ONLINE
        FROM RADACCT_ONLINE
        WHERE ID_RADACT = V_ID_RADACT;

        if RES+RES_TIDS+RES_ONLINE = 0 then
            RAISE EXP_ID_RADACT_NOT_PRT;
        END IF;        

    END IF;

    RES := 0;
    RES_TIDS := 0;
    RES_ONLINE := 0;

    IF V_ID_RADACT_CLOSED IS NOT NULL THEN

        SELECT COUNT(1) INTO RES
        FROM RADACCT
        WHERE ID_RADACT = V_ID_RADACT_CLOSED;

        SELECT COUNT(1) INTO RES_TIDS
        FROM RADACCT_TIDS
        WHERE ID_RADACT = V_ID_RADACT_CLOSED;        

        SELECT COUNT(1) INTO RES_ONLINE
        FROM RADACCT_ONLINE
        WHERE ID_RADACT = V_ID_RADACT_CLOSED;

        IF RES+RES_TIDS+RES_ONLINE = 0 THEN
            RAISE EXP_ID_RADACT_CLD_NOT_PRT;
        END IF;

    END IF;

EXCEPTION
   WHEN EXP_ID_RADACT_NOT_PRT THEN
        RAISE_APPLICATION_ERROR(-20002, 'TRIGGER TRG_LAST_CONNECTION2 FAILED - NOT PRESENT ID_RADACT: '||:NEW.ID_RADACT);
   WHEN EXP_ID_RADACT_CLD_NOT_PRT THEN
        RAISE_APPLICATION_ERROR(-20002, 'TRIGGER TRG_LAST_CONNECTION2 FAILED - NOT PRESENT ID_RADACT_CLOSED: '||:NEW.ID_RADACT_CLOSED);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_LAST_CONNECTION2 FAILED - GENERIC ERROR - ');
END TRG_LAST_CONNECTION2;

/
ALTER TRIGGER "TRG_LAST_CONNECTION2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MDC_CLIENT_NAME
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MDC_CLIENT_NAME" BEFORE
INSERT ON MASTER_DATA_CLIENTS
for each row
DECLARE
   RES NUMBER := 0;
   EXP_CLI_PRESENT EXCEPTION;
BEGIN
    SELECT COUNT(1) INTO RES
    FROM MASTER_DATA_CLIENTS MDC
    WHERE MDC.CLIENT_NAME = :NEW.CLIENT_NAME
    AND MDC.FLAG_VALID = 1 
    and MDC.CLOSING_FLAG is null
    AND MDC.ID_APN = :NEW.ID_APN;

    IF RES > 0 THEN
        RAISE EXP_CLI_PRESENT;
    END IF;
exception
   WHEN EXP_CLI_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20003, 'TRIGGER TRG_MDC_CLIENT_NAME FAILED - ALREADY PRESENT CLIENT_NAME: '||:NEW.CLIENT_NAME);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MDC_CLIENT_NAME FAILED - GENERIC ERROR - CLIENT_NAME: '||:NEW.CLIENT_NAME);
END TRG_MDC_CLIENT_NAME;

/
ALTER TRIGGER "TRG_MDC_CLIENT_NAME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MDC_CLOSURE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MDC_CLOSURE" 
AFTER INSERT OR UPDATE ON MASTER_DATA_CLIENTS
DECLARE
    RES                 NUMBER := 0;
    V_CLOSURE           MASTER_DATA_CLIENTS.CLOSURE%TYPE := '';
    V_ID_ACCOUNT        CLIENT_ACCOUNT_MAP.ID_ACCOUNT%TYPE := 0;
    EXP_DUPLICATE_CLOS  EXCEPTION;
    ERROR_CODE          NUMBER;
    ERROR_MSG           VARCHAR2 (300);
BEGIN

    SELECT CAM.ID_ACCOUNT, UPPER(MDC.CLOSURE), COUNT(MDC.CLOSURE) 
            INTO V_ID_ACCOUNT, V_CLOSURE, RES 
    FROM  MASTER_DATA_CLIENTS MDC, CLIENT_ACCOUNT_MAP CAM
    WHERE MDC.FLAG_VALID = 1
    AND MDC.CLOSING_FLAG IS NULL
    AND MDC.ID_CLIENT = CAM.ID_CLIENT
    GROUP BY CAM.ID_ACCOUNT, UPPER(MDC.CLOSURE)
    having COUNT(MDC.CLOSURE) > 1
    ;

    if RES > 0 then
        RAISE EXP_DUPLICATE_CLOS;
    END IF;

exception
   WHEN NO_DATA_FOUND THEN
        RES := 0;
   WHEN EXP_DUPLICATE_CLOS THEN
        RAISE_APPLICATION_ERROR(-20030, 'TRIGGER TRG_MDC_CLOSURE FAILED - DUPLICATE CLOSURE: '||V_ID_ACCOUNT||' '||V_CLOSURE||' ');
   WHEN OTHERS THEN
        error_code := SQLCODE;
        ERROR_MSG  := SQLERRM;
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MDC_CLOSURE FAILED - GENERIC ERROR - CLOSURE: '||V_ID_ACCOUNT||' '||V_CLOSURE||' ');
END TRG_MDC_CLOSURE;

/
ALTER TRIGGER "TRG_MDC_CLOSURE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MDC_ID_MAP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MDC_ID_MAP" BEFORE
INSERT OR UPDATE ON MASTER_DATA_CLIENTS
for each row
DECLARE  
   EXIST_ID_MAP          NUMBER := 0;  
   EXP_ID_MAP_NOTPRESENT EXCEPTION;
BEGIN

    IF :NEW.DEFAULT_ID_MAP IS NOT NULL THEN

       EXIST_ID_MAP := 0;

       SELECT COUNT(1) INTO EXIST_ID_MAP 
       FROM MAP_LIST 
       WHERE ID_MAP = :NEW.DEFAULT_ID_MAP;    

       IF EXIST_ID_MAP = 0 THEN
           RAISE EXP_ID_MAP_NOTPRESENT;
       END IF;

    END IF;

exception
   WHEN EXP_ID_MAP_NOTPRESENT THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MDC_ID_MAP FAILED - NOT PRESENT DEFAULT_ID_MAP: '||:NEW.DEFAULT_ID_MAP);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MDC_ID_MAP FAILED - GENERIC ERROR - DEFAULT_ID_MAPE: '||:NEW.DEFAULT_ID_MAP);
END TRG_MDC_ID_MAP;

/
ALTER TRIGGER "TRG_MDC_ID_MAP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MDC_PROFILE_NAME
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MDC_PROFILE_NAME" BEFORE
INSERT ON FW_PROFILES
for each row
DECLARE
   RES NUMBER := 0;
   EXP_PROF_PRESENT EXCEPTION;
BEGIN
    select COUNT(1) into RES
    FROM FW_PROFILES FWP
    WHERE FWP.NAME = :NEW.NAME
    AND FWP.ID_CLIENT = :NEW.ID_CLIENT
    AND FWP.SYSTEM_FLAG = 0
    AND FWP.STATUS NOT IN ('PENDING_REMOVE', 'REMOVED');

    IF RES > 0 THEN
        RAISE EXP_PROF_PRESENT;
    END IF;
exception
   WHEN EXP_PROF_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20052, 'TRIGGER TRG_MDC_PROFILE_NAME FAILED - ALREADY PRESENT PROFILE NAME: '||:NEW.NAME);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MDC_PROFILE_NAME FAILED - GENERIC ERROR - PROFILE NAME: '||:NEW.NAME);
END TRG_MDC_PROFILE_NAME;



/
ALTER TRIGGER "TRG_MDC_PROFILE_NAME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MDR_GROUP_NAME
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MDR_GROUP_NAME" BEFORE
INSERT ON MASTER_DATA_RELATIONSHIPS
for each row
DECLARE
   RES NUMBER := 0;
   EXP_GRP_PRESENT EXCEPTION;
BEGIN

    IF  :NEW.ID_APN is null then
        :NEW.ID_APN := 1;
    end if; 

    SELECT COUNT(1) INTO RES
    FROM MASTER_DATA_RELATIONSHIPS MDR
    WHERE MDR.GROUP_NAME_REL = :NEW.GROUP_NAME_REL
    AND MDR.ID_APN = :NEW.ID_APN
    AND MDR.CLOSING_FLAG IS NULL
    and MDR.ID_CLIENT = :new.ID_CLIENT
    AND MDR.SYSTEM_FLAG = 0;

    IF RES > 0 THEN
        RAISE EXP_GRP_PRESENT;
    end if;

exception
   WHEN EXP_GRP_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20019, 'TRIGGER TRG_MDR_GROUP_NAME FAILED - ALREADY PRESENT GROUP_NAME_REL: '||:NEW.GROUP_NAME_REL);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MDR_GROUP_NAME FAILED - GENERIC ERROR - GROUP_NAME_REL: '||:NEW.GROUP_NAME_REL);
end TRG_MDR_GROUP_NAME;

/
ALTER TRIGGER "TRG_MDR_GROUP_NAME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MDR_USERNAME_GROUP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MDR_USERNAME_GROUP" 
AFTER INSERT OR UPDATE ON MASTER_DATA_RELATIONSHIPS
DECLARE
    RES                 NUMBER := 0;
    V_USERNAME          VARCHAR2(300) := '';
    V_APN               NUMBER := 0;
    EXP_DUPLICATE_USER  EXCEPTION;
    ERROR_CODE          NUMBER;
    ERROR_MSG           VARCHAR2 (300);
BEGIN

    SELECT ID_APN, COUNT(USERNAME) INTO V_APN, RES 
    from  MASTER_DATA_RELATIONSHIPS MDR
    WHERE MDR.CLOSING_FLAG is null
    GROUP BY UPPER(USERNAME), ID_APN 
    having COUNT(USERNAME) > 1;

    if RES > 0 then
        select max(MDR.USERNAME) INTO V_USERNAME
        from MASTER_DATA_RELATIONSHIPS MDR
        WHERE UPPER(MDR.USERNAME) = (
            select UPPER(MDR2.USERNAME)
            from  MASTER_DATA_RELATIONSHIPS MDR2
            where MDR2.CLOSING_FLAG is null
            group by UPPER(MDR2.USERNAME), ID_APN 
            having COUNT(MDR2.USERNAME) > 1
            and MDR2.ID_APN = V_APN
        )
        AND MDR.CLOSING_FLAG is null;
        RAISE EXP_DUPLICATE_USER;
    END IF;

exception
   WHEN NO_DATA_FOUND THEN
        RES := 0;
   when EXP_DUPLICATE_USER then
        RAISE_APPLICATION_ERROR(-20030, 'TRIGGER TRG_MDR_USERNAME_GROUP FAILED - DUPLICATE USERNAME: '||V_APN||' '||V_USERNAME||' ');
   WHEN OTHERS THEN
        error_code := SQLCODE;
        ERROR_MSG  := SQLERRM;
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MDR_USERNAME_GROUP FAILED - GENERIC ERROR - USERNAME: '||V_APN||' '||V_USERNAME||' ');
END TRG_MDR_USERNAME_GROUP;

/
ALTER TRIGGER "TRG_MDR_USERNAME_GROUP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MSISDN_THRESHOLD_ID_THD
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MSISDN_THRESHOLD_ID_THD" BEFORE
INSERT OR UPDATE ON MSISDN_THRESHOLD
for each row
DECLARE  
   EXIST_ID_THD          NUMBER := 0;  
   EXP_ID_THD_NOTPRESENT EXCEPTION;
BEGIN

       EXIST_ID_THD := 0;

       SELECT COUNT(1) INTO EXIST_ID_THD 
       FROM THRESHOLD_DETAILS 
       WHERE ID_THD = :NEW.ID_THD;    

       IF EXIST_ID_THD = 0 THEN
           RAISE EXP_ID_THD_NOTPRESENT;
       END IF;

exception
   WHEN EXP_ID_THD_NOTPRESENT THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MSISDN_THRESHOLD_ID_THD FAILED - NOT PRESENT ID_THD: '||:NEW.ID_THD);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MSISDN_THRESHOLD_ID_THD FAILED - GENERIC ERROR - ID_THD: '||:NEW.ID_THD);
END TRG_MSISDN_THRESHOLD_ID_THD;

/
ALTER TRIGGER "TRG_MSISDN_THRESHOLD_ID_THD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MSISDN_THRESHOLD_MSISDNWL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MSISDN_THRESHOLD_MSISDNWL" BEFORE
INSERT OR UPDATE ON MSISDN_THRESHOLD
for each row
DECLARE  
   EXIST_ID_MSISDNWL     NUMBER := 0;  
   EXP_MSISDN_NOTPRESENT EXCEPTION;
BEGIN

       EXIST_ID_MSISDNWL := 0;

       SELECT COUNT(1) INTO EXIST_ID_MSISDNWL 
       FROM MSISDN_WHITELIST 
       WHERE MSISDN = :NEW.MSISDN;    

       IF EXIST_ID_MSISDNWL = 0 THEN
           RAISE EXP_MSISDN_NOTPRESENT;
       END IF;

exception
   WHEN EXP_MSISDN_NOTPRESENT THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MSISDN_THRESHOLD_MSISDNWL FAILED - MSISDN NOT PRESENT ON TABLE MSISDN_WHITELIST : '||:NEW.MSISDN);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MSISDN_THRESHOLD_MSISDNWL FAILED - GENERIC ERROR');
END TRG_MSISDN_THRESHOLD_ID_THD;

/
ALTER TRIGGER "TRG_MSISDN_THRESHOLD_MSISDNWL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MTM_MW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_MTM_MW" BEFORE
INSERT OR UPDATE ON MSISDN_THR_MAP
for each row
DECLARE
   EXIST_ID_MSISDNWL     NUMBER := 0;
   EXP_MSISDN_NOTPRESENT EXCEPTION;
BEGIN

       EXIST_ID_MSISDNWL := 0;

       SELECT COUNT(1) INTO EXIST_ID_MSISDNWL
       FROM MSISDN_WHITELIST
       WHERE MSISDN = :NEW.MSISDN;

       IF EXIST_ID_MSISDNWL = 0 THEN
           RAISE EXP_MSISDN_NOTPRESENT;
       END IF;

exception
   WHEN EXP_MSISDN_NOTPRESENT THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MTM_MW FAILED - MSISDN NOT PRESENT ON TABLE MSISDN_WHITELIST : '||:NEW.MSISDN);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_MTM_MW FAILED - GENERIC ERROR');
END TRG_MTM_MW;

/
ALTER TRIGGER "TRG_MTM_MW" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_OBJ_PROP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_OBJ_PROP" BEFORE
INSERT ON OBJ_PROPERTIES
for each row
DECLARE
   RES NUMBER := 0;
   EXP_OP_PRESENT EXCEPTION;
BEGIN
    SELECT COUNT(1) INTO RES
    FROM OBJ_PROPERTIES OP
    WHERE OP.TYPE = ''
    AND OP.KEY = :NEW.KEY
    AND OP.VALUE = :NEW.VALUE
    AND OP.FLAG_REMOVING IS NULL;

    IF RES > 0 THEN
        RAISE EXP_OP_PRESENT;
    END IF;
exception
   WHEN EXP_OP_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20003, 'TRIGGER TRG_OBJ_PROP FAILED - ALREADY PRESENT OP RECORD: '||:NEW.KEY||'-'||:NEW.VALUE);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_OBJ_PROP FAILED - GENERIC ERROR - OP RECORD: '||:NEW.KEY||'-'||:NEW.VALUE);
END TRG_OBJ_PROP;



/
ALTER TRIGGER "TRG_OBJ_PROP" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_RP_RULE_POLICY
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_RP_RULE_POLICY" BEFORE
INSERT OR UPDATE ON RULES_PROFILES
for each row
DECLARE
   RES NUMBER := 0;
   EXP_RULE_NOT_PRESENT EXCEPTION;
BEGIN
    IF :NEW.ID_RULE_POLICY IS NULL THEN 
        RES := 1;
    ELSE
        SELECT COUNT(1) INTO RES
        FROM FIREWALL_RULES_DEV
        WHERE ID_RULE = :NEW.ID_RULE_POLICY;
    END IF;   

    IF RES = 0 THEN
        RAISE EXP_RULE_NOT_PRESENT;
    END IF;
exception
   WHEN EXP_RULE_NOT_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20003, 'TRIGGER TRG_RP_RULE_POLICY FAILED - NOT PRESENT ID_RULE: '||:NEW.ID_RULE_POLICY);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_RP_RULE_POLICY FAILED - GENERIC ERROR - ID_RULE: '||:NEW.ID_RULE_POLICY);
end TRG_RP_RULE_POLICY;


/
ALTER TRIGGER "TRG_RP_RULE_POLICY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_SP_ADDRESS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_SP_ADDRESS" BEFORE
INSERT ON SUBLEVEL_POOL
for each row
DECLARE
   RES NUMBER := 0;
   EXP_IP_NOT_PRESENT EXCEPTION;
BEGIN
    SELECT COUNT(1) INTO RES
    FROM MAIN_POOL_IP MPI
    WHERE MPI.IPADDRESS = :NEW.FRAMEDIPADDRESS;

    IF RES = 0 THEN
        RAISE EXP_IP_NOT_PRESENT;
    END IF;

exception
   WHEN EXP_IP_NOT_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20020, 'TRIGGER TRG_SP_ADDRESS FAILED - NOT PRESENT IP: '||:NEW.FRAMEDIPADDRESS);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_SP_ADDRESS FAILED - GENERIC ERROR - IP: '||:NEW.FRAMEDIPADDRESS);
end TRG_SP_ADDRESS;




/
ALTER TRIGGER "TRG_SP_ADDRESS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_TG_NAME
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_TG_NAME" BEFORE
INSERT ON TUNNEL_GROUP
for each row
DECLARE
   RES NUMBER := 0;
   EXP_TG_PRESENT EXCEPTION;
BEGIN
    SELECT COUNT(1) INTO RES
    FROM TUNNEL_GROUP TG
    WHERE TG.NAME = :NEW.NAME
    AND TG.FLAG_REMOVING is null;

    IF RES > 0 THEN
        RAISE EXP_TG_PRESENT;
    END IF;
exception
   WHEN EXP_TG_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20003, 'TRIGGER TRG_TG_NAME FAILED - ALREADY PRESENT TG NAME: '||:NEW.NAME);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_TG_NAME FAILED - GENERIC ERROR - TG NAME: '||:NEW.NAME);
END TRG_TG_NAME;



/
ALTER TRIGGER "TRG_TG_NAME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_THRESHOLD_CHK_NAME
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_THRESHOLD_CHK_NAME" AFTER
INSERT OR UPDATE ON THRESHOLD

DECLARE
   ERROR_CODE             NUMBER;
   ERROR_MSG              VARCHAR2 (300);
   V_NAME_ALREADY_PRESENT NUMBER := 0;
   EXP_NAME_PRESENT EXCEPTION;
BEGIN

    -- Check for validity of NAME parameter for a client the name must be unique
    SELECT COUNT(1) into V_NAME_ALREADY_PRESENT
    FROM THRESHOLD 
    GROUP BY ID_CLIENT, NAME
    HAVING COUNT(1) > 1;

    IF V_NAME_ALREADY_PRESENT > 0 THEN
        RAISE EXP_NAME_PRESENT;
    END IF;

exception
   WHEN NO_DATA_FOUND THEN
        V_NAME_ALREADY_PRESENT := 0;
   WHEN EXP_NAME_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20090, 'TRIGGER THRESHOLD_CHK_NAME - ALREADY PRESENT THRESHOLD NAME: ');
   WHEN OTHERS THEN
       error_code := SQLCODE;
       ERROR_MSG  := SQLERRM;
       RAISE_APPLICATION_ERROR(-20001, 'TRIGGER THRESHOLD_CHK_NAME FAILED - GENERIC ERROR - THRESHOLD NAME: ');

END THRESHOLD_CHK_NAME;

/
ALTER TRIGGER "TRG_THRESHOLD_CHK_NAME" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_TRSHLD_DTLS_INS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_TRSHLD_DTLS_INS" BEFORE
 INSERT ON THRESHOLD_DETAILS
FOR EACH ROW
DECLARE  
    V_ARR_KEY              RULE_ARR_VALUE := RULE_ARR_VALUE();
    V_ARR_VALUE            RULE_ARR_VALUE := RULE_ARR_VALUE();    
    EXP_ERRR               EXCEPTION;   
BEGIN

                        V_ARR_KEY.DELETE;
                        V_ARR_VALUE.DELETE;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'Add ID_AREA';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :NEW.ID_AREA;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'Add ID_PERIOD';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :NEW.ID_PERIOD;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'Add TH_VALUE';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :NEW.TH_VALUE;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'Add TYPE';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :NEW.TYPE;


                        PKEVENT.ADDEVENT(NULL, NULL, NULL, NULL, NULL,
                                        'CONFIGURE_THRESHOLD', 'INFO',
                                        'Configure Threshold Detail ID_THD : '||:NEW.ID_THD,
                                        'CONFIGURE_THRESHOLD',V_ARR_KEY,V_ARR_VALUE);


EXCEPTION
--   WHEN EXP_ERRR THEN
--        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_TRSHLD_DTLS_UPD FAILED - );
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_TRSHLD_DTLS_INS FAILED - GENERIC ERROR -' ||:NEW.ID_THD);
END TRG_TRSHLD_DTLS_INS;

/
ALTER TRIGGER "TRG_TRSHLD_DTLS_INS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_TRSHLD_DTLS_UPD
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_TRSHLD_DTLS_UPD" BEFORE
 UPDATE ON THRESHOLD_DETAILS
FOR EACH ROW
DECLARE  
    V_ARR_KEY              RULE_ARR_VALUE := RULE_ARR_VALUE();
    V_ARR_VALUE            RULE_ARR_VALUE := RULE_ARR_VALUE();    
    EXP_ERRR               EXCEPTION;   
BEGIN

                        V_ARR_KEY.DELETE;
                        V_ARR_VALUE.DELETE;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'OLD ID_AREA';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :OLD.ID_AREA;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'NEW ID_AREA';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :NEW.ID_AREA;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'OLD ID_PERIOD';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :OLD.ID_PERIOD;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'NEW ID_PERIOD';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :NEW.ID_PERIOD;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'OLD TH_VALUE';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :OLD.TH_VALUE;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'NEW TH_VALUE';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :NEW.TH_VALUE;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'OLD TYPE';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :OLD.TYPE;

                        V_ARR_KEY.EXTEND (1);
                        V_ARR_VALUE.EXTEND (1);
                        V_ARR_KEY (V_ARR_KEY.COUNT) := 'NEW TYPE';
                        V_ARR_VALUE (V_ARR_VALUE.COUNT) := :NEW.TYPE;


                        PKEVENT.ADDEVENT(NULL, NULL, NULL, NULL, NULL,
                                        'CONFIGURE_THRESHOLD', 'INFO',
                                        'Configure Threshold Detail ID_THD : '||:OLD.ID_THD,
                                        'CONFIGURE_THRESHOLD',V_ARR_KEY,V_ARR_VALUE);


EXCEPTION
--   WHEN EXP_ERRR THEN
--        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_TRSHLD_DTLS_UPD FAILED - );
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_TRSHLD_DTLS_UPD FAILED - GENERIC ERROR -' ||:OLD.ID_THD);
END TRG_TRSHLD_DTLS_UPD;

/
ALTER TRIGGER "TRG_TRSHLD_DTLS_UPD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_UNIQUE_USER_UNTRUSTED
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_UNIQUE_USER_UNTRUSTED" 
AFTER INSERT OR UPDATE OF USERNAME ON MASTER_DATA_RELATIONSHIPS
DECLARE
   RES NUMBER := 0;
   EXP_DUPLICATE_USER EXCEPTION;
BEGIN

    SELECT COUNT(UPPER(MDR.USERNAME)) INTO RES
    FROM MASTER_DATA_RELATIONSHIPS MDR,
         MASTER_DATA_SERVICES MDS
    WHERE MDR.ID_SERVICE = MDS.ID_SERVICE
    AND MDS.TRUSTED = 0
    AND MDR.CLOSING_FLAG IS NULL
    GROUP BY UPPER(MDR.USERNAME), ID_APN
    HAVING COUNT(UPPER(MDR.USERNAME)) > 1;

    IF RES > 0 THEN
        RAISE EXP_DUPLICATE_USER;
    END IF;


EXCEPTION
   WHEN NO_DATA_FOUND THEN
        RES := 0;
   WHEN EXP_DUPLICATE_USER THEN
        RAISE_APPLICATION_ERROR(-20030, 'TRIGGER TRG_UNIQUE_USER_UNTRUSTED FAILED - DUPLICATE USER');
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_UNIQUE_USER_UNTRUSTED FAILED - GENERIC ERROR - USER');
END TRG_UNIQUE_USER_UNTRUSTED;

/
ALTER TRIGGER "TRG_UNIQUE_USER_UNTRUSTED" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_VPN_TUN_GRP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_VPN_TUN_GRP" BEFORE
INSERT OR UPDATE ON VPN_TUN_GRP
for each row
DECLARE
   RES      NUMBER := 0;
   V_TUN    VARCHAR2(100) := 0;
   V_GRP    VARCHAR2(100) := 0;
   V_CPP    VARCHAR2(100) := 0;
   V_CM     VARCHAR2(100) := 0;
   EXP_TUN_NOT_PRESENT EXCEPTION;
   EXP_GRP_NOT_PRESENT EXCEPTION;
   EXP_CM_NOT_PRESENT  EXCEPTION;
   EXP_CPP_NOT_PRESENT EXCEPTION;
BEGIN

    V_TUN := :NEW.NAME_TG;
    V_GRP := :NEW.NAME_GP;
    V_CM  := :NEW.NAME_CPP;
    V_CPP := :NEW.SEQ_CPP;

    RES := 0;

    IF V_TUN IS NOT NULL THEN

        SELECT COUNT(1) INTO RES
        FROM TUNNEL_GROUP TG
        WHERE TG.NAME = V_TUN;

        IF RES = 0 THEN
            RAISE EXP_TUN_NOT_PRESENT;
        END IF;

    END IF;

    RES := 0;

    IF V_GRP IS NOT NULL THEN

        SELECT COUNT(1) INTO RES
        FROM GROUP_POLICY GP
        WHERE GP.NAME = V_GRP;

        IF RES = 0 THEN
            RAISE EXP_GRP_NOT_PRESENT;
        END IF;

    END IF;

    RES := 0;

    IF V_CM IS NOT NULL THEN

        SELECT COUNT(1) INTO RES
        FROM CRYPTO_MAP CM
        WHERE CM.NAME = V_CM;

        IF RES = 0 THEN
            RAISE EXP_CM_NOT_PRESENT;
        END IF;

    END IF;

    IF V_CPP IS NOT NULL THEN

        SELECT COUNT(1) INTO RES
        FROM CRYPTO_POLICY_P2 CPP
        WHERE CPP.SEQ_NUM = V_CPP;

        IF RES = 0 THEN
            RAISE EXP_CPP_NOT_PRESENT;
        END IF;

    END IF;

EXCEPTION
   WHEN EXP_TUN_NOT_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20002, 'TRIGGER TRG_VPN_TUN_GRP FAILED - NOT PRESENT TUNNEL GROUP: '||:NEW.NAME_TG);
   WHEN EXP_GRP_NOT_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20002, 'TRIGGER TRG_VPN_TUN_GRP FAILED - NOT PRESENT GROUP POLICY: '||:NEW.NAME_GP);
   WHEN EXP_CM_NOT_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20002, 'TRIGGER TRG_VPN_TUN_GRP FAILED - NOT PRESENT CRYPTO MAP: '||:NEW.NAME_CPP);
   WHEN EXP_CPP_NOT_PRESENT THEN
        RAISE_APPLICATION_ERROR(-20002, 'TRIGGER TRG_VPN_TUN_GRP FAILED - NOT PRESENT CRYPTO MAP POLICY: '||:NEW.SEQ_CPP);
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'TRIGGER TRG_VPN_TUN_GRP FAILED - GENERIC ERROR - ');
END TRG_VPN_TUN_GRP;

/
ALTER TRIGGER "TRG_VPN_TUN_GRP" ENABLE;
--------------------------------------------------------
--  DDL for Function FCBITMASK
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCBITMASK" (x IN NUMBER) RETURN VARCHAR AS
BEGIN
  RETURN TRIM(LPAD(' ',x+1,'1'))||TRIM(LPAD(' ',32-x+1,'0'));
END;



/
--------------------------------------------------------
--  DDL for Function FCBITNOT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCBITNOT" (x IN NUMBER) RETURN NUMBER AS
BEGIN
  RETURN (-1 - x);
END;



/
--------------------------------------------------------
--  DDL for Function FCBITOR
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCBITOR" (x IN NUMBER, y IN NUMBER) RETURN NUMBER AS
BEGIN
  RETURN (x + y - BITAND(x, y));
END;



/
--------------------------------------------------------
--  DDL for Function FCBITXOR
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCBITXOR" (x IN NUMBER, y IN NUMBER) RETURN NUMBER AS
BEGIN
  RETURN (FCBITOR(x, y) - BITAND(x, y));
END;



/
--------------------------------------------------------
--  DDL for Function FCCHECKARRAY4DUPLICATEITEMS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCHECKARRAY4DUPLICATEITEMS" (IN_ARR_OF_VALUES   IN VPN_ARR_PARAM)

    RETURN NUMBER AS
    
    TYPE V_ASSOCIATIVE_ARRAY  IS TABLE OF VARCHAR2(50)  -- Associative array type    
    INDEX BY VARCHAR2(64);    

    V_ITEM_OF_A_ARRAY      V_ASSOCIATIVE_ARRAY;
    V_ITEM                 VARCHAR2 (300);    
    ERROR_CODE             NUMBER;
    ERROR_MSG              VARCHAR2 (300);
    ERROR_VALID            NUMBER;
    RES                    VARCHAR(50);
    RET                    NUMBER;
    V_RES                  NUMBER;
    V_RESULT               NUMBER := 0;
    V_ERROR_CODE           NUMBER := 0;
    V_ERROR_MSG            VARCHAR2 (300);    

    BEGIN

        BEGIN

            V_RES := 0 ;

            FOR cont IN IN_ARR_OF_VALUES.FIRST .. IN_ARR_OF_VALUES.LAST
              LOOP

                  V_ITEM := IN_ARR_OF_VALUES(CONT);


                  if not V_ITEM_OF_A_ARRAY.exists(V_ITEM) then
                          V_ITEM_OF_A_ARRAY(V_ITEM) := 1;
                  ELSE 
                        V_RES := 1 ;
                  END IF;


              END LOOP;


    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('fcCheckArray4DuplicateItems ', 'FUNCTION.fcCheckArray4DuplicateItems',
                            'ERROR',
                            'Error code = '||error_code||
                            ', error_msg = '||ERROR_MSG);
            V_RES := '';
    END;

    RETURN V_RES;

    END fcCheckArray4DuplicateItems;

/
--------------------------------------------------------
--  DDL for Function FCCHECKCHAPPASSWORD
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCHECKCHAPPASSWORD" (IN_ID_CHAP_CHALLENGE in varchar2,
                                               IN_ID_CHAP_PASSWORD  IN VARCHAR2,                      
                                               IN_PASSWD in varchar2) 
return number is

ERROR_CODE              NUMBER;
ERROR_MSG               VARCHAR2 (300);
input_string VARCHAR2 (600);
output_string VARCHAR2 (2000);         

sRAWString   RAW (32767);   
V_CHAP_CHALLENGE  VARCHAR2(50);    
V_CHAP_PASSWORD_REAL varchar2(50);    
V_ID   varchar2(2);    
V_PASSWD  VARCHAR2(50);
V_ANS       NUMBER := 0;

BEGIN

    PKLOG.INSERTLOG('fcCheckChapPassword('||IN_ID_CHAP_CHALLENGE|| ' - ' ||IN_ID_CHAP_PASSWORD|| ' - ' ||IN_PASSWD|| ')',
                    'fcCheckChapPassword', 'DEBUG', 'START');

    V_CHAP_CHALLENGE := SUBSTR(IN_ID_CHAP_CHALLENGE,3);         

    V_ID := substr(IN_ID_CHAP_PASSWORD,3,2);        

    V_CHAP_PASSWORD_REAL := substr(IN_ID_CHAP_PASSWORD,5);        

    SELECT RAWTOHEX(IN_PASSWD) INTO V_PASSWD FROM DUAL;

    sRAWString  := hextoraw(V_ID||V_PASSWD||V_CHAP_CHALLENGE);           

    output_string := SYS.DBMS_CRYPTO.HASH (sRAWString, SYS.DBMS_CRYPTO.HASH_MD5);

    IF LOWER(OUTPUT_STRING) <> LOWER(V_CHAP_PASSWORD_REAL) THEN
        V_ANS := 1;
    END IF;

    PKLOG.INSERTLOG('fcCheckChapPassword('||IN_ID_CHAP_CHALLENGE|| ' - ' ||IN_ID_CHAP_PASSWORD|| ' - ' ||IN_PASSWD|| ')',
                  'fcCheckChapPassword', 'DEBUG', 'END:'||V_ANS);


    RETURN V_ANS;

EXCEPTION
    WHEN OTHERS THEN
        ERROR_CODE := SQLCODE;
        ERROR_MSG  := SQLERRM;
        PKLOG.INSERTLOG('fcCheckChapPassword('||IN_ID_CHAP_CHALLENGE|| ' - ' ||IN_ID_CHAP_PASSWORD|| ' - ' ||IN_PASSWD|| ')', 
                        'fcCheckChapPassword', 'ERROR',
                        ' - error_code = ' || ERROR_CODE||
                        ' - error_msg = ' || ERROR_MSG);

        V_ANS := 1;
        RETURN V_ANS;


END fcCheckChapPassword;

/
--------------------------------------------------------
--  DDL for Function FCCHECKIPFORMAT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCHECKIPFORMAT" (IN_IP varchar2)
    RETURN NUMBER IS
    V_ANS                   NUMBER := 0;
    ERROR_CODE              NUMBER;
    ERROR_MSG               VARCHAR2(300);

    BEGIN

--    PKLOG.INSERTLOG('FcCheckIpFormat('||IN_IP||')'
--                                        , 'FUNCTION.FcCheckIpFormat',
--                                        'DEBUG', 'START');

    BEGIN

        if IN_IP is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_IP is NULL!');
        end if;

        if REGEXP_REPLACE(IN_IP, '((([2][0|1|2|3|4][1|2|3|4|5|6|7|8|9|0])|([2][5][1|2|3|4|5|0])|([1][1|2|3|4|5|6|7|8|9|0]?[1|2|3|4|5|6|7|8|9|0])|([1|2|3|4|5|6|7|8|9]?[1|2|3|4|5|6|7|8|9|0]))[.]){3}'||
                                            '(([2][0|1|2|3|4][1|2|3|4|5|6|7|8|9|0])|([2][5][1|2|3|4|5|0])|([1][1|2|3|4|5|6|7|8|9|0]?[1|2|3|4|5|6|7|8|9|0])|([1|2|3|4|5|6|7|8|9]?[1|2|3|4|5|6|7|8|9|0]))', '', 1, 1) is not null then

            V_ANS := -1;

        end if;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('Error on check ip format: '||
                            IN_IP, 'FUNCTION.FcCheckIpFormat',
                            'ERROR',
                            'Error code = '||error_code||
                            ', error_msg = '||ERROR_MSG);
            v_ans := -1;
    END;


--    PKLOG.INSERTLOG('FcCheckIpFormat('||IN_IP||') = '||v_ans
--                                        , 'FUNCTION.FcCheckIpFormat',
--                    'DEBUG', 'END');

    return v_ans;

  END FcCheckIpFormat;

/
--------------------------------------------------------
--  DDL for Function FCCHECKIPINSUBNET
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCHECKIPINSUBNET" (IN_IP varchar2, IN_PREFIX varchar2, IN_MASK NUMBER)
    RETURN NUMBER IS
    V_ANS                   NUMBER := 0;
    ERROR_CODE              NUMBER;
    ERROR_MSG               VARCHAR2(300);
    TMP_IP_SUBNET           VARCHAR2(300);
    TMP_PREFIX_SUBNET       VARCHAR2(300);

    BEGIN

--    PKLOG.INSERTLOG('FcCheckIpInSubNet('||IN_IP||
--                                        ', '||IN_PREFIX||
--                                        ', '||IN_MASK||')'
--                                        , 'FUNCTION.FcCheckIpInSubNet',
--                                        'DEBUG', 'START');

    BEGIN

        if IN_IP is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_IP is NULL!');
        end if;
        if IN_PREFIX is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_PREFIX is NULL!');
        end if;
        if IN_MASK is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_MASK is NULL!');
        end if;

        TMP_IP_SUBNET   := FCEXTRACTSUBNET(IN_IP, IN_MASK);
        TMP_PREFIX_SUBNET := FCEXTRACTSUBNET(FcCompletePrefix(IN_PREFIX), IN_MASK);
        IF TMP_IP_SUBNET = TMP_PREFIX_SUBNET THEN
--            IP_LOW_DOTTED       := FCCONVERTBINTODOTTED(RPAD(FCCONVERTDOTTEDTOBIN(IN_PREFIX),31,'0')||'1');
--            IP_HIGH_DOTTED      := FCCONVERTBINTODOTTED(RPAD(FCCONVERTDOTTEDTOBIN(IN_PREFIX),31,'1')||'0');
            V_ANS               := 0;
        ELSE
            V_ANS               := 1;

        END IF;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('Error on convert ip prefix: '||
                            IN_IP, 'FUNCTION.FcCheckIpInSubNet',
                            'ERROR',
                            'Error code = '||error_code||
                            ', error_msg = '||ERROR_MSG);
            v_ans := -1;
    END;


--    pkLog.insertLog('('||IN_IP||') = '||v_ans, 'FUNCTION.FcCheckIpInSubNet',
--                    'DEBUG', 'END');

    return v_ans;

  END FcCheckIpInSubNet;



/
--------------------------------------------------------
--  DDL for Function FCCHECKOCTETSINHWM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCHECKOCTETSINHWM" (IN_FIRST_IP varchar2,
                               IN_FREE_SPACE number,
                               IN_SUBNET_MIN number,
                               IN_SUBNET_MAX number,
                               IN_STRICT_INCLUSION number DEFAULT 0) return number as

V_IP_LOW            number := 0;
V_IP_HIGH           number := 0;
RES                 number := 0;



BEGIN
    if IN_FIRST_IP is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_FIRST_IP is NULL!');
    ELSIF IN_FREE_SPACE is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_FREE_SPACE is NULL!');
    ELSIF IN_SUBNET_MIN is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_SUBNET_MIN is NULL!');
    ELSIF IN_SUBNET_MAX is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_SUBNET_MAX is NULL!');
    END IF;

    select FCCONVERTDOTTEDTOINT(IN_FIRST_IP),
           FCCONVERTDOTTEDTOINT(IN_FIRST_IP) + IN_FREE_SPACE
           INTO V_IP_LOW, V_IP_HIGH
    FROM DUAL;

    IF  (
            IN_STRICT_INCLUSION = 0 
            AND 
            (
                V_IP_LOW >= IN_SUBNET_MIN
                OR V_IP_HIGH >= IN_SUBNET_MIN
            )
            AND
            (
                V_IP_LOW <= IN_SUBNET_MAX
                OR V_IP_HIGH <= IN_SUBNET_MAX
            )
        )
        OR 
        (
            IN_STRICT_INCLUSION = 1
            AND 
            (
                V_IP_LOW <= IN_SUBNET_MIN
                AND V_IP_LOW <= IN_SUBNET_MAX
                AND V_IP_HIGH >= IN_SUBNET_MIN
                AND V_IP_HIGH >= IN_SUBNET_MAX
            ) 
        ) 
    THEN
        RES := 1;
    ELSE
        RES := 0;
    END IF;

    return RES;

end FCCHECKOCTETSINHWM;

/
--------------------------------------------------------
--  DDL for Function FCCHECKOCTETSINSUBNET
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCHECKOCTETSINSUBNET" (IN_PREFIX VARCHAR2, 
                                  IN_MASK NUMBER, 
                                  IN_SUBNET_OCT1 NUMBER,
                                  IN_SUBNET_OCT2 NUMBER,
                                  IN_SUBNET_OCT3 NUMBER,
                                  IN_SUBNET_OCT4 NUMBER) RETURN NUMBER AS

V_IP_LOW    VARCHAR2(15) := '';
V_IP_HIGH   VARCHAR2(15) := '';
RES         NUMBER := 0;

BEGIN
    if IN_PREFIX is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_PREFIX is NULL!');
    ELSIF IN_MASK is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_MASK is NULL!');
    ELSIF IN_SUBNET_OCT1 is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_SUBNET_OCT1 is NULL!');
    ELSIF IN_SUBNET_OCT2 is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_SUBNET_OCT2 is NULL!');
    ELSIF IN_SUBNET_OCT3 is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_SUBNET_OCT3 is NULL!');
    ELSIF IN_SUBNET_OCT4 is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_SUBNET_OCT4 is NULL!');
    END IF;


    select FCCONVERTINTTODOTTED(FCGETSUBNETLOWIP(IN_PREFIX, IN_MASK, 1)),
           FCCONVERTINTTODOTTED(FCGETSUBNETHIGHIP(IN_PREFIX, IN_MASK, 1))
           INTO V_IP_LOW, V_IP_HIGH
    FROM DUAL;

    IF (
            IN_SUBNET_OCT1 = -1
            OR      
            (
                IN_SUBNET_OCT1 >= FCGETOCTETFROMDOTTED(V_IP_LOW, 1)
                AND 
                IN_SUBNET_OCT1 <= FCGETOCTETFROMDOTTED(V_IP_HIGH, 1) 
            )
        )
    AND (
            IN_SUBNET_OCT2 = -1
            OR      
            (
                IN_SUBNET_OCT2 >= FCGETOCTETFROMDOTTED(V_IP_LOW, 2)
                AND 
                IN_SUBNET_OCT2 <= FCGETOCTETFROMDOTTED(V_IP_HIGH, 2) 
            )
        )
    AND (
            IN_SUBNET_OCT3 = -1
            OR      
            (
                IN_SUBNET_OCT3 >= FCGETOCTETFROMDOTTED(V_IP_LOW, 3)
                AND 
                IN_SUBNET_OCT3 <= FCGETOCTETFROMDOTTED(V_IP_HIGH, 3) 
            )
        )
    AND (
            IN_SUBNET_OCT4 = -1
            OR      
            (
                IN_SUBNET_OCT4 >= FCGETOCTETFROMDOTTED(V_IP_LOW, 4)
                AND 
                IN_SUBNET_OCT4 <= FCGETOCTETFROMDOTTED(V_IP_HIGH, 4) 
            )
        ) 
    THEN
        RES := 1;
    ELSE
        RES := 0;
    END IF;

    RETURN RES;

END FCCHECKOCTETSINSUBNET;



/
--------------------------------------------------------
--  DDL for Function FCCOMPLETEPREFIX
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCOMPLETEPREFIX" (IN_PREFIX varchar2)
    RETURN VARCHAR2 IS
    V_ANS                   VARCHAR2(300) := '';
    ERROR_CODE              NUMBER;
    ERROR_MSG               VARCHAR2(300);
    TMP_PREFIX              VARCHAR2(300);
    POS                     NUMBER := 100;
    CNT_DOT                 NUMBER := 0;

    BEGIN

--    PKLOG.INSERTLOG('FcCompletePrefix('||IN_PREFIX||')'
--                                        , 'FUNCTION.FcCompletePrefix',
--                                        'DEBUG', 'START');

    BEGIN

        if IN_PREFIX is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_PREFIX is NULL!');
        end if;


        TMP_PREFIX := IN_PREFIX;
        WHILE POS <> 0
        LOOP
            POS := INSTR(TMP_PREFIX, '.');
            IF POS > 0 THEN
                CNT_DOT := CNT_DOT + 1;
            END IF;
            TMP_PREFIX := SUBSTR(TMP_PREFIX, POS+1);
        end LOOP;

        V_ANS := IN_PREFIX;
        FOR CNT in CNT_DOT..2
        LOOP
            V_ANS := V_ANS || '.0';
        END LOOP;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on convert ip prefix: '||
--                            IN_PREFIX, 'FUNCTION.FcCompletePrefix',
--                            'ERROR',
--                            'Error code = '||error_code||
--                            ', error_msg = '||ERROR_MSG);
            v_ans := '';
    END;


--    pkLog.insertLog('('||IN_PREFIX||') = '||v_ans, 'FUNCTION.FcCompletePrefix',
--                    'DEBUG', 'END');

    return v_ans;

  END FcCompletePrefix;



/
--------------------------------------------------------
--  DDL for Function FCCONVERTBINTODOTTED
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCONVERTBINTODOTTED" (IN_IP_STRING varchar2)
    return varchar2 is
    V_ANS           varchar2(32) := '';
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    POS             number;
    TMP_PREFIX      varchar2(300);
    TMP_TOKEN       varchar2(300);
    TMP_TOKEN_NUM   number;
    CNT             number;
    RES             varchar2(300);
    TMP_MOD         number;
    BEGIN

--    PKLOG.INSERTLOG('FcConvertBinToDotted('||IN_IP_STRING||')', 'FUNCTION.FcConvertBinToDotted',
--                    'DEBUG', 'START');

    BEGIN

        if IN_IP_STRING is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_IP_STRING is NULL!');
        end if;

        if LENGTH(IN_IP_STRING) <> 32 then
--            pkLog.insertLog('Error on convert ip prefix: '||
--                            IN_IP_STRING, 'FUNCTION.FcConvertBinToDotted',
--                            'ERROR',
--                            'IP IS NOT OF 32 BIT');
            V_ANS := '';
        ELSE
            TMP_PREFIX := IN_IP_STRING;
            FOR CNT in 1..4
            LOOP
                TMP_TOKEN := SUBSTR(TMP_PREFIX, 0, 8);
                TMP_TOKEN_NUM := FCCONVERTIPBINTOINT(TMP_TOKEN);
                IF CNT < 4 THEN
                    V_ANS := V_ANS || TMP_TOKEN_NUM || '.';
                ELSE
                    V_ANS := V_ANS || TMP_TOKEN_NUM;
                END IF;
                TMP_PREFIX := SUBSTR(TMP_PREFIX, 9);
            END LOOP;
        end if;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on convert ip prefix: '||
--                            IN_IP_STRING, 'FUNCTION.FcConvertBinToDotted',
--                            'ERROR',
--                            'Error code = '||error_code||
--                            ', error_msg = '||error_msg);
            v_ans := '';
    END;


--    pkLog.insertLog('('||IN_IP_STRING||') = '||v_ans, 'FUNCTION.FcConvertBinToDotted',
--                    'DEBUG', 'END');

    return v_ans;

  END FcConvertBinToDotted;



/
--------------------------------------------------------
--  DDL for Function FCCONVERTDOTTEDTOBIN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCONVERTDOTTEDTOBIN" (IN_PREFIX varchar2)
    return varchar2 is
    V_ANS           varchar2(32) := '';
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    POS             number;
    TMP_PREFIX      varchar2(300);
    TMP_TOKEN       varchar2(300);
    TMP_TOKEN_NUM   number;
    CNT             number;
    RES             varchar2(300);
    TMP_MOD         number;
    BEGIN

--    PKLOG.INSERTLOG('FcConvertDottedToBin('||IN_PREFIX||')', 'FUNCTION.FcConvertDottedToBin',
--                    'DEBUG', 'START');

    BEGIN

        if IN_PREFIX is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_PREFIX is NULL!');
        end if;


        POS := 1000;
        TMP_PREFIX := IN_PREFIX;
        WHILE POS <> 0
        LOOP
            POS := INSTR(TMP_PREFIX, '.');
            TMP_TOKEN := SUBSTR(TMP_PREFIX, 0, POS-1);
            if TMP_TOKEN is null then
                TMP_TOKEN := TMP_PREFIX;
            end if;
            TMP_PREFIX := SUBSTR(TMP_PREFIX, POS+1);
--          TMP_TOKEN is the token extracted
            TMP_TOKEN_NUM := TO_NUMBER(TMP_TOKEN, '999');
            RES := 0;
            FOR CNT in REVERSE 0..7
            LOOP
                TMP_MOD := MOD(TMP_TOKEN_NUM, power(2, CNT));
                if TMP_MOD = TMP_TOKEN_NUM then
                    V_ANS := V_ANS || '0';
                ELSE
                    V_ANS := V_ANS || '1';
                END IF;
                TMP_TOKEN_NUM := TMP_MOD;
            END LOOP;
--            return V_ANS;
        end LOOP;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on convert ip prefix: '||
--                            IN_PREFIX, 'FUNCTION.FcConvertDottedToBin',
--                            'ERROR',
--                            'Error code = '||error_code||
--                            ', error_msg = '||error_msg);
            v_ans := '';
    END;


--    pkLog.insertLog('('||IN_PREFIX||') = '||v_ans, 'FUNCTION.FcConvertDottedToBin',
--                    'DEBUG', 'END');

    return v_ans;

  END FcConvertDottedToBin;



/
--------------------------------------------------------
--  DDL for Function FCCONVERTDOTTEDTOINT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCONVERTDOTTEDTOINT" (IN_DOT varchar2)
    RETURN NUMBER IS
    V_ANS           NUMBER := 0;
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    POS             number;
    TMP_PREFIX      varchar2(300);
    TMP_TOKEN       varchar2(300);
    TMP_TOKEN_NUM   number;
    CNT             number;
    RES             varchar2(300);
    TMP_MOD         number;
    BEGIN

--    PKLOG.INSERTLOG('FCCONVERTDOTTEDTOINT('||IN_DOT||')',
--                    'FUNCTION.FCCONVERTDOTTEDTOINT',
--                    'DEBUG', 'START');

    BEGIN

        if IN_DOT is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_DOT is NULL!');
        END IF;

        SELECT FCCONVERTIPBINTOINT(FCCONVERTDOTTEDTOBIN(IN_DOT)) INTO V_ANS 
        FROM DUAL;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on convert ip dotted: '||
--                            IN_DOT, 'FUNCTION.FCCONVERTDOTTEDTOINT',
--                            'ERROR',
--                            'Error code = '||error_code||
--                            ', error_msg = '||error_msg);
            v_ans := '';
    END;


--    PKLOG.INSERTLOG('FCCONVERTDOTTEDTOINT('||IN_DOT||') = '||V_ANS,
--                     'FUNCTION.FCCONVERTDOTTEDTOINT',
--                    'DEBUG', 'END');

    return v_ans;

END FCCONVERTDOTTEDTOINT;



/
--------------------------------------------------------
--  DDL for Function FCCONVERTINTTODOTTED
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCONVERTINTTODOTTED" (IN_INT NUMBER)
    return varchar2 is
    V_ANS           varchar2(32) := '';
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    POS             number;
    TMP_PREFIX      varchar2(300);
    TMP_TOKEN       varchar2(300);
    TMP_TOKEN_NUM   number;
    CNT             number;
    RES             varchar2(300);
    TMP_MOD         number;
    BEGIN

--    PKLOG.INSERTLOG('FCCONVERTINTTODOTTED('||IN_INT||')',
--                    'FUNCTION.FCCONVERTINTTODOTTED',
--                    'DEBUG', 'START');

    BEGIN

        if IN_INT is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_INT is NULL!');
        END IF;

        SELECT FCCONVERTBINTODOTTED(FCCONVERTINTTOIPBIN(IN_INT)) INTO V_ANS 
        FROM DUAL;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on convert ip prefix: '||
--                            IN_INT, 'FUNCTION.FCCONVERTINTTODOTTED',
--                            'ERROR',
--                            'Error code = '||error_code||
--                            ', error_msg = '||error_msg);
            v_ans := '';
    END;


--    PKLOG.INSERTLOG('FCCONVERTINTTODOTTED('||IN_INT||') = '||V_ANS,
--                     'FUNCTION.FCCONVERTINTTODOTTED',
--                    'DEBUG', 'END');

    return v_ans;

  END FCCONVERTINTTODOTTED;



/
--------------------------------------------------------
--  DDL for Function FCCONVERTINTTOIPBIN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCONVERTINTTOIPBIN" (IN_INT NUMBER)
    return varchar2 is
    V_ANS           varchar2(32) := '';
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    POS             number;
    TMP_PREFIX      varchar2(300);
    TMP_TOKEN       varchar2(300);
    TMP_TOKEN_NUM   number;
    CNT             number;
    RES             varchar2(300);
    TMP_MOD         number;
    BEGIN

--    PKLOG.INSERTLOG('FcConvertIntToIpBin('||IN_INT||')',
--                    'FUNCTION.FcConvertIntToIpBin',
--                    'DEBUG', 'START');

    BEGIN

        if IN_INT is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_INT is NULL!');
        END IF;

    IF IN_INT > 4294967295 THEN
--        PKLOG.INSERTLOG('Error on convert ip prefix: '|| IN_INT,
--                        'FUNCTION.FcConvertIntToIpBin',
--                        'ERROR', 'NUMBER OVERFLOW');
        V_ANS := '';
    ELSE
        TMP_TOKEN_NUM := TO_NUMBER(IN_INT, '9999999999');
        RES := 0;
        FOR CNT in REVERSE 0..31
        LOOP
            TMP_MOD := MOD(TMP_TOKEN_NUM, power(2, CNT));
            if TMP_MOD = TMP_TOKEN_NUM then
                V_ANS := V_ANS || '0';
            ELSE
                V_ANS := V_ANS || '1';
            END IF;
            TMP_TOKEN_NUM := TMP_MOD;
        END LOOP;
    END IF;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on convert ip prefix: '||
--                            IN_INT, 'FUNCTION.FcConvertIntToIpBin',
--                            'ERROR',
--                            'Error code = '||error_code||
--                            ', error_msg = '||error_msg);
            v_ans := '';
    END;


--    PKLOG.INSERTLOG('FcConvertIntToIpBin('||IN_INT||') = '||V_ANS,
--                     'FUNCTION.FcConvertIntToIpBin',
--                    'DEBUG', 'END');

    return v_ans;

  END FcConvertIntToIpBin;



/
--------------------------------------------------------
--  DDL for Function FCCONVERTIPBINTOINT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCONVERTIPBINTOINT" (IN_IP varchar2)
    RETURN NUMBER IS
    V_ANS           number := 0;
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    TMP_PREFIX      varchar2(300);
    TMP_TOKEN       varchar2(300);
    TMP_TOKEN_NUM   number;
    TMP_POS         number;
    BEGIN

--    PKLOG.INSERTLOG('FcConvertIpBinToInt('||IN_IP||')', 'FUNCTION.FcConvertIpBinToInt',
--                    'DEBUG', 'START');

    BEGIN

        if IN_IP is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_IP is NULL!');
        end if;


        TMP_PREFIX := IN_IP;
        TMP_POS := 1;
        IF LENGTH(TRIM(TRANSLATE (TMP_PREFIX, '01', ' '))) IS NULL THEN
            FOR CNT IN REVERSE 0..(LENGTH(IN_IP) - 1)
            LOOP
                TMP_TOKEN := SUBSTR(TMP_PREFIX, TMP_POS, 1);
                TMP_TOKEN_NUM := TO_NUMBER(TMP_TOKEN, '9');
                V_ANS := V_ANS + (TMP_TOKEN_NUM * POWER(2, CNT));
                TMP_POS := TMP_POS + 1;
            END LOOP;
        ELSE
--            pkLog.insertLog('Error on convert ip: '||
--                            IN_IP, 'FUNCTION.FcConvertIpBinToInt',
--                            'ERROR',
--                            'STRING IS NOT BINARY IP');
            V_ANS := 0;
        END IF;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on convert ip prefix: '||
--                            IN_IP, 'FUNCTION.FcConvertIpBinToInt',
--                            'ERROR',
--                            'Error code = '||error_code||
--                            ', error_msg = '||error_msg);
            v_ans := 0;
    END;


--    pkLog.insertLog('('||IN_IP||') = '||v_ans, 'FUNCTION.FcConvertIpBinToInt',
--                    'DEBUG', 'END');

    return v_ans;

  END FcConvertIpBinToInt;



/
--------------------------------------------------------
--  DDL for Function FCCONVERTNUMNETMASKTODOTTED
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCONVERTNUMNETMASKTODOTTED" (NETMASK IN NUMBER) RETURN VARCHAR2 AS
BINIP       VARCHAR2(32) := '';
RES         VARCHAR2(32) := '';
BEGIN
    BINIP := REPLACE(RPAD('A', NETMASK+1, '1'), 'A', '')||
             REPLACE(RPAD('A', 32-NETMASK+1, '0'), 'A', '');

    RES  := fcconvertbintodotted(binip);

    RETURN RES;
END;



/
--------------------------------------------------------
--  DDL for Function FCCONVERTUTCDATEINSPECIFICTZ
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCCONVERTUTCDATEINSPECIFICTZ" (IN_DATE IN DATE, IN_TIME_ZONE IN VARCHAR2)
        RETURN DATE IS
   -----------------------------------------------------
   -- Return A INPUT DATE IN UTC TIMEZONE CONVERTING IT
   -- with input time zone ('UTC' is default)
   -----------------------------------------------------

    RESULT          DATE;
    V_TIME_ZONE     VARCHAR2(100);

    BEGIN

       -- CHECK INPUT PARAMETERS
        IF IN_DATE IS NULL THEN
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_DATE is NULL!');
        ELSIF IN_TIME_ZONE IS NULL THEN
            V_TIME_ZONE := 'UTC';
        ELSE 
            V_TIME_ZONE := IN_TIME_ZONE;
        END IF;

        SELECT 
                TO_DATE(
                            TO_CHAR(
                                    TO_TIMESTAMP_TZ(
                                                    TO_CHAR(
                                                            IN_DATE, 
                                                            'YYYY-MM-DD HH24:MI:SS'
                                                            ) || ' +00:00', 
                                                    'YYYY-MM-DD HH24:MI:SS TZH:TZM'
                                                   ) AT TIME ZONE (V_TIME_ZONE)
                                        , 'DD-MM-YYYY HH24:MI:SS'
                                    ) 
                            , 'DD-MM-YYYY HH24:MI:SS'
                        ) AS TMSTMP_TZ_CONVERTED INTO RESULT
        FROM DUAL;


      return RESULT;

END FCCONVERTUTCDATEINSPECIFICTZ;
  -----------------------------------------------------



/
--------------------------------------------------------
--  DDL for Function FCDENORMALIZEMSISDN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCDENORMALIZEMSISDN" (IN_MSISDN IN MSISDN_WHITELIST.MSISDN%TYPE)
    RETURN MSISDN_WHITELIST.MSISDN%TYPE DETERMINISTIC AS

    error_code NUMBER;
    ERROR_MSG  VARCHAR2 (300);
    TMP_MSISDN      MSISDN_WHITELIST.MSISDN%TYPE;
    BEGIN

--       PKLOG.INSERTLOG('('||IN_MSISDN||')',
--                       'PKUTILS.denormalizeMsisdn', 'TRACE', 'START');

       -- CHECK INPUT PARAMETERS
       IF IN_MSISDN is null then
--          raise_application_error(-20002,
--                                  'NULL MANDATORY VARIABLE(IN_MSISDN)');
       return null; 
       END IF;

        IF SUBSTR(IN_MSISDN, 1, 1) = '+' THEN
            TMP_MSISDN := SUBSTR(IN_MSISDN, 2);
        ELSE
            TMP_MSISDN := IN_MSISDN;
        END IF;

        if SUBSTR(TMP_MSISDN, 1, 1) <> '0' then
            IF SUBSTR(TMP_MSISDN, 1, 2) = '39' AND LENGTH(TMP_MSISDN) IN (11, 12) THEN
                TMP_MSISDN := SUBSTR(IN_MSISDN, 3);
            END IF;
        END IF;

--       PKLOG.INSERTLOG('('||IN_MSISDN||') = result='||TMP_MSISDN,
--                       'PKUTILS.denormalizeMsisdn', 'TRACE', 'END');

      return TMP_MSISDN;

    END FCDENORMALIZEMSISDN;
  -----------------------------------------------------

/
--------------------------------------------------------
--  DDL for Function FCEXTRACTSUBNET
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCEXTRACTSUBNET" (IN_IP varchar2, IN_MASK NUMBER)
    RETURN VARCHAR2 IS
    V_ANS                   VARCHAR2(300) := '';
    ERROR_CODE              NUMBER;
    ERROR_MSG               VARCHAR2(300);
    TMP_MASK                VARCHAR2(300);
    TMP_MASK_NUM            NUMBER;
    TMP_IP_TO_CHECK         VARCHAR2(300);
    TMP_IP_TO_CHECK_NUM     NUMBER;
    TMP_BITAND              NUMBER;
    TMP_BITAND_IP           VARCHAR2(300);
    TMP_BITAND_DOTTED       VARCHAR2(300);

    BEGIN

--    PKLOG.INSERTLOG('FcExtractSubNet('||IN_IP||
--                                    ', '||IN_MASK||')'
--                                        , 'FUNCTION.FcExtractSubNet',
--                                        'DEBUG', 'START');

    BEGIN

        if IN_IP is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_IP is NULL!');
        end if;
        if IN_MASK is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_MASK is NULL!');
        end if;


--        FCCONVERTBINTODOTTED(FCCONVERTINTTOIPBIN(BITAND(FCCONVERTIPBINTOINT('10100011101000100001001001000001'), FCCONVERTIPBINTOINT(FCBITMASK(24))))) AS F,
        TMP_IP_TO_CHECK     := FCCONVERTDOTTEDTOBIN(IN_IP);
        TMP_IP_TO_CHECK_NUM := FCCONVERTIPBINTOINT(TMP_IP_TO_CHECK);
        TMP_MASK            := FCBITMASK(IN_MASK);
        TMP_MASK_NUM        := FCCONVERTIPBINTOINT(TMP_MASK);
        TMP_BITAND          := BITAND(TMP_IP_TO_CHECK_NUM, TMP_MASK_NUM);
        TMP_BITAND_IP       := FCCONVERTINTTOIPBIN(TMP_BITAND);
--        TMP_BITAND_DOTTED   := FCCONVERTBINTODOTTED(TMP_BITAND_IP);
        V_ANS               := SUBSTR(TMP_BITAND_IP, 1, IN_MASK);

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on convert ip prefix: '||
--                            IN_IP, 'FUNCTION.FcExtractSubNet',
--                            'ERROR',
--                            'Error code = '||error_code||
--                            ', error_msg = '||ERROR_MSG);
            v_ans := '';
    END;


--    pkLog.insertLog('('||IN_IP||') = '||v_ans, 'FUNCTION.FcExtractSubNet',
--                    'DEBUG', 'END');

    return v_ans;

  END FcExtractSubNet;



/
--------------------------------------------------------
--  DDL for Function FCGETASDPART
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETASDPART" (ACCTSTARTTIME IN TIMESTAMP WITH TIME ZONE) RETURN NUMBER AS
BEGIN
  RETURN EXTRACT(MONTH FROM ACCTSTARTTIME);
END;



/
--------------------------------------------------------
--  DDL for Function FCGETCLIENTPART
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETCLIENTPART" (IN_CLIENT IN NUMBER) RETURN NUMBER AS
BEGIN
  RETURN MOD(IN_CLIENT, 11);
END;



/
--------------------------------------------------------
--  DDL for Function FCGETCONTENTIDSONS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETCONTENTIDSONS" (IN_CONTENT_ID   IN VARCHAR2)
    RETURN VARCHAR2 AS

    RESULT              VARCHAR2(4000);
    ERROR_CODE          NUMBER;
    ERROR_MSG           varchar2 (300);
    TMP_CNTID           varchar2 (4000);
    IDX                 number := 0;
    TMP_TOKEN           VARCHAR2 (100);
    V_IS_TKN_IN_DB      number := 0;
    TMP_RES             VARCHAR2(4000);

    BEGIN

--       PKLOG.INSERTLOG('('||IN_CONTENT_ID||')',
--                       'FCGETCONTENTIDSONS', 'TRACE', 'START');

       -- CHECK INPUT PARAMETERS
        IF IN_CONTENT_ID is null then
          raise_application_error(-20002,
                                  'NULL MANDATORY VARIABLE(IN_CONTENT_ID)');
        END IF;

        --CONTROLLO SE C'E' NELLA STRINGA UN GRUPPO DI CONTENT_ID
        IDX := instr(IN_CONTENT_ID, 'g');
        if IDX > 0 then

            TMP_RES := '';

            TMP_CNTID := IN_CONTENT_ID;

            LOOP
                IDX := instr(TMP_CNTID, '|');
                IF IDX > 0 THEN
                    TMP_TOKEN := SUBSTR(TMP_CNTID, 1, IDX - 1);
                    TMP_CNTID := substr(TMP_CNTID, IDX + 1);
                ELSE
                    TMP_TOKEN := TMP_CNTID;
                END IF;

                if INSTR(LOWER(TMP_TOKEN), 'g') = 1 then

                    for CURS_CAT IN (
                        SELECT CAT_ID
                        FROM FIREWALL_CATEGORIES
                        where CAT_GROUP_ID = TMP_TOKEN
                    )
                    LOOP
                        IF TMP_RES IS NOT NULL THEN 
                            TMP_RES:=TMP_RES||'|';
                        END IF;
                        TMP_RES:=TMP_RES||CURS_CAT.CAT_ID;
                    END LOOP;

                else
                    if TMP_RES IS NOT NULL then 
                        TMP_RES:=TMP_RES||'|'; 
                    END IF;
                    TMP_RES:=TMP_RES||TMP_TOKEN;
                END IF;

                IF IDX = 0 THEN
                    EXIT;
                END IF;

            end LOOP;
            RESULT := TMP_RES;
        else
            RESULT := IN_CONTENT_ID;
        end if;

--       PKLOG.INSERTLOG('('||IN_CONTENT_ID||') = result='||TMP_MSISDN,
--                       'FCGETCONTENTIDSONS', 'TRACE', 'END');

      return RESULT;

    END FCGETCONTENTIDSONS;
  -----------------------------------------------------



/
--------------------------------------------------------
--  DDL for Function FCGETLASTIPTOKEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETLASTIPTOKEN" (IN_IP varchar2)
    return NUMBER is
    V_ANS           varchar2(32) := '';
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    POS             number;
    TMP_PREFIX      varchar2(300);
    TMP_TOKEN       varchar2(300);
    TMP_TOKEN_NUM   number;
    BEGIN

--    PKLOG.INSERTLOG('FcGetLastIpToken('||IN_PREFIX||')', 'FUNCTION.FcGetLastIpToken',
--                    'DEBUG', 'START');

    BEGIN

        if IN_IP is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_IP is NULL!');
        end if;


        POS := 1000;
        TMP_PREFIX := IN_IP;
        WHILE POS <> 0
        LOOP
            POS := INSTR(TMP_PREFIX, '.');
            TMP_TOKEN := SUBSTR(TMP_PREFIX, 0, POS-1);
            if TMP_TOKEN is null then
                TMP_TOKEN := TMP_PREFIX;
            end if;
            TMP_PREFIX := SUBSTR(TMP_PREFIX, POS+1);
--          TMP_TOKEN is the token extracted
            TMP_TOKEN_NUM := TO_NUMBER(TMP_TOKEN, '999');
            V_ANS := TMP_TOKEN_NUM;
        end LOOP;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('Error on convert ip prefix: '||
                            IN_IP, 'FUNCTION.FcGetLastIpToken',
                            'ERROR',
                            'Error code = '||error_code||
                            ', error_msg = '||ERROR_MSG);
            v_ans := -1;
    END;


--    pkLog.insertLog('('||IN_PREFIX||') = '||v_ans, 'FUNCTION.FcGetLastIpToken',
--                    'DEBUG', 'END');

    return v_ans;

  END FcGetLastIpToken;



/
--------------------------------------------------------
--  DDL for Function FCGETLISTSUBNETS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETLISTSUBNETS" (IN_TOT_SIZE NUMBER)
    RETURN INTEGER_ARR_PARAM IS
    V_ANS           INTEGER_ARR_PARAM;
    ERROR_CODE      number;
    ERROR_MSG       VARCHAR2(300);
    V_TOT_SIZE      NUMBER;
    V_CONT          NUMBER := 0;
    V_TMP_SIZE      NUMBER;
    V_IND           NUMBER := 1;

    BEGIN

--        PKLOG.INSERTLOG('FcGetListSubnets('||IN_TOT_SIZE||')',
--                                         'FUNCTION.FcGetListSubnets',
--                        'TRACE', 'START');


        if IN_TOT_SIZE is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_TOT_SIZE is NULL!');
        end if;

        IF MOD(IN_TOT_SIZE, 2) = 1 THEN
            V_TOT_SIZE := IN_TOT_SIZE + 1;
        ELSE 
            V_TOT_SIZE := IN_TOT_SIZE;
        END IF;

        V_ANS := INTEGER_ARR_PARAM();

        WHILE (V_CONT < V_TOT_SIZE)
        LOOP
            V_TMP_SIZE := FCGETMAXLOWERSUBNET(V_TOT_SIZE - V_CONT);
            V_ANS.EXTEND(1);
            V_ANS(V_ANS.COUNT) := V_TMP_SIZE;
            V_CONT := V_CONT + V_TMP_SIZE;
        END LOOP;

--        PKLOG.INSERTLOG('FcGetListSubnets('||IN_TOT_SIZE||') = '||V_ANS,
--                                         'FUNCTION.FcGetListSubnets',
--                                         'TRACE', 'END');

        RETURN v_ans;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('Error on get max lower subnet: ('||IN_TOT_SIZE||')',
                                     'FUNCTION.FcGetListSubnets',
                                     'ERROR',
                                     'Error code = '||ERROR_CODE||
                                     ', error_msg = '||ERROR_MSG);
            V_ANS := INTEGER_ARR_PARAM();
            RETURN v_ans;

END FcGetListSubnets;

/
--------------------------------------------------------
--  DDL for Function FCGETMAXLOWERSUBNET
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETMAXLOWERSUBNET" (IN_SUB_SIZE NUMBER)
    RETURN NUMBER IS
    V_ANS           NUMBER := 0;
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    BEGIN

--        PKLOG.INSERTLOG('FcGetMaxLowerSubnet('||IN_SUB_SIZE||')',
--                                         'FUNCTION.FcGetMaxLowerSubnet',
--                        'TRACE', 'START');


        if IN_SUB_SIZE is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_SUB_SIZE is NULL!');
        end if;

        SELECT TMP_SUB2.SUB_LIMIT INTO V_ANS FROM
        (
            SELECT TMP_SUB.*, ROWNUM AS RN FROM
            (
                SELECT TMP_SUB_INT.* FROM
                (
                    SELECT  LEVEL - 1 AS EXP,
                            CASE    WHEN LEVEL - 1 = 0 THEN 1
                                    ELSE POWER(2, LEVEL - 1) - 2
                            END AS SUB_LIMIT
                    FROM DUAL
                    CONNECT BY LEVEL - 1 < 32
                ) TMP_SUB_INT
                ORDER BY TMP_SUB_INT.EXP DESC
            ) TMP_SUB
            WHERE TMP_SUB.SUB_LIMIT <= IN_SUB_SIZE
        ) TMP_SUB2
        WHERE TMP_SUB2.RN = 1;

--        PKLOG.INSERTLOG('FcGetMaxLowerSubnet('||IN_SUB_SIZE||') = '||V_ANS,
--                                         'FUNCTION.FcGetMaxLowerSubnet',
--                                         'TRACE', 'END');

        RETURN v_ans;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('Error on get max lower subnet: ('||IN_SUB_SIZE||')',
                                     'FUNCTION.FcGetMaxLowerSubnet',
                                     'ERROR',
                                     'Error code = '||ERROR_CODE||
                                     ', error_msg = '||ERROR_MSG);
            RETURN -1;

  END FCGETMAXLOWERSUBNET;



/
--------------------------------------------------------
--  DDL for Function FCGETMINUPPERSUBNET
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETMINUPPERSUBNET" (IN_SUB_SIZE NUMBER)
    RETURN NUMBER IS
    V_ANS           NUMBER := 0;
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    BEGIN

--        PKLOG.INSERTLOG('FcGetMinUpperSubnet('||IN_SUB_SIZE||')',
--                                         'FUNCTION.FcGetMinUpperSubnet',
--                        'TRACE', 'START');


        if IN_SUB_SIZE is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_SUB_SIZE is NULL!');
        end if;



        SELECT TMP_SUB2.SUB_LIMIT INTO V_ANS FROM
        (
            SELECT TMP_SUB.*, ROWNUM AS RN FROM
            (
                SELECT  LEVEL - 1 AS EXP,
                        CASE    WHEN LEVEL - 1 = 0 THEN 1
                                ELSE POWER(2, LEVEL - 1) - 2
                        END AS SUB_LIMIT
                FROM DUAL
                CONNECT BY LEVEL - 1 < 32
            ) TMP_SUB
            WHERE TMP_SUB.SUB_LIMIT >= IN_SUB_SIZE
        ) TMP_SUB2
        WHERE TMP_SUB2.RN = 1;

--        PKLOG.INSERTLOG('FcGetMinUpperSubnet('||IN_SUB_SIZE||') = '||V_ANS,
--                                         'FUNCTION.FcGetMinUpperSubnet',
--                                         'TRACE', 'END');

        RETURN v_ans;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('Error on get min upper subnet: ('||IN_SUB_SIZE||')',
                                     'FUNCTION.FcGetMinUpperSubnet',
                                     'ERROR',
                                     'Error code = '||ERROR_CODE||
                                     ', error_msg = '||ERROR_MSG);
            RETURN -1;

  END FCGETMINUPPERSUBNET;



/
--------------------------------------------------------
--  DDL for Function FCGETNETMASK
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETNETMASK" (IN_SUB_SIZE NUMBER)
    RETURN NUMBER IS
    V_ANS           NUMBER := 0;
    ERROR_CODE      NUMBER;
    ERROR_MSG       VARCHAR2(300);
    V_TMP_SUBNET    VARCHAR2(32);
    TMP_TOKEN       VARCHAR2(1);
    BEGIN

--        PKLOG.INSERTLOG('FCGETNETMASK('||IN_SUB_SIZE||')',
--                                         'FUNCTION.FCGETNETMASK',
--                        'TRACE', 'START');


        if IN_SUB_SIZE is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_SUB_SIZE is NULL!');
        end if;


        SELECT FCCONVERTINTTOIPBIN(
                    FCBITXOR(FCCONVERTIPBINTOINT(FCBITMASK(32)), 
                             CASE WHEN IN_SUB_SIZE = 1 THEN 0 
                                 ELSE FCGETMINUPPERSUBNET(IN_SUB_SIZE) + 1
                             END)
                ) INTO V_TMP_SUBNET
        FROM DUAL;

        IF LENGTH(TRIM(TRANSLATE (V_TMP_SUBNET, '01', ' '))) IS NULL THEN
            FOR CNT IN 1..32
            LOOP
                TMP_TOKEN := SUBSTR(V_TMP_SUBNET, CNT, 1);
                IF TMP_TOKEN = '1' THEN
                    V_ANS := V_ANS + 1;
                END IF;
            END LOOP;
        ELSE
            pkLog.insertLog('Error on get netmask: '||
                            V_TMP_SUBNET, 'FUNCTION.FCGETNETMASK',
                            'ERROR',
                            'STRING IS NOT BINARY IP');
            V_ANS := 0;
        END IF;

--        PKLOG.INSERTLOG('FCGETNETMASK('||IN_SUB_SIZE||') = '||V_ANS,
--                                         'FUNCTION.FCGETNETMASK',
--                                         'TRACE', 'END');

        RETURN v_ans;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('Error on get min upper subnet: ('||IN_SUB_SIZE||')',
                                     'FUNCTION.FCGETNETMASK',
                                     'ERROR',
                                     'Error code = '||ERROR_CODE||
                                     ', error_msg = '||ERROR_MSG);
            RETURN -1;

  END FCGETNETMASK;



/
--------------------------------------------------------
--  DDL for Function FCGETNEXTSUBNET
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETNEXTSUBNET" (IN_IP VARCHAR2, IN_MASK NUMBER, IN_SUBNET_SIZE NUMBER)
    return VARCHAR2 is
    V_ANS           varchar2(32) := '';
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    V_SUB_LOWIP         NUMBER := 0;
    V_SUB_HIGHIP        NUMBER := 0;
    V_TMP_NEW_LOWIP     NUMBER := 0;
    V_TMP_NEW_HIGHIP    NUMBER := 0;
    V_TMP_SUB_SIZE      NUMBER := 0;
    V_TMP_NETMASK       NUMBER := 0;
    BEGIN

    PKLOG.INSERTLOG('FcGetNextSubnet('||IN_IP||
                                     ', '||IN_MASK||
                                     ', '||IN_SUBNET_SIZE||')',
                                     'FUNCTION.FcGetNextSubnet',
                    'TRACE', 'START');

    BEGIN

        if IN_IP is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_IP is NULL!');
        elsif IN_MASK is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_MASK is NULL!');
        elsIF IN_SUBNET_SIZE IS NULL THEN
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_SUBNET_SIZE is NULL!');
        end if;

        if IN_MASK = 32 then
            SELECT
        --                                            FCEXTRACTSUBNET(FCCONVERTBINTODOTTED(FCCONVERTINTTOIPBIN(V_TMP_NEW_LOWIP)), V_TMP_NETMASK) AS SUBNET,
                    FCCONVERTIPBINTOINT(
                            RPAD(FCEXTRACTSUBNET(IN_IP, IN_MASK),32,'0')
                    ),
                    FCCONVERTIPBINTOINT(
                            RPAD(FCEXTRACTSUBNET(IN_IP, IN_MASK),32,'1')
                    ) INTO V_SUB_LOWIP, V_SUB_HIGHIP
            from DUAL;
        ELSE
            SELECT
        --                                            FCEXTRACTSUBNET(FCCONVERTBINTODOTTED(FCCONVERTINTTOIPBIN(V_TMP_NEW_LOWIP)), V_TMP_NETMASK) AS SUBNET,
                    FCCONVERTIPBINTOINT(
                            RPAD(FCEXTRACTSUBNET(IN_IP, IN_MASK),31,'0')||'1'
                    ),
                    FCCONVERTIPBINTOINT(
                            RPAD(FCEXTRACTSUBNET(IN_IP, IN_MASK),31,'1')||'0'
                    ) INTO V_SUB_LOWIP, V_SUB_HIGHIP
            FROM DUAL;
        end if;

        V_TMP_SUB_SIZE := IN_SUBNET_SIZE;
        IF V_TMP_SUB_SIZE = 1 THEN
            V_TMP_NEW_LOWIP := V_SUB_HIGHIP + 1;
            V_TMP_NETMASK := 32 - ROUND(LOG(2, V_TMP_SUB_SIZE), 0);
        ELSE
            V_TMP_NEW_LOWIP := V_SUB_HIGHIP + 2;
            V_TMP_NETMASK := 32 - ROUND(LOG(2, V_TMP_SUB_SIZE + 2), 0);
        END IF;


        LOOP
            if V_TMP_NETMASK = 32 then
                SELECT
                        FCEXTRACTSUBNET(FCCONVERTBINTODOTTED(FCCONVERTINTTOIPBIN(V_TMP_NEW_LOWIP)), V_TMP_NETMASK) AS SUBNET,
                        FCCONVERTIPBINTOINT(
                                RPAD(FCEXTRACTSUBNET(FCCONVERTBINTODOTTED(FCCONVERTINTTOIPBIN(V_TMP_NEW_LOWIP)), V_TMP_NETMASK),32,'0')
                        ),
                        FCCONVERTIPBINTOINT(
                                RPAD(FCEXTRACTSUBNET(FCCONVERTBINTODOTTED(FCCONVERTINTTOIPBIN(V_TMP_NEW_LOWIP)), V_TMP_NETMASK),32,'1')
                        ) INTO V_ANS, V_TMP_NEW_LOWIP, V_TMP_NEW_HIGHIP
                FROM DUAL;
            ELSE
                SELECT
                        FCEXTRACTSUBNET(FCCONVERTBINTODOTTED(FCCONVERTINTTOIPBIN(V_TMP_NEW_LOWIP)), V_TMP_NETMASK) AS SUBNET,
                        FCCONVERTIPBINTOINT(
                                RPAD(FCEXTRACTSUBNET(FCCONVERTBINTODOTTED(FCCONVERTINTTOIPBIN(V_TMP_NEW_LOWIP)), V_TMP_NETMASK),31,'0')||'1'
                        ),
                        FCCONVERTIPBINTOINT(
                                RPAD(FCEXTRACTSUBNET(FCCONVERTBINTODOTTED(FCCONVERTINTTOIPBIN(V_TMP_NEW_LOWIP)), V_TMP_NETMASK),31,'1')||'0'
                        ) INTO V_ANS, V_TMP_NEW_LOWIP, V_TMP_NEW_HIGHIP
                from DUAL;
            end if;

            IF V_TMP_NEW_LOWIP <= V_SUB_LOWIP OR
               V_TMP_NEW_LOWIP <= V_SUB_HIGHIP or
               V_TMP_NEW_HIGHIP < V_TMP_NEW_LOWIP THEN
                IF V_TMP_SUB_SIZE = 1 THEN
                    V_TMP_NEW_LOWIP := V_TMP_NEW_HIGHIP + 1;
                ELSE
                    V_TMP_NEW_LOWIP := V_TMP_NEW_HIGHIP + 2;
                END IF;
            END IF;

            EXIT WHEN V_TMP_NEW_LOWIP >= 4294967295
                    OR V_TMP_NEW_HIGHIP >= 4294967295
                    OR (V_TMP_NEW_HIGHIP >= V_TMP_NEW_LOWIP
                    AND V_TMP_NEW_LOWIP > V_SUB_LOWIP
                    AND V_TMP_NEW_LOWIP > V_SUB_HIGHIP);
        END LOOP;

        IF V_TMP_NEW_LOWIP >= 4294967295
            OR V_TMP_NEW_HIGHIP >= 4294967295 THEN
               RAISE_APPLICATION_ERROR(-20002, 'ERROR: OUT OF RANGE!');
        END IF;

        IF V_TMP_NEW_LOWIP <= V_SUB_LOWIP OR
           V_TMP_NEW_LOWIP <= V_SUB_HIGHIP or
           V_TMP_NEW_HIGHIP < V_TMP_NEW_LOWIP THEN
               RAISE_APPLICATION_ERROR(-20002, 'ERROR: INVALID SUBNET!');
        END IF;

    PKLOG.INSERTLOG('FcGetNextSubnet('||IN_IP||
                                     ', '||IN_MASK||
                                     ', '||IN_SUBNET_SIZE||') = '||V_ANS,
                                     'FUNCTION.FcGetNextSubnet',
                                     'TRACE', 'END');

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('Error on get next subnet: ('||IN_IP||
                                     ', '||IN_MASK||
                                     ', '||IN_SUBNET_SIZE||')',
                                     'FUNCTION.FcGetNextSubnet',
                                     'ERROR',
                                     'Error code = '||ERROR_CODE||
                                     ', error_msg = '||ERROR_MSG);
            v_ans := NULL;
    END;


    return v_ans;

  END FcGetNextSubnet;



/
--------------------------------------------------------
--  DDL for Function FCGETNUMWEEKDAY
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETNUMWEEKDAY" (IN_DAY VARCHAR2, IN_LANGUAGE VARCHAR2) RETURN NUMBER AS
RES         NUMBER := 0;

BEGIN
    if IN_DAY is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_DAY is NULL!');
    ELSIF IN_LANGUAGE is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_LANGUAGE is NULL!');
    END IF;

    SELECT WK2.DOW INTO RES
    FROM (
        SELECT WK1.*, UPPER(SUBSTR(WK1.DAY, 1, 3)) AS DAYSHORT
        FROM (
            select level as dow,
                to_char(trunc(SYSDATE ,'day') + LEVEL - 1, 'Day',
                    'NLS_DATE_LANGUAGE='||IN_LANGUAGE) as day
            FROM dual
            CONNECT BY LEVEL <= 7
        ) WK1
    ) WK2
    WHERE (
            (
                LENGTH(IN_DAY) = 3 
                AND WK2.DAYSHORT = IN_DAY
            )
            OR 
            (
                LENGTH(IN_DAY) > 3 
                AND WK2.DAY = IN_DAY
            )
    );

    RETURN RES;
END FCGETNUMWEEKDAY;

/
--------------------------------------------------------
--  DDL for Function FCGETOCTETFROMDOTTED
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETOCTETFROMDOTTED" (IPDOT VARCHAR2, NUM_OCT NUMBER) RETURN VARCHAR2 AS
ITER        NUMBER := 0;
INDDOT      NUMBER := 0;
V_IPDOT     VARCHAR2(15) := '';
RES         VARCHAR2(3) := '';

BEGIN
    if IPDOT is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IPDOT is NULL!');
    ELSIF NUM_OCT is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER NUM_OCT is NULL!');
    ELSIF NUM_OCT > 4 OR NUM_OCT < 1 then
        RAISE_APPLICATION_ERROR(-20002,
                                'ERROR: PARAMETER NUM_OCT INVALID!');
    END IF;

    V_IPDOT := IPDOT;
    INDDOT := 0;
    LOOP

        SELECT SUBSTR(V_IPDOT, INDDOT + 1) INTO V_IPDOT FROM DUAL;

        SELECT INSTR(V_IPDOT, '.') INTO INDDOT FROM DUAL;

        ITER := ITER + 1;

        EXIT WHEN ITER >= NUM_OCT;        
    END LOOP;

    IF ITER = 4 THEN
        RES := V_IPDOT;
    ELSE 
        SELECT SUBSTR(V_IPDOT, 1, INDDOT - 1) INTO RES FROM DUAL;
    END IF;

    RETURN RES;
END FCGETOCTETFROMDOTTED;



/
--------------------------------------------------------
--  DDL for Function FCGETREPORTSCHEDDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETREPORTSCHEDDATE" (IN_RANGE VARCHAR2, IN_OFFSET VARCHAR2,
                                 IN_SCHED_REPORT_DAY NUMBER,
                                 IN_SCHED_REPORT_HOUR VARCHAR2)
    RETURN VARCHAR2 IS
    V_ANS           VARCHAR2(50) := NULL;
    ERROR_CODE      number;
    ERROR_MSG       VARCHAR2(300);
    V_HH            NUMBER;
    V_MI            NUMBER;
    V_RANGE         VARCHAR2(2);
    BEGIN

--        PKLOG.INSERTLOG('Error on get week year: ('||IN_RANGE||
--                                                  ', '||IN_OFFSET||
--                                                  ', '||IN_SCHED_REPORT_DAY||
--                                                  ', '||IN_SCHED_REPORT_HOUR||')',
--                                         'FUNCTION.FCGETREPORTSCHEDDATE',
--                        'DEBUG', 'START');

        if IN_RANGE is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_RANGE is NULL!');
        END IF;
        if IN_OFFSET is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_OFFSET is NULL!');
        END IF;
        if IN_SCHED_REPORT_DAY is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_SCHED_REPORT_DAY is NULL!');
        END IF;
        if IN_SCHED_REPORT_HOUR is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_SCHED_REPORT_HOUR is NULL!');
        END IF;

        V_HH := SUBSTR(IN_SCHED_REPORT_HOUR, 1, INSTR(IN_SCHED_REPORT_HOUR, ':') - 1);
        V_MI := SUBSTR(IN_SCHED_REPORT_HOUR, INSTR(IN_SCHED_REPORT_HOUR, ':') + 1);

        SELECT  CASE WHEN IN_RANGE = 'monthly' THEN 'MM'
                     WHEN IN_RANGE = 'weekly' THEN 'IW'
                END INTO V_RANGE
        FROM DUAL;

        SELECT TO_CHAR(TRUNC(FCGETUTCSYSDATE(NULL), V_RANGE) + --START DATE FOR SCHEDULATION
                            (TO_NUMBER(IN_OFFSET)/1440) + --OFFSET TIME IN MINUTE FOR START DATE
                            IN_SCHED_REPORT_DAY + V_HH/24 + V_MI/1440, --REPORT SCHEDULATION ORDER
                       'YYYY-MM-DD HH24:MI:SS')
                INTO V_ANS
        FROM DUAL;

--        PKLOG.INSERTLOG('Error on get week year: ('||IN_RANGE||
--                                                  ', '||IN_OFFSET||
--                                                  ', '||IN_SCHED_REPORT_DAY||
--                                                  ', '||IN_SCHED_REPORT_HOUR||') = '||V_ANS,
--                                     'FUNCTION.FCGETREPORTSCHEDDATE',
--                                     'DEBUG', 'END');

        RETURN v_ans;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            PKLOG.INSERTLOG('Error on get schedulation report date : ('||IN_RANGE||
                                                      ', '||IN_OFFSET||
                                                      ', '||IN_SCHED_REPORT_DAY||
                                                      ', '||IN_SCHED_REPORT_HOUR||')',
                                     'FUNCTION.FCGETREPORTSCHEDDATE',
                                     'ERROR',
                                     'Error code = '||ERROR_CODE||
                                     ', error_msg = '||ERROR_MSG);
            RETURN NULL;

  END FCGETREPORTSCHEDDATE;



/
--------------------------------------------------------
--  DDL for Function FCGETSUBNETHIGHIP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETSUBNETHIGHIP" (IN_IP VARCHAR2, IN_MASK NUMBER, WITH_EDGE NUMBER DEFAULT 0)
    RETURN NUMBER IS
    V_ANS           NUMBER := 0;
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    V_SUB_LOWIP         NUMBER := 0;
    V_SUB_HIGHIP        NUMBER := 0;
    V_TMP_NEW_LOWIP     NUMBER := 0;
    V_TMP_NEW_HIGHIP    NUMBER := 0;
    V_TMP_SUB_SIZE      NUMBER := 0;
    V_TMP_NETMASK       NUMBER := 0;
    BEGIN

--        PKLOG.INSERTLOG('FcGetSubnetHighIp('||IN_IP||
--                                         ', '||IN_MASK||')',
--                                         'FUNCTION.FcGetSubnetHighIp',
--                        'DEBUG', 'START');


        if IN_IP is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_IP is NULL!');
        elsif IN_MASK is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_MASK is NULL!');
        end if;



        SELECT
            FCCONVERTIPBINTOINT(
                            CASE WHEN IN_MASK = 32 THEN
                                FCEXTRACTSUBNET(
                                FCCOMPLETEPREFIX(IN_IP),
                                                 IN_MASK)
                            ELSE
                                CASE WHEN WITH_EDGE = 1 THEN
                                    RPAD(FCEXTRACTSUBNET(
                                    FCCOMPLETEPREFIX(IN_IP),
                                                     IN_MASK),32,'1')
                                ELSE
                                    RPAD(FCEXTRACTSUBNET(
                                    FCCOMPLETEPREFIX(IN_IP),
                                                     IN_MASK),31,'1')||'0'
                                end
                            END
            ) AS HIGHIP INTO V_ANS
        FROM DUAL;

--        PKLOG.INSERTLOG('FcGetSubnetHighIp('||IN_IP||
--                                         ', '||IN_MASK||') = '||V_ANS,
--                                         'FUNCTION.FcGetSubnetHighIp',
--                                         'DEBUG', 'END');

        RETURN v_ans;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on get next subnet: ('||IN_IP||
--                                     ', '||IN_MASK||')',
--                                     'FUNCTION.FcGetSubnetHighIp',
--                                     'ERROR',
--                                     'Error code = '||ERROR_CODE||
--                                     ', error_msg = '||ERROR_MSG);
            RETURN -1;

  END FcGetSubnetHighIp;



/
--------------------------------------------------------
--  DDL for Function FCGETSUBNETLOWIP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETSUBNETLOWIP" (IN_IP VARCHAR2, IN_MASK NUMBER, WITH_EDGE NUMBER DEFAULT 0)
    RETURN NUMBER IS
    V_ANS           NUMBER := 0;
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    V_SUB_LOWIP         NUMBER := 0;
    V_SUB_HIGHIP        NUMBER := 0;
    V_TMP_NEW_LOWIP     NUMBER := 0;
    V_TMP_NEW_HIGHIP    NUMBER := 0;
    V_TMP_SUB_SIZE      NUMBER := 0;
    V_TMP_NETMASK       NUMBER := 0;
    BEGIN

--        PKLOG.INSERTLOG('FcGetSubnetLowIp('||IN_IP||
--                                         ', '||IN_MASK||')',
--                                         'FUNCTION.FcGetSubnetLowIp',
--                        'DEBUG', 'START');


        if IN_IP is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_IP is NULL!');
        elsif IN_MASK is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_MASK is NULL!');
        end if;



        SELECT
            FCCONVERTIPBINTOINT(
                            CASE WHEN IN_MASK = 32 THEN
                                FCEXTRACTSUBNET(
                                FCCOMPLETEPREFIX(IN_IP),
                                                 IN_MASK)
                            ELSE
                                CASE WHEN WITH_EDGE = 1 THEN
                                    RPAD(FCEXTRACTSUBNET(
                                    FCCOMPLETEPREFIX(IN_IP),
                                                     IN_MASK),32,'0')
                                ELSE
                                    RPAD(FCEXTRACTSUBNET(
                                    FCCOMPLETEPREFIX(IN_IP),
                                                     IN_MASK),31,'0')||'1'
                                end
                            END
            ) AS LOWIP INTO V_ANS
        FROM DUAL;

--        PKLOG.INSERTLOG('FcGetSubnetLowIp('||IN_IP||
--                                         ', '||IN_MASK||') = '||V_ANS,
--                                         'FUNCTION.FcGetSubnetLowIp',
--                                         'DEBUG', 'END');

        RETURN v_ans;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on get next subnet: ('||IN_IP||
--                                     ', '||IN_MASK||')',
--                                     'FUNCTION.FcGetSubnetLowIp',
--                                     'ERROR',
--                                     'Error code = '||ERROR_CODE||
--                                     ', error_msg = '||ERROR_MSG);
            RETURN -1;

  END FcGetSubnetLowIp;



/
--------------------------------------------------------
--  DDL for Function FCGETSUBNETSIZE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETSUBNETSIZE" (IN_IP VARCHAR2, IN_MASK NUMBER, WITH_EDGE NUMBER DEFAULT 0)
    RETURN NUMBER IS
    V_ANS           NUMBER := 0;
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    V_SUB_LOWIP         NUMBER := 0;
    V_SUB_HIGHIP        NUMBER := 0;
    V_TMP_NEW_LOWIP     NUMBER := 0;
    V_TMP_NEW_HIGHIP    NUMBER := 0;
    V_TMP_SUB_SIZE      NUMBER := 0;
    V_TMP_NETMASK       NUMBER := 0;
    BEGIN

--        PKLOG.INSERTLOG('FCGETSUBNETSIZE('||IN_IP||
--                                         ', '||IN_MASK||')',
--                                         'FUNCTION.FCGETSUBNETSIZE',
--                        'DEBUG', 'START');


        if IN_IP is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_IP is NULL!');
        elsif IN_MASK is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_MASK is NULL!');
        end if;


        V_SUB_LOWIP  := FCGETSUBNETLOWIP(IN_IP, IN_MASK, WITH_EDGE);
        V_SUB_HIGHIP := FCGETSUBNETHIGHIP(IN_IP, IN_MASK, WITH_EDGE);
        V_ANS := V_SUB_HIGHIP - V_SUB_LOWIP  + 1;

--        PKLOG.INSERTLOG('FCGETSUBNETSIZE('||IN_IP||
--                                         ', '||IN_MASK||') = '||V_ANS,
--                                         'FUNCTION.FCGETSUBNETSIZE',
--                                         'DEBUG', 'END');

        RETURN v_ans;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
--            pkLog.insertLog('Error on get next subnet: ('||IN_IP||
--                                     ', '||IN_MASK||')',
--                                     'FUNCTION.FCGETSUBNETSIZE',
--                                     'ERROR',
--                                     'Error code = '||ERROR_CODE||
--                                     ', error_msg = '||ERROR_MSG);
            RETURN -1;

  END FCGETSUBNETSIZE;



/
--------------------------------------------------------
--  DDL for Function FCGETUTCSYSDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETUTCSYSDATE" (IN_TIME IN VARCHAR2)
        RETURN DATE IS
   -----------------------------------------------------
   -- Return UTC TIME IN DATE FORMAT
   -----------------------------------------------------

    TMP_TIME    VARCHAR2(50);
    RESULT      DATE;

    BEGIN

       -- CHECK INPUT PARAMETERS
        IF IN_TIME IS NULL THEN
            TMP_TIME := FCGETUTCTIME();
        ELSE
            TMP_TIME := IN_TIME;
        END IF;

        select TO_DATE(TO_CHAR(TO_TIMESTAMP(TMP_TIME, 'DD-MM-YYYY HH.MI.SS.FF9 AM'), 'DD-MM-YYYY HH24.MI.SS'), 'DD-MM-YYYY HH24.MI.SS') as UTC_DATE INTO RESULT
        from DUAL;

      return RESULT;

    END FCGETUTCSYSDATE;
  -----------------------------------------------------



/
--------------------------------------------------------
--  DDL for Function FCGETUTCSYSTIMESTAMP
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETUTCSYSTIMESTAMP" (IN_TIME IN VARCHAR2)
        RETURN TIMESTAMP IS
   -----------------------------------------------------
   -- Return UTC TIME IN TIMESTAMP FORMAT
   -----------------------------------------------------

    TMP_TIME    VARCHAR2(50);
    RESULT      TIMESTAMP;

    BEGIN

       -- CHECK INPUT PARAMETERS
        IF IN_TIME IS NULL THEN
            TMP_TIME := FCGETUTCTIME();
        ELSE
            TMP_TIME := IN_TIME;
        END IF;

        select TO_TIMESTAMP(TMP_TIME, 'DD-MM-YYYY HH.MI.SS.FF9 AM') as UTC_TMSTMP INTO RESULT
        from DUAL;

      return RESULT;

    END FCgetUTCSysTimestamp;
  -----------------------------------------------------



/
--------------------------------------------------------
--  DDL for Function FCGETUTCSYSTIMESTAMPTZ
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETUTCSYSTIMESTAMPTZ" (IN_TIME IN VARCHAR2)
        RETURN TIMESTAMP WITH TIME ZONE IS
   -----------------------------------------------------
   -- Return UTC TIME IN TIMESTAMP WITH TIME ZONE FORMAT
   -----------------------------------------------------

    TMP_TIME    VARCHAR2(50);
    RESULT      TIMESTAMP WITH TIME ZONE;

    BEGIN

       -- CHECK INPUT PARAMETERS
        IF IN_TIME IS NULL THEN
            TMP_TIME := FCGETUTCTIME();
        ELSE
            TMP_TIME := IN_TIME;
        END IF;

        select TO_TIMESTAMP_TZ(TMP_TIME||' UTC',  'DD-MM-YYYY HH.MI.SS.FF9 AM TZR') AS UTC_TMSTMP_TZ INTO RESULT
        from DUAL;

      return RESULT;

    END FCGETUTCSYSTIMESTAMPTZ;
  -----------------------------------------------------



/
--------------------------------------------------------
--  DDL for Function FCGETUTCTIME
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETUTCTIME" 
        RETURN VARCHAR2 IS
   -----------------------------------------------------
   -- Return TIMESTAMP STRING CONVERTED IN UTC TIMEZONE
   -- OF SYSTIMESTAMP (OS DATE IS IN CET TIMEZONE)
   -- FORMAT IS 'DD-MM-RRRR HH.MI.SSXFF AM'
   -----------------------------------------------------

    RESULT          VARCHAR2(50);

    BEGIN

        select
                REPLACE(TO_CHAR(
                          SYS_EXTRACT_UTC(
                              TO_TIMESTAMP_TZ(
                                  TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD HH24:MI:SS.FF9')
                                          ||' Europe/Rome',
                                          'YYYY-MM-DD HH24:MI:SS.FF9 TZR')),
                        'DD-MM-RRRR HH.MI.SSXFF AM',
                        'NLS_DATE_LANGUAGE = ITALIAN'),
                        ',',
                        '.') AS UTC_TIME INTO RESULT
        from DUAL;

      return RESULT;

    END FCGETUTCTIME;
  -----------------------------------------------------



/
--------------------------------------------------------
--  DDL for Function FCGETWEEKDAYFROMNUM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETWEEKDAYFROMNUM" (IN_DAYNUM NUMBER, IN_LANGUAGE VARCHAR2, IN_SHORT NUMBER DEFAULT 1) RETURN VARCHAR2 AS
RES         VARCHAR2(20);

BEGIN
    if IN_DAYNUM is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_DAY is NULL!');
    ELSIF IN_LANGUAGE is null then
        raise_application_error(-20002,
                                'ERROR: PARAMETER IN_LANGUAGE is NULL!');
    END IF;

    SELECT  CASE WHEN IN_SHORT = 1 
                THEN WK2.DAYSHORT 
                ELSE WK2.DAY 
            END INTO RES
    FROM (
        SELECT WK1.*, UPPER(SUBSTR(WK1.DAY, 1, 3)) AS DAYSHORT
        FROM (
            select level as dow,
                to_char(trunc(SYSDATE ,'day') + LEVEL - 1, 'Day',
                    'NLS_DATE_LANGUAGE='||IN_LANGUAGE) as day
            FROM dual
            CONNECT BY LEVEL <= 7
        ) WK1
    ) WK2
    WHERE WK2.DOW = IN_DAYNUM;

    RETURN RES;

END FCGETWEEKDAYFROMNUM;

/
--------------------------------------------------------
--  DDL for Function FCGETWEEKYEAR
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCGETWEEKYEAR" (IN_DATE DATE)
    RETURN VARCHAR2 IS
    V_ANS           VARCHAR2(10) := NULL;
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    BEGIN

--        PKLOG.INSERTLOG('FCGETWEEKYEAR('||IN_DATE||')',
--                                         'FUNCTION.FCGETWEEKYEAR',
--                        'DEBUG', 'START');

        if IN_DATE is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_DATE is NULL!');
        END IF;

        SELECT CASE WHEN TO_NUMBER(TO_CHAR(IN_DATE, 'IW')) = 1
                    AND TO_NUMBER(TO_CHAR(IN_DATE, 'MM')) = 12
                        THEN TO_NUMBER(TO_CHAR(ADD_MONTHS(IN_DATE, 1), 'YYYY'))||'-'||TO_CHAR(IN_DATE, 'IW')
                        ELSE TO_CHAR(IN_DATE, 'YYYY')||'-'||TO_CHAR(IN_DATE, 'IW')
               END INTO V_ANS
        FROM DUAL;

--        PKLOG.INSERTLOG('FCGETWEEKYEAR('||IN_DATE||') = '||V_ANS,
--                                         'FUNCTION.FCGETWEEKYEAR',
--                                         'DEBUG', 'END');

        RETURN v_ans;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('Error on get week year: ('||IN_DATE||')',
                                     'FUNCTION.FCGETWEEKYEAR',
                                     'ERROR',
                                     'Error code = '||ERROR_CODE||
                                     ', error_msg = '||ERROR_MSG);
            RETURN NULL;

  END FCGETWEEKYEAR;



/
--------------------------------------------------------
--  DDL for Function FCNORMALIZEMSISDN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCNORMALIZEMSISDN" (IN_MSISDN IN MSISDN_WHITELIST.MSISDN%TYPE)
    RETURN MSISDN_WHITELIST.MSISDN%TYPE AS

    error_code NUMBER;
    ERROR_MSG  VARCHAR2 (300);
    TMP_MSISDN      MSISDN_WHITELIST.MSISDN%TYPE;
    BEGIN

--       PKLOG.INSERTLOG('('||IN_MSISDN||')',
--                       'PKUTILS.normalizeMsisdn', 'TRACE', 'START');

       -- CHECK INPUT PARAMETERS
       IF IN_MSISDN is null then
          raise_application_error(-20002,
                                  'NULL MANDATORY VARIABLE(IN_MSISDN)');
       END IF;

        IF SUBSTR(IN_MSISDN, 1, 1) = '+' THEN
            TMP_MSISDN := SUBSTR(IN_MSISDN, 2);
        ELSE
            TMP_MSISDN := IN_MSISDN;
        END IF;

        if SUBSTR(TMP_MSISDN, 1, 1) <> '0' then
            if SUBSTR(TMP_MSISDN, 1, 2) <> '39' 
                OR (SUBSTR(TMP_MSISDN, 1, 2) = '39' AND LENGTH(TMP_MSISDN) <= 10) THEN
                TMP_MSISDN := '39'||TMP_MSISDN;
            END IF;
        END IF;

--       PKLOG.INSERTLOG('('||IN_MSISDN||') = result='||TMP_MSISDN,
--                       'PKUTILS.normalizeMsisdn', 'TRACE', 'END');

      return TMP_MSISDN;

    END FCNORMALIZEMSISDN;
  -----------------------------------------------------

/
--------------------------------------------------------
--  DDL for Function FCREMOVECHARSFROMSTRING
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCREMOVECHARSFROMSTRING" (IN_STR VARCHAR2, IN_CHARS VARCHAR2)
    RETURN VARCHAR2 IS
    V_TMP_STR       VARCHAR2(4000) := NULL;
    ERROR_CODE      number;
    ERROR_MSG       varchar2(300);
    BEGIN

        PKLOG.INSERTLOG('FCREMOVECHARSFROMSTRING('||IN_STR||
                                       ', '||IN_CHARS||')',
                                         'FUNCTION.FCREMOVECHARSFROMSTRING',
                        'DEBUG', 'START');

        if IN_STR is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_STR is NULL!');
        ELSIF IN_CHARS is null then
            raise_application_error(-20002,
                                    'ERROR: PARAMETER IN_CHARS is NULL!');
        END IF;

        V_TMP_STR := IN_STR;

        FOR idx IN 1 .. LENGTH(IN_CHARS)
        LOOP
            select REPLACE(V_TMP_STR, 
                            SUBSTR(IN_CHARS, IDX, 1), 
                            '') INTO V_TMP_STR
            FROM DUAL;
        END LOOP;

        PKLOG.INSERTLOG('FCREMOVECHARSFROMSTRING('||IN_STR||
                                       ', '||IN_CHARS||') = '||V_TMP_STR,
                                         'FUNCTION.FCREMOVECHARSFROMSTRING',
                                         'DEBUG', 'END');

        RETURN V_TMP_STR;

    EXCEPTION
        WHEN OTHERS THEN
            error_code := SQLCODE;
            ERROR_MSG := SQLERRM;
            pkLog.insertLog('Error on get week year: ('||IN_STR||
                                                      ', '||IN_CHARS||')',
                                     'FUNCTION.FCREMOVECHARSFROMSTRING',
                                     'ERROR',
                                     'Error code = '||ERROR_CODE||
                                     ', error_msg = '||ERROR_MSG);
            RETURN NULL;

END FCREMOVECHARSFROMSTRING;



/
--------------------------------------------------------
--  DDL for Function FCSTRING_AGG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCSTRING_AGG" (p_input VARCHAR2)
RETURN VARCHAR2
PARALLEL_ENABLE AGGREGATE USING t_string_agg;



/
--------------------------------------------------------
--  DDL for Function FCTIMESTAMPDIFF
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "FCTIMESTAMPDIFF" (a timestamp, b timestamp) return number is 
begin
  return extract (day    from (a-b))*24*60*60 +
         extract (hour   from (a-b))*60*60+
         extract (minute from (a-b))*60+
         extract (second from (a-b));
END;

/
--------------------------------------------------------
--  DDL for Function TESTFUNC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TESTFUNC" (p1_in IN VARCHAR2, p2_in IN VARCHAR2) RETURN VARCHAR2 AS BEGIN RETURN p1_in || p2_in; END;

/
--------------------------------------------------------
--  Constraints for Table RADACCT_HISTORY
--------------------------------------------------------

  ALTER TABLE "RADACCT_HISTORY" ADD CONSTRAINT "PK_RADACCT_HISTORY_NEW" PRIMARY KEY ("ID_RADACT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADACCT_HISTORY_NEW" ON "RADACCT_HISTORY" ("ID_RADACT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("STARTTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("STOPTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("MONTH_ACCTSTARTTIME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY" MODIFY ("MOD_YEAR_ACCTSTARTTIME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYS_EXPORT_SCHEMA_02
--------------------------------------------------------

  ALTER TABLE "SYS_EXPORT_SCHEMA_02" ADD UNIQUE ("PROCESS_ORDER", "DUPLICATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TSET_CRYPTO
--------------------------------------------------------

  ALTER TABLE "TSET_CRYPTO" MODIFY ("ID_TS" NOT NULL ENABLE);
  ALTER TABLE "TSET_CRYPTO" MODIFY ("ID_CPP" NOT NULL ENABLE);
  ALTER TABLE "TSET_CRYPTO" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "TSET_CRYPTO" ADD CONSTRAINT "PK_TSET_CRYPTO" PRIMARY KEY ("ID_TS", "ID_CPP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CPROF_CRITERIA_PARAMS
--------------------------------------------------------

  ALTER TABLE "CPROF_CRITERIA_PARAMS" ADD CONSTRAINT "PK_CPROF_CRIT_PAR" PRIMARY KEY ("ID_CRITERIA", "PARAM_KEY")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CPROF_CRITERIA_PARAMS" ON "CPROF_CRITERIA_PARAMS" ("ID_CRITERIA", "PARAM_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CPROF_CRITERIA_PARAMS" MODIFY ("ID_CRITERIA" NOT NULL ENABLE);
  ALTER TABLE "CPROF_CRITERIA_PARAMS" MODIFY ("PARAM_KEY" NOT NULL ENABLE);
  ALTER TABLE "CPROF_CRITERIA_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "CPROF_CRITERIA_PARAMS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPN_DETAIL_POOL
--------------------------------------------------------

  ALTER TABLE "VPN_DETAIL_POOL" ADD CONSTRAINT "PK_VPN_DETAIL_POOL" PRIMARY KEY ("IP_ADDRESS")
  USING INDEX (CREATE UNIQUE INDEX "IDX_VPN_DETAIL_POOL" ON "VPN_DETAIL_POOL" ("IP_ADDRESS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "VPN_DETAIL_POOL" MODIFY ("ID_VSUBNET" NOT NULL ENABLE);
  ALTER TABLE "VPN_DETAIL_POOL" MODIFY ("IP_ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "VPN_DETAIL_POOL" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "VPN_DETAIL_POOL" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HISTORY_ENTITY_STAGING
--------------------------------------------------------

  ALTER TABLE "HISTORY_ENTITY_STAGING" ADD CONSTRAINT "PK_HIS_ENT_STAG" PRIMARY KEY ("ID_HE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_HISTORY_ENTITY_STAGING" ON "HISTORY_ENTITY_STAGING" ("ID_HE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "HISTORY_ENTITY_STAGING" MODIFY ("ID_HE" NOT NULL ENABLE);
  ALTER TABLE "HISTORY_ENTITY_STAGING" MODIFY ("ID_EVENT" NOT NULL ENABLE);
  ALTER TABLE "HISTORY_ENTITY_STAGING" MODIFY ("ENTITY" NOT NULL ENABLE);
  ALTER TABLE "HISTORY_ENTITY_STAGING" MODIFY ("KEY" NOT NULL ENABLE);
  ALTER TABLE "HISTORY_ENTITY_STAGING" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADACCT_TIDS
--------------------------------------------------------

  ALTER TABLE "RADACCT_TIDS" ADD CONSTRAINT "PK_RADACCT_TIDS" PRIMARY KEY ("ID_RADACT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADACCT_TIDS" ON "RADACCT_TIDS" ("ID_RADACT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADACCT_TIDS" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS" MODIFY ("MONTH_ACCTSTARTTIME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS" MODIFY ("ID_GGSN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PUBLIC_IP_DETAIL_HISTORY
--------------------------------------------------------

  ALTER TABLE "PUBLIC_IP_DETAIL_HISTORY" ADD CONSTRAINT "PK_PUBLIC_IP_DETAIL_HISTORY" PRIMARY KEY ("ID_HISTORY")
  USING INDEX (CREATE UNIQUE INDEX "IDX_PUBLIC_IP_DETAIL_HISTORY" ON "PUBLIC_IP_DETAIL_HISTORY" ("ID_HISTORY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "PUBLIC_IP_DETAIL_HISTORY" MODIFY ("ID_HISTORY" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_DETAIL_HISTORY" MODIFY ("IP_ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_DETAIL_HISTORY" MODIFY ("ALLOCATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GROUP_POOL_SUBNET_PRE
--------------------------------------------------------

  ALTER TABLE "GROUP_POOL_SUBNET_PRE" ADD CONSTRAINT "PK_GSUBNET_PRE" PRIMARY KEY ("ID_PRE_SUBNET")
  USING INDEX (CREATE UNIQUE INDEX "IDX_GSUBNET_PRE" ON "GROUP_POOL_SUBNET_PRE" ("ID_PRE_SUBNET") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" MODIFY ("ID_PRE_SUBNET" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" MODIFY ("IP_PREFIX" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" MODIFY ("NETMASK" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" MODIFY ("FIRST_IP" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" MODIFY ("LAST_IP" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" MODIFY ("POOL_SIZE" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" MODIFY ("FLAG_USED" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" MODIFY ("ID_SUB" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RAD_VPN_ACL
--------------------------------------------------------

  ALTER TABLE "RAD_VPN_ACL" ADD CONSTRAINT "PK_RAD_VPN_ACL" PRIMARY KEY ("ID_RAD_VPN_ACL")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RAD_VPN_ACL" ON "RAD_VPN_ACL" ("ID_RAD_VPN_ACL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RAD_VPN_ACL" MODIFY ("ID_RAD_VPN_ACL" NOT NULL ENABLE);
  ALTER TABLE "RAD_VPN_ACL" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "RAD_VPN_ACL" MODIFY ("SRC_ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RAD_VPN_ACL" MODIFY ("SRC_NETMASK" NOT NULL ENABLE);
  ALTER TABLE "RAD_VPN_ACL" MODIFY ("DST_ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RAD_VPN_ACL" MODIFY ("DST_NETMASK" NOT NULL ENABLE);
  ALTER TABLE "RAD_VPN_ACL" MODIFY ("PROTOCOL" NOT NULL ENABLE);
  ALTER TABLE "RAD_VPN_ACL" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "RAD_VPN_ACL" MODIFY ("ID_VPN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADACCT_RECOVERY
--------------------------------------------------------

  ALTER TABLE "RADACCT_RECOVERY" MODIFY ("CONN_CLOSED" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_RECOVERY" MODIFY ("ID_GGSN" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_RECOVERY" MODIFY ("CL_MOD_MSISDN" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_RECOVERY" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_RECOVERY" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_RECOVERY" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_RECOVERY" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_RECOVERY" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_RECOVERY" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_RECOVERY" MODIFY ("ID_GROUP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ACCOUNT_API_CREDENTIALS
--------------------------------------------------------

  ALTER TABLE "ACCOUNT_API_CREDENTIALS" ADD CONSTRAINT "UNIDX_ACC_API_CREDENTIALS" UNIQUE ("USERNAME")
  USING INDEX (CREATE UNIQUE INDEX "IDX_ACC_API_CREDENTIALS" ON "ACCOUNT_API_CREDENTIALS" ("USERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "ACCOUNT_API_CREDENTIALS" ADD CONSTRAINT "PK_ACCOUNT_API_CREDENTIALS" PRIMARY KEY ("ID_ACCOUNT", "USERNAME")
  USING INDEX (CREATE UNIQUE INDEX "IDX_ACCOUNT_API_CREDENTIALS" ON "ACCOUNT_API_CREDENTIALS" ("ID_ACCOUNT", "USERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "ACCOUNT_API_CREDENTIALS" MODIFY ("ID_ACCOUNT" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_API_CREDENTIALS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_API_CREDENTIALS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADIUS_DISCONNECTORS
--------------------------------------------------------

  ALTER TABLE "RADIUS_DISCONNECTORS" ADD CONSTRAINT "PK_RADIUS_DISCONNECTORS" PRIMARY KEY ("ID_RADDISC")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADIUS_DISCONNECTORS" ON "RADIUS_DISCONNECTORS" ("ID_RADDISC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADIUS_DISCONNECTORS" MODIFY ("ID_RADDISC" NOT NULL ENABLE);
  ALTER TABLE "RADIUS_DISCONNECTORS" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "RADIUS_DISCONNECTORS" MODIFY ("ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RADIUS_DISCONNECTORS" MODIFY ("PORT" NOT NULL ENABLE);
  ALTER TABLE "RADIUS_DISCONNECTORS" MODIFY ("PROTOCOL" NOT NULL ENABLE);
  ALTER TABLE "RADIUS_DISCONNECTORS" MODIFY ("ID_APN" NOT NULL ENABLE);
  ALTER TABLE "RADIUS_DISCONNECTORS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "RADIUS_DISCONNECTORS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPN_CONF_PARAMS
--------------------------------------------------------

  ALTER TABLE "VPN_CONF_PARAMS" ADD CONSTRAINT "PK_VPN_CONF_PARAMS" PRIMARY KEY ("ID_VPN", "ID_VPN_CONF", "PARAM")
  USING INDEX (CREATE UNIQUE INDEX "IDX_VPN_CONF_PARAMS" ON "VPN_CONF_PARAMS" ("ID_VPN", "ID_VPN_CONF", "PARAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "VPN_CONF_PARAMS" MODIFY ("ID_VPN" NOT NULL ENABLE);
  ALTER TABLE "VPN_CONF_PARAMS" MODIFY ("ID_VPN_CONF" NOT NULL ENABLE);
  ALTER TABLE "VPN_CONF_PARAMS" MODIFY ("PARAM" NOT NULL ENABLE);
  ALTER TABLE "VPN_CONF_PARAMS" MODIFY ("PARAM_VALUE" NOT NULL ENABLE);
  ALTER TABLE "VPN_CONF_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "VPN_CONF_PARAMS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CPROF_CRITERIA
--------------------------------------------------------

  ALTER TABLE "CPROF_CRITERIA" ADD CONSTRAINT "PK_CPROF_CRIT" PRIMARY KEY ("ID_CPROFILE", "ID_CRITERIA")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CPROF_CRITERIA" ON "CPROF_CRITERIA" ("ID_CPROFILE", "ID_CRITERIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CPROF_CRITERIA" MODIFY ("ID_CPROFILE" NOT NULL ENABLE);
  ALTER TABLE "CPROF_CRITERIA" MODIFY ("ID_CRITERIA" NOT NULL ENABLE);
  ALTER TABLE "CPROF_CRITERIA" MODIFY ("CTYPE" NOT NULL ENABLE);
  ALTER TABLE "CPROF_CRITERIA" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "CPROF_CRITERIA" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "CPROF_CRITERIA" MODIFY ("STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADACCT_TEST
--------------------------------------------------------

  ALTER TABLE "RADACCT_TEST" ADD CONSTRAINT "PK_RADACCT_TEST" PRIMARY KEY ("ID_RADACT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADACCT_TEST" ON "RADACCT_TEST" ("ID_RADACT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADACCT_TEST" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TEST" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TEST" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TEST" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TEST" MODIFY ("STARTTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TEST" MODIFY ("STOPTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TEST" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APNS_ALARMS
--------------------------------------------------------

  ALTER TABLE "APNS_ALARMS" ADD CONSTRAINT "PK_APNS_ALARMS" PRIMARY KEY ("ID_ALARM")
  USING INDEX (CREATE UNIQUE INDEX "IDX_APNS_ALARMS" ON "APNS_ALARMS" ("ID_ALARM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "APNS_ALARMS" MODIFY ("ID_ALARM" NOT NULL ENABLE);
  ALTER TABLE "APNS_ALARMS" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "APNS_ALARMS" MODIFY ("ACK_FLAG" NOT NULL ENABLE);
  ALTER TABLE "APNS_ALARMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "APNS_ALARMS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EVENT_HISTORY
--------------------------------------------------------

  ALTER TABLE "EVENT_HISTORY" ADD CONSTRAINT "PK_EVENT_HISTORY" PRIMARY KEY ("ID_EVENT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_EVENT_HISTORY" ON "EVENT_HISTORY" ("ID_EVENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "EVENT_HISTORY" MODIFY ("ID_EVENT" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY" MODIFY ("EVENT_TYPE" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY" MODIFY ("EVENT_LEVEL" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY" MODIFY ("MONTH_CRTDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table M2M_CONSOLE_USERS
--------------------------------------------------------

  ALTER TABLE "M2M_CONSOLE_USERS" ADD CONSTRAINT "PK_M2M_CONSOLE_USERS" PRIMARY KEY ("ID_USER")
  USING INDEX (CREATE UNIQUE INDEX "IDX_M2M_CONSOLE_USERS" ON "M2M_CONSOLE_USERS" ("ID_USER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "M2M_CONSOLE_USERS" MODIFY ("ID_USER" NOT NULL ENABLE);
  ALTER TABLE "M2M_CONSOLE_USERS" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "M2M_CONSOLE_USERS" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "M2M_CONSOLE_USERS" MODIFY ("ACTIVATED" NOT NULL ENABLE);
  ALTER TABLE "M2M_CONSOLE_USERS" MODIFY ("PROFILE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CRITERIA_TYPES
--------------------------------------------------------

  ALTER TABLE "CRITERIA_TYPES" ADD CONSTRAINT "PK_CRIT_TYPES" PRIMARY KEY ("CTYPE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CRITERIA_TYPES" ON "CRITERIA_TYPES" ("CTYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CRITERIA_TYPES" MODIFY ("CTYPE" NOT NULL ENABLE);
  ALTER TABLE "CRITERIA_TYPES" MODIFY ("DESCR" NOT NULL ENABLE);
  ALTER TABLE "CRITERIA_TYPES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ACCOUNT_PARAMS
--------------------------------------------------------

  ALTER TABLE "ACCOUNT_PARAMS" ADD CONSTRAINT "PK_ACCOUNT_PARAMS" PRIMARY KEY ("ID_ACCOUNT", "PARAM_KEY")
  USING INDEX (CREATE UNIQUE INDEX "IDX_ACCOUNT_PARAMS" ON "ACCOUNT_PARAMS" ("ID_ACCOUNT", "PARAM_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "ACCOUNT_PARAMS" MODIFY ("ID_ACCOUNT" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_PARAMS" MODIFY ("PARAM_KEY" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_PARAMS" MODIFY ("PARAM_VALUE" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_PARAMS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPNHOST_SUBNET_OC1
--------------------------------------------------------

  ALTER TABLE "VPNHOST_SUBNET_OC1" ADD CONSTRAINT "PK_VPNHOST_SUBNET_OC1" PRIMARY KEY ("OC1", "ID_APN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_VPNHOST_SUBNET_OC1" ON "VPNHOST_SUBNET_OC1" ("OC1", "ID_APN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "VPNHOST_SUBNET_OC1" MODIFY ("OC1" NOT NULL ENABLE);
  ALTER TABLE "VPNHOST_SUBNET_OC1" MODIFY ("ID_APN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LAST_RADACCT
--------------------------------------------------------

  ALTER TABLE "LAST_RADACCT" ADD CONSTRAINT "PK_LAST_RADACCT" PRIMARY KEY ("MSISDN")
  USING INDEX (CREATE INDEX "IDX_LAST_RADACCT" ON "LAST_RADACCT" ("MSISDN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "LAST_RADACCT" MODIFY ("MSISDN" NOT NULL ENABLE);
  ALTER TABLE "LAST_RADACCT" MODIFY ("CL_MOD_MSISDN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADACCT_TIDS_HISTORY_OLD
--------------------------------------------------------

  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" ADD CONSTRAINT "PK_RADACCT_TIDS_HISTORY" PRIMARY KEY ("ID_RADACT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADACCT_TIDS_HISTORY" ON "RADACCT_TIDS_HISTORY_OLD" ("ID_RADACT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" MODIFY ("STARTTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" MODIFY ("STOPTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY_OLD" MODIFY ("MONTH_ACCTSTARTTIME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PERIOD_LIST
--------------------------------------------------------

  ALTER TABLE "PERIOD_LIST" ADD CONSTRAINT "PK_PERIOD_LIST" PRIMARY KEY ("ID_PERIOD")
  USING INDEX (CREATE UNIQUE INDEX "IDX_PERIOD_LIST" ON "PERIOD_LIST" ("ID_PERIOD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "PERIOD_LIST" MODIFY ("ID_PERIOD" NOT NULL ENABLE);
  ALTER TABLE "PERIOD_LIST" MODIFY ("PERIOD_NAME" NOT NULL ENABLE);
  ALTER TABLE "PERIOD_LIST" MODIFY ("NUMDAYS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSISDN_FIXEDIP
--------------------------------------------------------

  ALTER TABLE "MSISDN_FIXEDIP" ADD CONSTRAINT "PK_MSISDN_FIXEDIP" PRIMARY KEY ("MSISDN", "ID_GSUBNET")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MSISDN_FIXEDIP" ON "MSISDN_FIXEDIP" ("MSISDN", "ID_GSUBNET") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MSISDN_FIXEDIP" MODIFY ("MSISDN" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_FIXEDIP" MODIFY ("ID_GSUBNET" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_FIXEDIP" MODIFY ("IPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_FIXEDIP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EVENT_HISTORY_STAGING
--------------------------------------------------------

  ALTER TABLE "EVENT_HISTORY_STAGING" ADD CONSTRAINT "PK_EVENT_HISTORY_STAGING" PRIMARY KEY ("ID_EVENT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_EVENT_HISTORY_STAGING" ON "EVENT_HISTORY_STAGING" ("ID_EVENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "EVENT_HISTORY_STAGING" MODIFY ("ID_EVENT" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY_STAGING" MODIFY ("EVENT_TYPE" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY_STAGING" MODIFY ("EVENT_LEVEL" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY_STAGING" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY_STAGING" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLIENT_REPORT_PARAMS
--------------------------------------------------------

  ALTER TABLE "CLIENT_REPORT_PARAMS" ADD CONSTRAINT "PK_CLIENT_REPORT_PARAMS" PRIMARY KEY ("ID_CLIENT", "ID_REQUEST", "ID_PARAM")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CLIENT_REPORT_PARAMS" ON "CLIENT_REPORT_PARAMS" ("ID_CLIENT", "ID_REQUEST", "ID_PARAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CLIENT_REPORT_PARAMS" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_REPORT_PARAMS" MODIFY ("ID_REQUEST" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_REPORT_PARAMS" MODIFY ("ID_PARAM" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_REPORT_PARAMS" MODIFY ("PARAM" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_REPORT_PARAMS" MODIFY ("PARAM_VALUE" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_REPORT_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RETRIEVE_MSISDN_TMP
--------------------------------------------------------

  ALTER TABLE "RETRIEVE_MSISDN_TMP" MODIFY ("MSISDN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIREWALL_REQUESTS
--------------------------------------------------------

  ALTER TABLE "FIREWALL_REQUESTS" ADD CONSTRAINT "PK_FIREWALL_REQUESTS" PRIMARY KEY ("ID_FW_REQ")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FIREWALL_REQUESTS" ON "FIREWALL_REQUESTS" ("ID_FW_REQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FIREWALL_REQUESTS" MODIFY ("ID_FW_REQ" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_REQUESTS" MODIFY ("STATUS" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_REQUESTS" MODIFY ("ID_REQUEST" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_REQUESTS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_REQUESTS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MCC_LIST
--------------------------------------------------------

  ALTER TABLE "MCC_LIST" ADD CONSTRAINT "PK_MCC_LIST" PRIMARY KEY ("MCC")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MCC_LIST" ON "MCC_LIST" ("MCC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MCC_LIST" MODIFY ("MCC" NOT NULL ENABLE);
  ALTER TABLE "MCC_LIST" MODIFY ("COUNTRY" NOT NULL ENABLE);
  ALTER TABLE "MCC_LIST" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MCC_LIST" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RESERVED_VPN_SEQNUM
--------------------------------------------------------

  ALTER TABLE "RESERVED_VPN_SEQNUM" ADD CONSTRAINT "PK_RESERVED_VPN_SEQNUM" PRIMARY KEY ("ID_CM", "SEQ_NUM")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RESERVED_VPN_SEQNUM" ON "RESERVED_VPN_SEQNUM" ("ID_CM", "SEQ_NUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RESERVED_VPN_SEQNUM" MODIFY ("ID_CM" NOT NULL ENABLE);
  ALTER TABLE "RESERVED_VPN_SEQNUM" MODIFY ("SEQ_NUM" NOT NULL ENABLE);
  ALTER TABLE "RESERVED_VPN_SEQNUM" MODIFY ("FLAG_VALID" NOT NULL ENABLE);
  ALTER TABLE "RESERVED_VPN_SEQNUM" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "RESERVED_VPN_SEQNUM" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PUBLIC_IP_CLIENT_LIST
--------------------------------------------------------

  ALTER TABLE "PUBLIC_IP_CLIENT_LIST" ADD CONSTRAINT "PK_PUBLIC_IP_CLIENT_LIST" PRIMARY KEY ("ID_CLIENT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_PUBLIC_IP_CLIENT_LIST" ON "PUBLIC_IP_CLIENT_LIST" ("ID_CLIENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "PUBLIC_IP_CLIENT_LIST" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_CLIENT_LIST" MODIFY ("IP_ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_CLIENT_LIST" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_CLIENT_LIST" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPN_ACCESS_PARAMS
--------------------------------------------------------

  ALTER TABLE "VPN_ACCESS_PARAMS" ADD CONSTRAINT "PK_VPN_ACCESS_PARAMS" PRIMARY KEY ("ID_VPN", "PARAM")
  USING INDEX (CREATE UNIQUE INDEX "IDX_VPN_ACCESS_PARAMS" ON "VPN_ACCESS_PARAMS" ("ID_VPN", "PARAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "VPN_ACCESS_PARAMS" MODIFY ("ID_VPN" NOT NULL ENABLE);
  ALTER TABLE "VPN_ACCESS_PARAMS" MODIFY ("PARAM" NOT NULL ENABLE);
  ALTER TABLE "VPN_ACCESS_PARAMS" MODIFY ("PARAM_VALUE" NOT NULL ENABLE);
  ALTER TABLE "VPN_ACCESS_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "VPN_ACCESS_PARAMS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TESTUPDATE
--------------------------------------------------------

  ALTER TABLE "TESTUPDATE" MODIFY ("CHIAVE" NOT NULL ENABLE);
  ALTER TABLE "TESTUPDATE" ADD CONSTRAINT "TESTUPDATE_PK" PRIMARY KEY ("CHIAVE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LAST_CONNECTION
--------------------------------------------------------

  ALTER TABLE "LAST_CONNECTION" ADD CONSTRAINT "PK_LAST_CONNECTION" PRIMARY KEY ("CALLINGSTATIONID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_LAST_CONNECTION" ON "LAST_CONNECTION" ("CALLINGSTATIONID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "LAST_CONNECTION" MODIFY ("CALLINGSTATIONID" NOT NULL ENABLE);
  ALTER TABLE "LAST_CONNECTION" MODIFY ("ID_RADACT" NOT NULL ENABLE);
  ALTER TABLE "LAST_CONNECTION" MODIFY ("LAST_ID_GROUP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FW_PROFILES
--------------------------------------------------------

  ALTER TABLE "FW_PROFILES" ADD CONSTRAINT "PK_FW_PROFILES" PRIMARY KEY ("ID_FW_PROFILE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FW_PROFILES" ON "FW_PROFILES" ("ID_FW_PROFILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FW_PROFILES" MODIFY ("ID_FW_PROFILE" NOT NULL ENABLE);
  ALTER TABLE "FW_PROFILES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "FW_PROFILES" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "FW_PROFILES" MODIFY ("USED_COUNTER" NOT NULL ENABLE);
  ALTER TABLE "FW_PROFILES" MODIFY ("SYSTEM_FLAG" NOT NULL ENABLE);
  ALTER TABLE "FW_PROFILES" MODIFY ("STATUS" NOT NULL ENABLE);
  ALTER TABLE "FW_PROFILES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "FW_PROFILES" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "FW_PROFILES" MODIFY ("IGNORE_RP_IDLE" NOT NULL ENABLE);
  ALTER TABLE "FW_PROFILES" MODIFY ("PROF_TYPE" NOT NULL ENABLE);
  ALTER TABLE "FW_PROFILES" ADD CONSTRAINT "CHECK_PROF_TYPE" CHECK ("PROF_TYPE" IN ('PROFILE_NAT' , 'PROFILE_PUBLIC')) ENABLE;
--------------------------------------------------------
--  Constraints for Table REQUEST_TYPES
--------------------------------------------------------

  ALTER TABLE "REQUEST_TYPES" ADD CONSTRAINT "PK_REQUEST_TYPES" PRIMARY KEY ("TYPE_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_REQUEST_TYPES" ON "REQUEST_TYPES" ("TYPE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "REQUEST_TYPES" MODIFY ("TYPE_CODE" NOT NULL ENABLE);
  ALTER TABLE "REQUEST_TYPES" MODIFY ("DESCR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HISTORY_ENTITY
--------------------------------------------------------

  ALTER TABLE "HISTORY_ENTITY" ADD CONSTRAINT "PK_HIS_ENT" PRIMARY KEY ("ID_HE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_HISTORY_ENTITY" ON "HISTORY_ENTITY" ("ID_HE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "HISTORY_ENTITY" MODIFY ("ID_HE" NOT NULL ENABLE);
  ALTER TABLE "HISTORY_ENTITY" MODIFY ("ID_EVENT" NOT NULL ENABLE);
  ALTER TABLE "HISTORY_ENTITY" MODIFY ("ENTITY" NOT NULL ENABLE);
  ALTER TABLE "HISTORY_ENTITY" MODIFY ("KEY" NOT NULL ENABLE);
  ALTER TABLE "HISTORY_ENTITY" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table THRESHOLD_DETAILS
--------------------------------------------------------

  ALTER TABLE "THRESHOLD_DETAILS" ADD CONSTRAINT "PK_THRESHOLD_DET" PRIMARY KEY ("ID_THD", "ID_THRESHOLD", "ID_AREA", "ID_PERIOD")
  USING INDEX (CREATE UNIQUE INDEX "IDX_THRESHOLD_DETAILS" ON "THRESHOLD_DETAILS" ("ID_THD", "ID_THRESHOLD", "ID_AREA", "ID_PERIOD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "THRESHOLD_DETAILS" MODIFY ("ID_THD" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD_DETAILS" MODIFY ("ID_AREA" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD_DETAILS" MODIFY ("ID_THRESHOLD" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD_DETAILS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD_DETAILS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD_DETAILS" MODIFY ("TH_VALUE" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD_DETAILS" MODIFY ("ID_PERIOD" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD_DETAILS" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ACL_DEVICE_ROUTE
--------------------------------------------------------

  ALTER TABLE "ACL_DEVICE_ROUTE" MODIFY ("ID_ACL" NOT NULL ENABLE);
  ALTER TABLE "ACL_DEVICE_ROUTE" MODIFY ("ID_DEV_ROUTE" NOT NULL ENABLE);
  ALTER TABLE "ACL_DEVICE_ROUTE" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "ACL_DEVICE_ROUTE" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "ACL_DEVICE_ROUTE" ADD CONSTRAINT "PK_ACL_DEVICE_ROUTE" PRIMARY KEY ("ID_ACL", "ID_DEV_ROUTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MD_APPLICATIONS
--------------------------------------------------------

  ALTER TABLE "MD_APPLICATIONS" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONS" MODIFY ("PROJECT_ID_FK" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONS" MODIFY ("SECURITY_GROUP_ID" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONS" ADD CONSTRAINT "MD_APPLICATIONS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PROFILE_STATUS
--------------------------------------------------------

  ALTER TABLE "PROFILE_STATUS" ADD CONSTRAINT "PK_PROFILE_STATUS" PRIMARY KEY ("STATUS_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_PROFILE_STATUS" ON "PROFILE_STATUS" ("STATUS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "PROFILE_STATUS" MODIFY ("STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "PROFILE_STATUS" MODIFY ("DESCR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SERVICE_CONNECTIONS
--------------------------------------------------------

  ALTER TABLE "SERVICE_CONNECTIONS" ADD CONSTRAINT "PK_SERVICE_CONNECTIONS" PRIMARY KEY ("ID_SC")
  USING INDEX (CREATE UNIQUE INDEX "IDX_SERVICE_CONNECTIONS" ON "SERVICE_CONNECTIONS" ("ID_SC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "SERVICE_CONNECTIONS" MODIFY ("ID_SC" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYS_EXPORT_SCHEMA_07
--------------------------------------------------------

  ALTER TABLE "SYS_EXPORT_SCHEMA_07" ADD UNIQUE ("PROCESS_ORDER", "DUPLICATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MAIN_POOL_SUBNET
--------------------------------------------------------

  ALTER TABLE "MAIN_POOL_SUBNET" ADD CONSTRAINT "PK_MAIN_POOL_SUBNET" PRIMARY KEY ("ID_SUB")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MAIN_POOL_SUBNET" ON "MAIN_POOL_SUBNET" ("ID_SUB") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MAIN_POOL_SUBNET" MODIFY ("START_IP" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_SUBNET" MODIFY ("STOP_IP" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_SUBNET" MODIFY ("ID_SUB" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_SUBNET" MODIFY ("IP_PREFIX" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_SUBNET" MODIFY ("NETMASK" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_SUBNET" MODIFY ("POOL_SIZE" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_SUBNET" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_SUBNET" MODIFY ("TO_NAT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APN_ACCOUNT_MAP
--------------------------------------------------------

  ALTER TABLE "APN_ACCOUNT_MAP" ADD CONSTRAINT "PK_APN_ACCOUNT_MAP" PRIMARY KEY ("ID_ACCOUNT", "ID_APN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_APN_ACCOUNT_MAP" ON "APN_ACCOUNT_MAP" ("ID_ACCOUNT", "ID_APN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "APN_ACCOUNT_MAP" MODIFY ("ID_ACCOUNT" NOT NULL ENABLE);
  ALTER TABLE "APN_ACCOUNT_MAP" MODIFY ("ID_APN" NOT NULL ENABLE);
  ALTER TABLE "APN_ACCOUNT_MAP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICE_INTERFACES
--------------------------------------------------------

  ALTER TABLE "DEVICE_INTERFACES" ADD CONSTRAINT "PK_DEVICE_INTERFACES" PRIMARY KEY ("ID_INTERFACE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_DEVICE_INTERFACES" ON "DEVICE_INTERFACES" ("ID_INTERFACE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "DEVICE_INTERFACES" MODIFY ("ID_INTERFACE" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_INTERFACES" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_INTERFACES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_INTERFACES" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_INTERFACES" MODIFY ("FLAG_IKE1" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_INTERFACES" MODIFY ("FLAG_IKE2" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_INTERFACES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_INTERFACES" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_INTERFACES" MODIFY ("FLAG_MGMT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TUNNEL_GROUP
--------------------------------------------------------

  ALTER TABLE "TUNNEL_GROUP" ADD CONSTRAINT "PK_TUNNEL_GROUP" PRIMARY KEY ("ID_TG")
  USING INDEX (CREATE UNIQUE INDEX "IDX_TUNNEL_GROUP" ON "TUNNEL_GROUP" ("ID_TG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "TUNNEL_GROUP" MODIFY ("ID_TG" NOT NULL ENABLE);
  ALTER TABLE "TUNNEL_GROUP" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "TUNNEL_GROUP" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "TUNNEL_GROUP" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "TUNNEL_GROUP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "TUNNEL_GROUP" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "TUNNEL_GROUP" ADD CONSTRAINT "CK_" CHECK (IPSEC_TYPE IN ('IKEV1', 'IKEV2', 'SSL')) ENABLE;
--------------------------------------------------------
--  Constraints for Table PHONE_INFO
--------------------------------------------------------

  ALTER TABLE "PHONE_INFO" ADD CONSTRAINT "PK_PHONE_INFO" PRIMARY KEY ("MSISDN", "IMEI")
  USING INDEX (CREATE UNIQUE INDEX "IDX_PHONE_INFO" ON "PHONE_INFO" ("MSISDN", "IMEI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "PHONE_INFO" MODIFY ("MSISDN" NOT NULL ENABLE);
  ALTER TABLE "PHONE_INFO" MODIFY ("IMEI" NOT NULL ENABLE);
  ALTER TABLE "PHONE_INFO" MODIFY ("MODEL_PHONE" NOT NULL ENABLE);
  ALTER TABLE "PHONE_INFO" MODIFY ("BRAND_PHONE" NOT NULL ENABLE);
  ALTER TABLE "PHONE_INFO" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TRANSFORM_SET
--------------------------------------------------------

  ALTER TABLE "TRANSFORM_SET" ADD CONSTRAINT "PK_TRANSFORM_SET" PRIMARY KEY ("ID_TS")
  USING INDEX (CREATE UNIQUE INDEX "IDX_TRANSFORM_SET" ON "TRANSFORM_SET" ("ID_TS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "TRANSFORM_SET" MODIFY ("ID_TS" NOT NULL ENABLE);
  ALTER TABLE "TRANSFORM_SET" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "TRANSFORM_SET" MODIFY ("TYPE_IKE" NOT NULL ENABLE);
  ALTER TABLE "TRANSFORM_SET" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "TRANSFORM_SET" MODIFY ("VALUE_CRYPTO" NOT NULL ENABLE);
  ALTER TABLE "TRANSFORM_SET" MODIFY ("VALUE_HASH" NOT NULL ENABLE);
  ALTER TABLE "TRANSFORM_SET" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "TRANSFORM_SET" MODIFY ("IPSEC_MODE" NOT NULL ENABLE);
  ALTER TABLE "TRANSFORM_SET" ADD CONSTRAINT "CK_TRNSET_01" CHECK (IPSEC_MODE = 'TRANSPORT' OR IPSEC_MODE = 'TUNNEL') ENABLE;
--------------------------------------------------------
--  Constraints for Table SYS_EXPORT_SCHEMA_03
--------------------------------------------------------

  ALTER TABLE "SYS_EXPORT_SCHEMA_03" ADD UNIQUE ("PROCESS_ORDER", "DUPLICATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MOBILE_SUBNET_OC1
--------------------------------------------------------

  ALTER TABLE "MOBILE_SUBNET_OC1" ADD CONSTRAINT "PK_MOBILE_SUBNET_OC1" PRIMARY KEY ("OC1", "ID_GGSN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MOBILE_SUBNET_OC1" ON "MOBILE_SUBNET_OC1" ("OC1", "ID_GGSN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MOBILE_SUBNET_OC1" MODIFY ("OC1" NOT NULL ENABLE);
  ALTER TABLE "MOBILE_SUBNET_OC1" MODIFY ("ID_GGSN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TESTCRUD_2
--------------------------------------------------------

  ALTER TABLE "TESTCRUD_2" ADD CONSTRAINT "PK_TC_2" PRIMARY KEY ("THREAD", "OPER", "PROGR", "THREAD3", "OPER3", "PROGR3")
  USING INDEX (CREATE UNIQUE INDEX "IDX_TC2" ON "TESTCRUD_2" ("THREAD", "OPER", "PROGR", "THREAD3", "OPER3", "PROGR3") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
--------------------------------------------------------
--  Constraints for Table FIREWALL_CATEGORIES
--------------------------------------------------------

  ALTER TABLE "FIREWALL_CATEGORIES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_CATEGORIES" ADD CONSTRAINT "PK_FW_CAT" PRIMARY KEY ("CAT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TESTCRUD_3
--------------------------------------------------------

  ALTER TABLE "TESTCRUD_3" ADD CONSTRAINT "PK_TC_3" PRIMARY KEY ("THREAD3", "OPER3", "PROGR3")
  USING INDEX (CREATE UNIQUE INDEX "IDX_TC3" ON "TESTCRUD_3" ("THREAD3", "OPER3", "PROGR3") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
--------------------------------------------------------
--  Constraints for Table RADACCT_HISTORY_OLD
--------------------------------------------------------

  ALTER TABLE "RADACCT_HISTORY_OLD" ADD CONSTRAINT "PK_RADACCT_HISTORY" PRIMARY KEY ("ID_RADACT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADACCT_HISTORY" ON "RADACCT_HISTORY_OLD" ("ID_RADACT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADACCT_HISTORY_OLD" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY_OLD" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY_OLD" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY_OLD" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY_OLD" MODIFY ("STARTTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY_OLD" MODIFY ("STOPTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY_OLD" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY_OLD" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY_OLD" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_HISTORY_OLD" MODIFY ("MONTH_ACCTSTARTTIME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OBJ_PROPERTIES
--------------------------------------------------------

  ALTER TABLE "OBJ_PROPERTIES" ADD CONSTRAINT "PK_OBJ_PROPERTIES" PRIMARY KEY ("ID_PROPERTY")
  USING INDEX (CREATE UNIQUE INDEX "IDX_OBJ_PROPERTIES" ON "OBJ_PROPERTIES" ("ID_PROPERTY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "OBJ_PROPERTIES" MODIFY ("ID_PROPERTY" NOT NULL ENABLE);
  ALTER TABLE "OBJ_PROPERTIES" MODIFY ("ID_OBJECT" NOT NULL ENABLE);
  ALTER TABLE "OBJ_PROPERTIES" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "OBJ_PROPERTIES" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "OBJ_PROPERTIES" MODIFY ("KEY" NOT NULL ENABLE);
  ALTER TABLE "OBJ_PROPERTIES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "OBJ_PROPERTIES" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REALMGROUP
--------------------------------------------------------

  ALTER TABLE "REALMGROUP" ADD CONSTRAINT "UQ_REALMGROUP" UNIQUE ("REALMNAME")
  USING INDEX (CREATE UNIQUE INDEX "IDX_UQ_REALMGROUP" ON "REALMGROUP" ("REALMNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "REALMGROUP" ADD CONSTRAINT "PK_REALMGROUP" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_REALMGROUP" ON "REALMGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "REALMGROUP" MODIFY ("REALMNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICE_ROUTES
--------------------------------------------------------

  ALTER TABLE "DEVICE_ROUTES" ADD CONSTRAINT "PK_DEVICE_ROUTES" PRIMARY KEY ("ID_DEV_ROUTE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_DEVICE_ROUTES" ON "DEVICE_ROUTES" ("ID_DEV_ROUTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "DEVICE_ROUTES" MODIFY ("ID_DEV_ROUTE" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_ROUTES" MODIFY ("ID_FROM" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_ROUTES" MODIFY ("TYPE_FROM" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_ROUTES" MODIFY ("FLAG_GW" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_ROUTES" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_ROUTES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_ROUTES" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EVENT_HISTORY_SAVE
--------------------------------------------------------

  ALTER TABLE "EVENT_HISTORY_SAVE" MODIFY ("ID_EVENT" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY_SAVE" MODIFY ("EVENT_TYPE" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY_SAVE" MODIFY ("EVENT_LEVEL" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY_SAVE" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY_SAVE" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY_SAVE" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "EVENT_HISTORY_SAVE" MODIFY ("MONTH_CRTDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FW_PROTOCOLS
--------------------------------------------------------

  ALTER TABLE "FW_PROTOCOLS" ADD CONSTRAINT "PK_FW_PROTOCOLS" PRIMARY KEY ("NAME")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FW_PROTOCOLS" ON "FW_PROTOCOLS" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
--------------------------------------------------------
--  Constraints for Table FWPROF_RPROF_MAP
--------------------------------------------------------

  ALTER TABLE "FWPROF_RPROF_MAP" ADD CONSTRAINT "PK_FWPROF_RPROF_MAP" PRIMARY KEY ("ID_FW_PROFILE", "ID_RULE_PROFILE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FWPROF_RPROF_MAP" ON "FWPROF_RPROF_MAP" ("ID_FW_PROFILE", "ID_RULE_PROFILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FWPROF_RPROF_MAP" MODIFY ("ID_FW_PROFILE" NOT NULL ENABLE);
  ALTER TABLE "FWPROF_RPROF_MAP" MODIFY ("ID_RULE_PROFILE" NOT NULL ENABLE);
  ALTER TABLE "FWPROF_RPROF_MAP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RULE_PROFILE_STATUS
--------------------------------------------------------

  ALTER TABLE "RULE_PROFILE_STATUS" ADD CONSTRAINT "PK_RULE_PROFILE_STATUS" PRIMARY KEY ("RP_STATUS_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RULE_PROFILE_STATUS" ON "RULE_PROFILE_STATUS" ("RP_STATUS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RULE_PROFILE_STATUS" MODIFY ("RP_STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "RULE_PROFILE_STATUS" MODIFY ("DESCR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ACL_DEV_ROUTE_TYPES
--------------------------------------------------------

  ALTER TABLE "ACL_DEV_ROUTE_TYPES" ADD CONSTRAINT "PK_ACL_DEV_ROUTE_TYPES" PRIMARY KEY ("TYPE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_ACL_DEV_ROUTE_TYPES" ON "ACL_DEV_ROUTE_TYPES" ("TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "ACL_DEV_ROUTE_TYPES" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GGSN_TRAFFIC_PEAK
--------------------------------------------------------

  ALTER TABLE "GGSN_TRAFFIC_PEAK" ADD CONSTRAINT "PK_GGSN_TRAFFIC_PEAK" PRIMARY KEY ("ID_GGSN_TP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_GGSN_TRAFFIC_PEAK" ON "GGSN_TRAFFIC_PEAK" ("ID_GGSN_TP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "GGSN_TRAFFIC_PEAK" MODIFY ("ID_GGSN_TP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYS_EXPORT_SCHEMA_04
--------------------------------------------------------

  ALTER TABLE "SYS_EXPORT_SCHEMA_04" ADD UNIQUE ("PROCESS_ORDER", "DUPLICATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table IPSEC_P1
--------------------------------------------------------

  ALTER TABLE "IPSEC_P1" ADD CONSTRAINT "PK_IPSEC_P1" PRIMARY KEY ("ID_IPSEC")
  USING INDEX (CREATE UNIQUE INDEX "IDX_IPSEC_P1" ON "IPSEC_P1" ("ID_IPSEC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "IPSEC_P1" MODIFY ("ID_IPSEC" NOT NULL ENABLE);
  ALTER TABLE "IPSEC_P1" MODIFY ("SEQ_NUM" NOT NULL ENABLE);
  ALTER TABLE "IPSEC_P1" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "IPSEC_P1" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "IPSEC_P1" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "IPSEC_P1" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYS_EXPORT_SCHEMA_01
--------------------------------------------------------

  ALTER TABLE "SYS_EXPORT_SCHEMA_01" ADD UNIQUE ("PROCESS_ORDER", "DUPLICATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MSISDN_THR_MAP
--------------------------------------------------------

  ALTER TABLE "MSISDN_THR_MAP" ADD CONSTRAINT "PK_MSISDN_THR_MAP" PRIMARY KEY ("MSISDN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MSISDN_THR_MAP" ON "MSISDN_THR_MAP" ("MSISDN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MSISDN_THR_MAP" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THR_MAP" MODIFY ("MSISDN" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THR_MAP" MODIFY ("ID_THRESHOLD" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THR_MAP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADACCT_ONLINE
--------------------------------------------------------

  ALTER TABLE "RADACCT_ONLINE" ADD CONSTRAINT "UK_RAO_ACCTSESSIONID" UNIQUE ("ID_GGSN", "CALLINGSTATIONID", "ACCTSESSIONID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RAO_ACCTSESSIONID" ON "RADACCT_ONLINE" ("ID_GGSN", "CALLINGSTATIONID", "ACCTSESSIONID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADACCT_ONLINE" ADD CONSTRAINT "PK_RADACCT_ONLINE" PRIMARY KEY ("ID_RADACT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADACCT_ONLINE" ON "RADACCT_ONLINE" ("ID_RADACT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADACCT_ONLINE" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_ONLINE" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_ONLINE" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_ONLINE" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_ONLINE" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_ONLINE" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_ONLINE" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_ONLINE" MODIFY ("MONTH_ACCTSTARTTIME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_ONLINE" MODIFY ("CONN_CLOSED" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_ONLINE" MODIFY ("ID_GGSN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSISDN_FIXEDIP_SHADOW
--------------------------------------------------------

  ALTER TABLE "MSISDN_FIXEDIP_SHADOW" MODIFY ("MSISDN" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_FIXEDIP_SHADOW" MODIFY ("ID_GSUBNET" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_FIXEDIP_SHADOW" MODIFY ("IPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_FIXEDIP_SHADOW" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_FIXEDIP_SHADOW" ADD CONSTRAINT "IDX_MSISDN_FIXEDIP_SHADOW" PRIMARY KEY ("MSISDN", "ID_GSUBNET")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USER_FUNCTIONS_PARAMS
--------------------------------------------------------

  ALTER TABLE "USER_FUNCTIONS_PARAMS" ADD CONSTRAINT "PK_USR_FUNCT_PAR" PRIMARY KEY ("USERNAME", "ID_FUNCTION", "PARAM_KEY")
  USING INDEX (CREATE UNIQUE INDEX "IDX_USR_FUNCT_PAR" ON "USER_FUNCTIONS_PARAMS" ("USERNAME", "ID_FUNCTION", "PARAM_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "USER_FUNCTIONS_PARAMS" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "USER_FUNCTIONS_PARAMS" MODIFY ("ID_FUNCTION" NOT NULL ENABLE);
  ALTER TABLE "USER_FUNCTIONS_PARAMS" MODIFY ("PARAM_KEY" NOT NULL ENABLE);
  ALTER TABLE "USER_FUNCTIONS_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIREWALL_CAT_GROUPS
--------------------------------------------------------

  ALTER TABLE "FIREWALL_CAT_GROUPS" MODIFY ("CAT_GROUP_NAME" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_CAT_GROUPS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_CAT_GROUPS" ADD CONSTRAINT "PK_FW_CAT_GRP" PRIMARY KEY ("CAT_GROUP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table FIREWALL_REQ_STATUS
--------------------------------------------------------

  ALTER TABLE "FIREWALL_REQ_STATUS" ADD CONSTRAINT "PK_FIREWALL_REQ_STATUS" PRIMARY KEY ("FW_STATUS_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FIREWALL_REQ_STATUS" ON "FIREWALL_REQ_STATUS" ("FW_STATUS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FIREWALL_REQ_STATUS" MODIFY ("FW_STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_REQ_STATUS" MODIFY ("DESCR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table WRK_RADPOSTAUTH
--------------------------------------------------------

  ALTER TABLE "WRK_RADPOSTAUTH" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "WRK_RADPOSTAUTH" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "WRK_RADPOSTAUTH" MODIFY ("REPLY" NOT NULL ENABLE);
  ALTER TABLE "WRK_RADPOSTAUTH" MODIFY ("AUTHDATE" NOT NULL ENABLE);
  ALTER TABLE "WRK_RADPOSTAUTH" MODIFY ("MSISDN" NOT NULL ENABLE);
  ALTER TABLE "WRK_RADPOSTAUTH" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GGSN_NODE
--------------------------------------------------------

  ALTER TABLE "GGSN_NODE" ADD CONSTRAINT "PK_GGSN_NODE" PRIMARY KEY ("ID_GGSN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_GGSN_NODE" ON "GGSN_NODE" ("ID_GGSN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "GGSN_NODE" MODIFY ("ID_GGSN" NOT NULL ENABLE);
  ALTER TABLE "GGSN_NODE" MODIFY ("ID_APN" NOT NULL ENABLE);
  ALTER TABLE "GGSN_NODE" MODIFY ("GGSN_NAME" NOT NULL ENABLE);
  ALTER TABLE "GGSN_NODE" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "GGSN_NODE" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "GGSN_NODE" MODIFY ("FLAG_VALID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIREWALL_MAN_PARAMS
--------------------------------------------------------

  ALTER TABLE "FIREWALL_MAN_PARAMS" ADD CONSTRAINT "PK_FIREWALL_MAN_PARAMS" PRIMARY KEY ("ID_FW_REQ", "ID_PARAM")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FIREWALL_MAN_PARAMS" ON "FIREWALL_MAN_PARAMS" ("ID_FW_REQ", "ID_PARAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FIREWALL_MAN_PARAMS" MODIFY ("ID_FW_REQ" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_MAN_PARAMS" MODIFY ("ID_PARAM" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_MAN_PARAMS" MODIFY ("PARAM" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_MAN_PARAMS" MODIFY ("PARAM_VALUE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_MAN_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MCC_MNC_TABLE
--------------------------------------------------------

  ALTER TABLE "MCC_MNC_TABLE" ADD CONSTRAINT "PK_MCC_MNC_TABLE" PRIMARY KEY ("MCC", "MNC")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MCC_MNC_TABLE" ON "MCC_MNC_TABLE" ("MCC", "MNC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
--------------------------------------------------------
--  Constraints for Table CLIENT_PROFILES
--------------------------------------------------------

  ALTER TABLE "CLIENT_PROFILES" ADD CONSTRAINT "PK_CLNT_PRF" PRIMARY KEY ("ID_CPROFILE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CLIENT_PROFILES" ON "CLIENT_PROFILES" ("ID_CPROFILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CLIENT_PROFILES" MODIFY ("ID_CPROFILE" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_PROFILES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_PROFILES" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_PROFILES" MODIFY ("USED_COUNTER" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_PROFILES" MODIFY ("SYSTEM_FLAG" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_PROFILES" MODIFY ("STATUS" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_PROFILES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_PROFILES" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GROUP_POLICY
--------------------------------------------------------

  ALTER TABLE "GROUP_POLICY" ADD CONSTRAINT "PK_SEQ_GROUP_POLICY" PRIMARY KEY ("ID_GP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_GROUP_POLICY" ON "GROUP_POLICY" ("ID_GP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "GROUP_POLICY" MODIFY ("ID_GP" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POLICY" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POLICY" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POLICY" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POLICY" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POLICY" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADCHECK
--------------------------------------------------------

  ALTER TABLE "RADCHECK" ADD CONSTRAINT "PK_RADCHECK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADCHECK" ON "RADCHECK" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADCHECK" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADCHECK" MODIFY ("OP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APN_PARAMS
--------------------------------------------------------

  ALTER TABLE "APN_PARAMS" ADD CONSTRAINT "PK_APN_PARAMS" PRIMARY KEY ("ID_APN", "PARAM_KEY")
  USING INDEX (CREATE UNIQUE INDEX "IDX_APN_PARAMS" ON "APN_PARAMS" ("ID_APN", "PARAM_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "APN_PARAMS" MODIFY ("ID_APN" NOT NULL ENABLE);
  ALTER TABLE "APN_PARAMS" MODIFY ("PARAM_KEY" NOT NULL ENABLE);
  ALTER TABLE "APN_PARAMS" MODIFY ("PARAM_VALUE" NOT NULL ENABLE);
  ALTER TABLE "APN_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "APN_PARAMS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MASTER_DATA_VPN_PRE
--------------------------------------------------------

  ALTER TABLE "MASTER_DATA_VPN_PRE" ADD CONSTRAINT "PK_MASTER_DATA_VPN_PRE" PRIMARY KEY ("ID_PRE_VPN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MASTER_DATA_VPN_PRE" ON "MASTER_DATA_VPN_PRE" ("ID_PRE_VPN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MASTER_DATA_VPN_PRE" MODIFY ("ID_PRE_VPN" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN_PRE" MODIFY ("REFERENT" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN_PRE" MODIFY ("REFERENT_PHONE1" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN_PRE" MODIFY ("STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN_PRE" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN_PRE" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CRYPTO_POLICY_P2
--------------------------------------------------------

  ALTER TABLE "CRYPTO_POLICY_P2" ADD CONSTRAINT "PK_CRYPTO_POLICY_P2" PRIMARY KEY ("ID_CPP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CRYPTO_POLICY_P2" ON "CRYPTO_POLICY_P2" ("ID_CPP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CRYPTO_POLICY_P2" MODIFY ("ID_CPP" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_POLICY_P2" MODIFY ("ID_CM" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_POLICY_P2" MODIFY ("SEQ_NUM" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_POLICY_P2" MODIFY ("PFS_FLAG" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_POLICY_P2" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_POLICY_P2" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_POLICY_P2" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ATR_MONITORING
--------------------------------------------------------

  ALTER TABLE "ATR_MONITORING" MODIFY ("TARGET_SIM_PERC" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" MODIFY ("SERVICE_SIM_PERC" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" ADD CONSTRAINT "PK_ATRMONITORING" PRIMARY KEY ("ID_GROUP", "INTERVAL")
  USING INDEX (CREATE UNIQUE INDEX "IDX_ATRMONITORING" ON "ATR_MONITORING" ("ID_GROUP", "INTERVAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "ATR_MONITORING" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" MODIFY ("INTERVAL" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" MODIFY ("AVG_SIM" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" MODIFY ("PEAK_SIM" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" MODIFY ("SERVICE_SIM" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" MODIFY ("TARGET_SIM" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" MODIFY ("TOT_SIM" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" MODIFY ("MONTH_INT" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" MODIFY ("CL_MOD_GROUP" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADGROUPREPLY
--------------------------------------------------------

  ALTER TABLE "RADGROUPREPLY" ADD CONSTRAINT "PK_RADGROUPREPLY" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADGROUPREPLY" ON "RADGROUPREPLY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADGROUPREPLY" MODIFY ("GROUPNAME" NOT NULL ENABLE);
  ALTER TABLE "RADGROUPREPLY" MODIFY ("OP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MCC_RANKING
--------------------------------------------------------

  ALTER TABLE "MCC_RANKING" ADD CONSTRAINT "PK_MCC_RANKING" PRIMARY KEY ("MCC", "ID_MAP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MCC_RANKING" ON "MCC_RANKING" ("MCC", "ID_MAP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MCC_RANKING" MODIFY ("MCC" NOT NULL ENABLE);
  ALTER TABLE "MCC_RANKING" MODIFY ("ID_MAP" NOT NULL ENABLE);
  ALTER TABLE "MCC_RANKING" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MCC_RANKING" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ACCOUNT_FUNCTIONS
--------------------------------------------------------

  ALTER TABLE "ACCOUNT_FUNCTIONS" ADD CONSTRAINT "PK_ACC_FUNCT" PRIMARY KEY ("ID_ACCOUNT", "ID_FUNCTION")
  USING INDEX (CREATE UNIQUE INDEX "IDX_ACC_FUNCT" ON "ACCOUNT_FUNCTIONS" ("ID_ACCOUNT", "ID_FUNCTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "ACCOUNT_FUNCTIONS" MODIFY ("ID_ACCOUNT" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_FUNCTIONS" MODIFY ("ID_FUNCTION" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_FUNCTIONS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FUNCTIONS_SERVICES
--------------------------------------------------------

  ALTER TABLE "FUNCTIONS_SERVICES" ADD CONSTRAINT "PK_FUNCTIONS_SERVICES" PRIMARY KEY ("ID_FUNCTION", "ID_SERVICE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FUNCTIONS_SERVICES" ON "FUNCTIONS_SERVICES" ("ID_FUNCTION", "ID_SERVICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FUNCTIONS_SERVICES" MODIFY ("ID_FUNCTION" NOT NULL ENABLE);
  ALTER TABLE "FUNCTIONS_SERVICES" MODIFY ("ID_SERVICE" NOT NULL ENABLE);
  ALTER TABLE "FUNCTIONS_SERVICES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "FUNCTIONS_SERVICES" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPN_STATUS
--------------------------------------------------------

  ALTER TABLE "VPN_STATUS" ADD CONSTRAINT "PK_VPN_STATUS" PRIMARY KEY ("STATUS_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_VPN_STATUS" ON "VPN_STATUS" ("STATUS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "VPN_STATUS" MODIFY ("STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "VPN_STATUS" MODIFY ("DESCR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADREPLY
--------------------------------------------------------

  ALTER TABLE "RADREPLY" ADD CONSTRAINT "PK_RADREPLY" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADREPLY" ON "RADREPLY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADREPLY" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADREPLY" MODIFY ("OP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table WRK_EVENTHISTORY
--------------------------------------------------------

  ALTER TABLE "WRK_EVENTHISTORY" MODIFY ("ID_EVENT" NOT NULL ENABLE);
  ALTER TABLE "WRK_EVENTHISTORY" MODIFY ("EVENT_TYPE" NOT NULL ENABLE);
  ALTER TABLE "WRK_EVENTHISTORY" MODIFY ("EVENT_LEVEL" NOT NULL ENABLE);
  ALTER TABLE "WRK_EVENTHISTORY" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "WRK_EVENTHISTORY" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MASTER_DATA_SERVICES
--------------------------------------------------------

  ALTER TABLE "MASTER_DATA_SERVICES" ADD CONSTRAINT "PK_MASTER_DATA_SERVICES" PRIMARY KEY ("ID_SERVICE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MASTER_DATA_SERVICES" ON "MASTER_DATA_SERVICES" ("ID_SERVICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MASTER_DATA_SERVICES" MODIFY ("ID_SERVICE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_SERVICES" MODIFY ("SERVICE_NAME" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_SERVICES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_SERVICES" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_SERVICES" MODIFY ("TRUSTED" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_SERVICES" ADD UNIQUE ("SERVICE_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LOG_M2M_OLD
--------------------------------------------------------

  ALTER TABLE "LOG_M2M_OLD" ADD CONSTRAINT "PK_LOG_M2M" PRIMARY KEY ("ID_LOG_M2M")
  USING INDEX (CREATE UNIQUE INDEX "IDX_LOG_M2M" ON "LOG_M2M_OLD" ("ID_LOG_M2M") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "LOG_M2M_OLD" MODIFY ("ID_LOG_M2M" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M_OLD" MODIFY ("CMD_CALL" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M_OLD" MODIFY ("MODULE" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M_OLD" MODIFY ("TYPE_LOG" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M_OLD" MODIFY ("MESSAGE" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M_OLD" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MASTER_DATA_FUNCTIONS
--------------------------------------------------------

  ALTER TABLE "MASTER_DATA_FUNCTIONS" ADD CONSTRAINT "UK_MASTER_DATA_FUNCTIONS" UNIQUE ("FUNCTION_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MDF_UNIQUE" ON "MASTER_DATA_FUNCTIONS" ("FUNCTION_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MASTER_DATA_FUNCTIONS" ADD CONSTRAINT "PK_MASTER_DATA_FUNCTIONS" PRIMARY KEY ("ID_FUNCTION")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MASTER_DATA_FUNCTIONS" ON "MASTER_DATA_FUNCTIONS" ("ID_FUNCTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MASTER_DATA_FUNCTIONS" MODIFY ("ID_FUNCTION" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_FUNCTIONS" MODIFY ("FUNCTION_CODE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_FUNCTIONS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_FUNCTIONS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_FUNCTIONS" MODIFY ("POOL_FLAG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NAS
--------------------------------------------------------

  ALTER TABLE "NAS" ADD CONSTRAINT "PK_NAS" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_NAS" ON "NAS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "NAS" MODIFY ("DISCONNECT_PORT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLIENT_ACCOUNT_MAP
--------------------------------------------------------

  ALTER TABLE "CLIENT_ACCOUNT_MAP" ADD CONSTRAINT "PK_CLIENT_ACCOUNT_MAP" PRIMARY KEY ("ID_ACCOUNT", "ID_CLIENT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CLIENT_ACCOUNT_MAP" ON "CLIENT_ACCOUNT_MAP" ("ID_ACCOUNT", "ID_CLIENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CLIENT_ACCOUNT_MAP" MODIFY ("ID_ACCOUNT" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_ACCOUNT_MAP" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPN_RADACCT
--------------------------------------------------------

  ALTER TABLE "VPN_RADACCT" MODIFY ("ID_VPN" NOT NULL ENABLE);
  ALTER TABLE "VPN_RADACCT" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "VPN_RADACCT" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "VPN_RADACCT" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "VPN_RADACCT" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "VPN_RADACCT" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "VPN_RADACCT" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
  ALTER TABLE "VPN_RADACCT" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "VPN_RADACCT" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "VPN_RADACCT" MODIFY ("MONTH_ACCTSTARTTIME" NOT NULL ENABLE);
  ALTER TABLE "VPN_RADACCT" ADD CONSTRAINT "PK_VPN_RADACCT" PRIMARY KEY ("ID_VPN_RADACCT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RADUSERGROUP
--------------------------------------------------------

  ALTER TABLE "RADUSERGROUP" ADD CONSTRAINT "UQ_RADUSERGROUP" UNIQUE ("USERNAME")
  USING INDEX (CREATE UNIQUE INDEX "IDX_UQ_RADUSERGROUP" ON "RADUSERGROUP" ("USERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADUSERGROUP" ADD CONSTRAINT "PK_RADUSERGROUP" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADUSERGROUP" ON "RADUSERGROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADUSERGROUP" MODIFY ("USERNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIREWALL_MANUAL
--------------------------------------------------------

  ALTER TABLE "FIREWALL_MANUAL" ADD CONSTRAINT "PK_FIREWALL_MANUAL" PRIMARY KEY ("ID_FW_REQ")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FIREWALL_MANUAL" ON "FIREWALL_MANUAL" ("ID_FW_REQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FIREWALL_MANUAL" MODIFY ("ID_FW_REQ" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_MANUAL" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_MANUAL" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_MANUAL" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADPOSTAUTH
--------------------------------------------------------

  ALTER TABLE "RADPOSTAUTH" ADD CONSTRAINT "PK_RADPOSTAUTH" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADPOSTAUTH" ON "RADPOSTAUTH" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADPOSTAUTH" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "RADPOSTAUTH" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADPOSTAUTH" MODIFY ("REPLY" NOT NULL ENABLE);
  ALTER TABLE "RADPOSTAUTH" MODIFY ("AUTHDATE" NOT NULL ENABLE);
  ALTER TABLE "RADPOSTAUTH" MODIFY ("MSISDN" NOT NULL ENABLE);
  ALTER TABLE "RADPOSTAUTH" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "RADPOSTAUTH" MODIFY ("MONTH_AUTH" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CRYPTO_POLICY_PEER
--------------------------------------------------------

  ALTER TABLE "CRYPTO_POLICY_PEER" MODIFY ("ID_CPP" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_POLICY_PEER" MODIFY ("ID_SUBNET" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_POLICY_PEER" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_POLICY_PEER" ADD CONSTRAINT "PK_CRYPTO_POLICY_PEER" PRIMARY KEY ("ID_CPP", "ID_SUBNET")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PROVA_PART
--------------------------------------------------------

  ALTER TABLE "PROVA_PART" ADD CONSTRAINT "PK_PROVA_PART_2" PRIMARY KEY ("ID_RADACT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_PROVA_PART_2" ON "PROVA_PART" ("ID_RADACT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "PROVA_PART" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "PROVA_PART" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "PROVA_PART" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "PROVA_PART" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "PROVA_PART" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
  ALTER TABLE "PROVA_PART" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "PROVA_PART" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "PROVA_PART" MODIFY ("MONTH_ACCTSTARTTIME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MCC_MNC_TABLE_NEW
--------------------------------------------------------

  ALTER TABLE "MCC_MNC_TABLE_NEW" ADD CONSTRAINT "PK_MCC_MNC_TABLE_NEW" PRIMARY KEY ("MCC", "MNC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OBJECT_TYPES
--------------------------------------------------------

  ALTER TABLE "OBJECT_TYPES" ADD CONSTRAINT "PK_OBJECT_TYPES" PRIMARY KEY ("TYPE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_OBJECT_TYPES" ON "OBJECT_TYPES" ("TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "OBJECT_TYPES" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_TYPES" MODIFY ("DESCRIPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AREA_DESC
--------------------------------------------------------

  ALTER TABLE "AREA_DESC" ADD CONSTRAINT "PK_AREA_DESC" PRIMARY KEY ("ID_AREA")
  USING INDEX (CREATE UNIQUE INDEX "IDX_AREA_DESC" ON "AREA_DESC" ("ID_AREA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "AREA_DESC" MODIFY ("ID_AREA" NOT NULL ENABLE);
  ALTER TABLE "AREA_DESC" MODIFY ("AREA_NAME" NOT NULL ENABLE);
  ALTER TABLE "AREA_DESC" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "AREA_DESC" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPN_TUN_GRP
--------------------------------------------------------

  ALTER TABLE "VPN_TUN_GRP" ADD CONSTRAINT "PK_VPN_TUN_GRP" PRIMARY KEY ("ID_VPN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_VPN_TUN_GRP" ON "VPN_TUN_GRP" ("ID_VPN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "VPN_TUN_GRP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "VPN_TUN_GRP" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MCC_AREA
--------------------------------------------------------

  ALTER TABLE "MCC_AREA" ADD CONSTRAINT "PK_MCC_AREA" PRIMARY KEY ("ID_AREA", "MCC")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MCC_AREA" ON "MCC_AREA" ("ID_AREA", "MCC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MCC_AREA" MODIFY ("ID_AREA" NOT NULL ENABLE);
  ALTER TABLE "MCC_AREA" MODIFY ("MCC" NOT NULL ENABLE);
  ALTER TABLE "MCC_AREA" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MCC_AREA" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OBJECT_GROUP
--------------------------------------------------------

  ALTER TABLE "OBJECT_GROUP" ADD CONSTRAINT "PK_OBJECT_GROUP" PRIMARY KEY ("ID_OBJ_GRP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_OBJECT_GROUP" ON "OBJECT_GROUP" ("ID_OBJ_GRP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "OBJECT_GROUP" MODIFY ("ID_OBJ_GRP" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_GROUP" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_GROUP" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_GROUP" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_GROUP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_GROUP" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADACCT
--------------------------------------------------------

  ALTER TABLE "RADACCT" ADD CONSTRAINT "PK_RADACCT" PRIMARY KEY ("ID_RADACT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADACCT" ON "RADACCT" ("ID_RADACT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADACCT" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "RADACCT" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "RADACCT" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RADACCT" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
  ALTER TABLE "RADACCT" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT" MODIFY ("MONTH_ACCTSTARTTIME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT" MODIFY ("ID_GGSN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MAP_LIST
--------------------------------------------------------

  ALTER TABLE "MAP_LIST" ADD CONSTRAINT "PK_MAP_LIST" PRIMARY KEY ("ID_MAP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MAP_LIST" ON "MAP_LIST" ("ID_MAP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MAP_LIST" MODIFY ("ID_MAP" NOT NULL ENABLE);
  ALTER TABLE "MAP_LIST" MODIFY ("NAME_MAP" NOT NULL ENABLE);
  ALTER TABLE "MAP_LIST" MODIFY ("ID_APN" NOT NULL ENABLE);
  ALTER TABLE "MAP_LIST" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MAP_LIST" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MAP_LIST" MODIFY ("DEFAULT_AREA" NOT NULL ENABLE);
  ALTER TABLE "MAP_LIST" MODIFY ("DEFAULT_MCC" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FW_RULES_PARAMS
--------------------------------------------------------

  ALTER TABLE "FW_RULES_PARAMS" ADD CONSTRAINT "PK_FW_RULES_PARAMS" PRIMARY KEY ("ID_FW_RULE", "PARAM_KEY")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FW_RULES_PARAMS" ON "FW_RULES_PARAMS" ("ID_FW_RULE", "PARAM_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FW_RULES_PARAMS" MODIFY ("ID_FW_RULE" NOT NULL ENABLE);
  ALTER TABLE "FW_RULES_PARAMS" MODIFY ("PARAM_KEY" NOT NULL ENABLE);
  ALTER TABLE "FW_RULES_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPNHOST_SUBNET
--------------------------------------------------------

  ALTER TABLE "VPNHOST_SUBNET" MODIFY ("OC1" NOT NULL ENABLE);
  ALTER TABLE "VPNHOST_SUBNET" MODIFY ("OC2" NOT NULL ENABLE);
  ALTER TABLE "VPNHOST_SUBNET" MODIFY ("OC3" NOT NULL ENABLE);
  ALTER TABLE "VPNHOST_SUBNET" MODIFY ("OC4" NOT NULL ENABLE);
  ALTER TABLE "VPNHOST_SUBNET" MODIFY ("L2L_FLAG" NOT NULL ENABLE);
  ALTER TABLE "VPNHOST_SUBNET" MODIFY ("ID_APN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MAIN_POOL_IP
--------------------------------------------------------

  ALTER TABLE "MAIN_POOL_IP" ADD CONSTRAINT "PK_MAIN_POOL_IP" PRIMARY KEY ("ID_SUB", "IPADDRESS")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MAIN_POOL_IP" ON "MAIN_POOL_IP" ("ID_SUB", "IPADDRESS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MAIN_POOL_IP" MODIFY ("ID_SUB" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_IP" MODIFY ("IPADDRESS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MAP_FUNCTIONS_DEVICES
--------------------------------------------------------

  ALTER TABLE "MAP_FUNCTIONS_DEVICES" ADD CONSTRAINT "PK_MAP_FUNCTIONS_DEVICES" PRIMARY KEY ("ID_APN", "ID_FUNCTION", "ID_DEVICE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MAP_FUNCTIONS_DEVICES" ON "MAP_FUNCTIONS_DEVICES" ("ID_APN", "ID_FUNCTION", "ID_DEVICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MAP_FUNCTIONS_DEVICES" MODIFY ("ID_APN" NOT NULL ENABLE);
  ALTER TABLE "MAP_FUNCTIONS_DEVICES" MODIFY ("ID_FUNCTION" NOT NULL ENABLE);
  ALTER TABLE "MAP_FUNCTIONS_DEVICES" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GROUP_POOL_SUBNET
--------------------------------------------------------

  ALTER TABLE "GROUP_POOL_SUBNET" ADD CONSTRAINT "PK_GROUP_POOL_SUBNET" PRIMARY KEY ("ID_GSUBNET")
  USING INDEX (CREATE UNIQUE INDEX "IDX_GSUBNET" ON "GROUP_POOL_SUBNET" ("ID_GSUBNET") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "GROUP_POOL_SUBNET" MODIFY ("ID_GSUBNET" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET" MODIFY ("IP_PREFIX" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET" MODIFY ("NETMASK" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET" MODIFY ("FIRST_IP" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET" MODIFY ("LAST_IP" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET" MODIFY ("POOL_SIZE" NOT NULL ENABLE);
  ALTER TABLE "GROUP_POOL_SUBNET" MODIFY ("ID_GGSN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table M2M_PLATFORM_ACCOUNTS
--------------------------------------------------------

  ALTER TABLE "M2M_PLATFORM_ACCOUNTS" ADD CONSTRAINT "PK_M2M_PLATFORM_ACCOUNTS" PRIMARY KEY ("ID_ACCOUNT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_M2M_PLATFORM_ACCOUNTS" ON "M2M_PLATFORM_ACCOUNTS" ("ID_ACCOUNT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "M2M_PLATFORM_ACCOUNTS" MODIFY ("ID_ACCOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AREA_MAP
--------------------------------------------------------

  ALTER TABLE "AREA_MAP" ADD CONSTRAINT "PK_AREAMAP" PRIMARY KEY ("ID_MAP", "ID_AREA")
  USING INDEX (CREATE UNIQUE INDEX "IDX_AREAMAP" ON "AREA_MAP" ("ID_MAP", "ID_AREA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "AREA_MAP" MODIFY ("ID_MAP" NOT NULL ENABLE);
  ALTER TABLE "AREA_MAP" MODIFY ("ID_AREA" NOT NULL ENABLE);
  ALTER TABLE "AREA_MAP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "AREA_MAP" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REALMS
--------------------------------------------------------

  ALTER TABLE "REALMS" ADD CONSTRAINT "PK_REALMS" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_REALMS" ON "REALMS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
--------------------------------------------------------
--  Constraints for Table GRP_INTERVAL
--------------------------------------------------------

  ALTER TABLE "GRP_INTERVAL" MODIFY ("DAY" NOT NULL ENABLE);
  ALTER TABLE "GRP_INTERVAL" MODIFY ("FROM_HOUR" NOT NULL ENABLE);
  ALTER TABLE "GRP_INTERVAL" MODIFY ("TO_HOUR" NOT NULL ENABLE);
  ALTER TABLE "GRP_INTERVAL" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "GRP_INTERVAL" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "GRP_INTERVAL" ADD CONSTRAINT "CHK_GRPINT_DAY" CHECK (DAY IN ('MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN')) ENABLE;
  ALTER TABLE "GRP_INTERVAL" ADD CONSTRAINT "CHK_GRPINT_TO_HOUR" CHECK (TO_HOUR >= 0 AND TO_HOUR <= 24) ENABLE;
  ALTER TABLE "GRP_INTERVAL" ADD CONSTRAINT "CHK_GRPINT_HOURS" CHECK (FROM_HOUR < TO_HOUR) ENABLE;
  ALTER TABLE "GRP_INTERVAL" ADD CONSTRAINT "CHK_GRPINT_FROM_HOUR" CHECK (FROM_HOUR >= 0 AND FROM_HOUR <= 24) ENABLE;
  ALTER TABLE "GRP_INTERVAL" MODIFY ("TIMEZONE" NOT NULL ENABLE);
  ALTER TABLE "GRP_INTERVAL" ADD CONSTRAINT "PK_GRP_INTERVAL" PRIMARY KEY ("ID_GROUP", "ID_INTERVAL")
  USING INDEX (CREATE UNIQUE INDEX "IDX_GRP_INTERVAL" ON "GRP_INTERVAL" ("ID_GROUP", "ID_INTERVAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "GRP_INTERVAL" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "GRP_INTERVAL" MODIFY ("ID_INTERVAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICE_SUBNETS
--------------------------------------------------------

  ALTER TABLE "DEVICE_SUBNETS" ADD CONSTRAINT "PK_DEVICE_SUBNETS" PRIMARY KEY ("ID_SUBNET")
  USING INDEX (CREATE UNIQUE INDEX "IDX_DEVICE_SUBNETS" ON "DEVICE_SUBNETS" ("ID_SUBNET") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "DEVICE_SUBNETS" MODIFY ("ID_SUBNET" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_SUBNETS" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_SUBNETS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "DEVICE_SUBNETS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADGROUPCHECK
--------------------------------------------------------

  ALTER TABLE "RADGROUPCHECK" ADD CONSTRAINT "PK_RADGROUPCHECK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADGROUPCHECK" ON "RADGROUPCHECK" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADGROUPCHECK" MODIFY ("GROUPNAME" NOT NULL ENABLE);
  ALTER TABLE "RADGROUPCHECK" MODIFY ("OP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STATIC_ROUTES
--------------------------------------------------------

  ALTER TABLE "STATIC_ROUTES" MODIFY ("ID_INTERFACE" NOT NULL ENABLE);
  ALTER TABLE "STATIC_ROUTES" MODIFY ("ID_DEV_ROUTE" NOT NULL ENABLE);
  ALTER TABLE "STATIC_ROUTES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "STATIC_ROUTES" ADD CONSTRAINT "PK_STATIC_ROUTES" PRIMARY KEY ("ID_INTERFACE", "ID_DEV_ROUTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MSISDN_SHADOW
--------------------------------------------------------

  ALTER TABLE "MSISDN_SHADOW" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_SHADOW" MODIFY ("MSISDN" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_SHADOW" MODIFY ("MSISDN_TEMP" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_SHADOW" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_SHADOW" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_SHADOW" MODIFY ("EXPIRE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_SHADOW" MODIFY ("REMOVED" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_SHADOW" MODIFY ("HUMAN_FLAG" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_SHADOW" MODIFY ("FLAG_INTERNAL" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_SHADOW" ADD CONSTRAINT "PK_MSISDN_SHADOW" PRIMARY KEY ("ID_GROUP", "MSISDN", "MSISDN_TEMP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MASTER_DATA_VPN
--------------------------------------------------------

  ALTER TABLE "MASTER_DATA_VPN" ADD CONSTRAINT "PK_MASTER_DATA_VPN" PRIMARY KEY ("ID_VPN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MASTER_DATA_VPN" ON "MASTER_DATA_VPN" ("ID_VPN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MASTER_DATA_VPN" MODIFY ("ID_VPN" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN" MODIFY ("REFERENT" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN" MODIFY ("REFERENT_PHONE1" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN" MODIFY ("STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN" MODIFY ("RESTART_FLAG" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_VPN" MODIFY ("FLAG_USED" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PUBLIC_IP_DETAIL_POOL
--------------------------------------------------------

  ALTER TABLE "PUBLIC_IP_DETAIL_POOL" ADD CONSTRAINT "PK_PUBLIC_IP_DETAIL_POOL" PRIMARY KEY ("IP_ADDRESS")
  USING INDEX (CREATE UNIQUE INDEX "IDX_PUBLIC_IP_DETAIL_POOL" ON "PUBLIC_IP_DETAIL_POOL" ("IP_ADDRESS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "PUBLIC_IP_DETAIL_POOL" MODIFY ("ID_PSUBNET" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_DETAIL_POOL" MODIFY ("IP_ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_DETAIL_POOL" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_DETAIL_POOL" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ERROR_CODE
--------------------------------------------------------

  ALTER TABLE "ERROR_CODE" ADD CONSTRAINT "PK_ERROR_CODE" PRIMARY KEY ("CODE_ERROR", "ERROR_FAMILY")
  USING INDEX (CREATE UNIQUE INDEX "IDX_ERROR_CODE" ON "ERROR_CODE" ("CODE_ERROR", "ERROR_FAMILY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "ERROR_CODE" MODIFY ("CODE_ERROR" NOT NULL ENABLE);
  ALTER TABLE "ERROR_CODE" MODIFY ("ORACLE_CODE" NOT NULL ENABLE);
  ALTER TABLE "ERROR_CODE" MODIFY ("DESCRIPTION" NOT NULL ENABLE);
  ALTER TABLE "ERROR_CODE" MODIFY ("ERROR_FAMILY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYSTEM_DEVICES
--------------------------------------------------------

  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("PROMPT_SUFFIX" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM_DEVICES" ADD CONSTRAINT "PK_SYSTEM_DEVICES" PRIMARY KEY ("ID_DEVICE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_SYSTEM_DEVICES" ON "SYSTEM_DEVICES" ("ID_DEVICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("CMD_WAIT_MS" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("CONN_TIMEOUT" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("CM_DEBUG" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("ACTIVATED" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("CONN_MODE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM_DEVICES" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RULE_STATUS
--------------------------------------------------------

  ALTER TABLE "RULE_STATUS" ADD CONSTRAINT "PK_RULE_STATUS" PRIMARY KEY ("RULE_STATUS_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RULE_STATUS" ON "RULE_STATUS" ("RULE_STATUS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RULE_STATUS" MODIFY ("RULE_STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "RULE_STATUS" MODIFY ("DESCR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYS_EXPORT_SCHEMA_06
--------------------------------------------------------

  ALTER TABLE "SYS_EXPORT_SCHEMA_06" ADD UNIQUE ("PROCESS_ORDER", "DUPLICATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OBJECT_NETWORK
--------------------------------------------------------

  ALTER TABLE "OBJECT_NETWORK" ADD CONSTRAINT "PK_OBJECT_NETWORK" PRIMARY KEY ("ID_OBJ_NET")
  USING INDEX (CREATE UNIQUE INDEX "IDX_OBJECT_NETWORK" ON "OBJECT_NETWORK" ("ID_OBJ_NET") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "OBJECT_NETWORK" MODIFY ("ID_OBJ_NET" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_NETWORK" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_NETWORK" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_NETWORK" MODIFY ("FLAG_USED" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_NETWORK" MODIFY ("ID_SUBNET" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_NETWORK" MODIFY ("FLAG_INLINE" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_NETWORK" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "OBJECT_NETWORK" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STATS_HOURLY_CONNECTIONS
--------------------------------------------------------

  ALTER TABLE "STATS_HOURLY_CONNECTIONS" ADD CONSTRAINT "PK_STATS_HOURLY_CONNECTIONS" PRIMARY KEY ("LIM_DOWN", "LIM_UP", "ID_GGSN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_STATS_HOURLY_CONNECTIONS" ON "STATS_HOURLY_CONNECTIONS" ("LIM_DOWN", "LIM_UP", "ID_GGSN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}" )  ENABLE;
  ALTER TABLE "STATS_HOURLY_CONNECTIONS" MODIFY ("ID_GGSN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONSOLE_LOG
--------------------------------------------------------

  ALTER TABLE "CONSOLE_LOG" ADD CONSTRAINT "PK_PCS_LOG" PRIMARY KEY ("ID_LOG")
  USING INDEX (CREATE UNIQUE INDEX "IDX_PCS_LOG" ON "CONSOLE_LOG" ("ID_LOG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CONSOLE_LOG" MODIFY ("ID_LOG" NOT NULL ENABLE);
  ALTER TABLE "CONSOLE_LOG" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "CONSOLE_LOG" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSISDN_WHITELIST
--------------------------------------------------------

  ALTER TABLE "MSISDN_WHITELIST" ADD CONSTRAINT "PK_MSISDN_WHITELIST" PRIMARY KEY ("MSISDN")
  USING INDEX (CREATE INDEX "IDX_SINGLE_MSISDN_WHITELIST" ON "MSISDN_WHITELIST" ("MSISDN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("MSISDN" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("CONNECTABLE" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("HUMAN_FLAG" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("FLAG_INTERNAL" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("PREPAID" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("CL_MOD_GROUP" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("CL_MOD_MSISDN" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_WHITELIST" MODIFY ("CACHE_TTL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USER_FUNCTIONS
--------------------------------------------------------

  ALTER TABLE "USER_FUNCTIONS" ADD CONSTRAINT "PK_USR_FUNCT" PRIMARY KEY ("ID_ACCOUNT", "USERNAME", "ID_FUNCTION")
  USING INDEX (CREATE UNIQUE INDEX "IDX_USR_FUNCT" ON "USER_FUNCTIONS" ("ID_ACCOUNT", "USERNAME", "ID_FUNCTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "USER_FUNCTIONS" MODIFY ("ID_ACCOUNT" NOT NULL ENABLE);
  ALTER TABLE "USER_FUNCTIONS" MODIFY ("ID_FUNCTION" NOT NULL ENABLE);
  ALTER TABLE "USER_FUNCTIONS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "USER_FUNCTIONS" MODIFY ("USERNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLATFORM_CONFIGURATION
--------------------------------------------------------

  ALTER TABLE "PLATFORM_CONFIGURATION" ADD CONSTRAINT "PK_PLATFORM_CONFIGURATION" PRIMARY KEY ("PARAM")
  USING INDEX (CREATE UNIQUE INDEX "IDX_PLATFORM_CONFIGURATION" ON "PLATFORM_CONFIGURATION" ("PARAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "PLATFORM_CONFIGURATION" MODIFY ("PARAM" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REMOVING_STACK
--------------------------------------------------------

  ALTER TABLE "REMOVING_STACK" ADD CONSTRAINT "PK_REMOVING_STACK" PRIMARY KEY ("ID_CLIENT", "ID_OBJECT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_REMOVING_STACK" ON "REMOVING_STACK" ("ID_CLIENT", "ID_OBJECT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "REMOVING_STACK" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "REMOVING_STACK" MODIFY ("ID_ORDER" NOT NULL ENABLE);
  ALTER TABLE "REMOVING_STACK" MODIFY ("ID_OBJECT" NOT NULL ENABLE);
  ALTER TABLE "REMOVING_STACK" MODIFY ("TYPE_OBJECT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MOBILE_SUBNET
--------------------------------------------------------

  ALTER TABLE "MOBILE_SUBNET" MODIFY ("OC1" NOT NULL ENABLE);
  ALTER TABLE "MOBILE_SUBNET" MODIFY ("OC2" NOT NULL ENABLE);
  ALTER TABLE "MOBILE_SUBNET" MODIFY ("OC3" NOT NULL ENABLE);
  ALTER TABLE "MOBILE_SUBNET" MODIFY ("OC4" NOT NULL ENABLE);
  ALTER TABLE "MOBILE_SUBNET" MODIFY ("ID_GGSN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LAST_CONN_FAIL
--------------------------------------------------------

  ALTER TABLE "LAST_CONN_FAIL" ADD CONSTRAINT "PK_LAST_CONN_FAIL" PRIMARY KEY ("CALLINGSTATIONID")
  USING INDEX (CREATE UNIQUE INDEX "IDX_LAST_CONN_FAIL" ON "LAST_CONN_FAIL" ("CALLINGSTATIONID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "LAST_CONN_FAIL" MODIFY ("CALLINGSTATIONID" NOT NULL ENABLE);
  ALTER TABLE "LAST_CONN_FAIL" MODIFY ("ID_RADPOSTAUTH" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REQUEST_STATUS
--------------------------------------------------------

  ALTER TABLE "REQUEST_STATUS" ADD CONSTRAINT "PK_REQUEST_STATUS" PRIMARY KEY ("REQUEST_STATUS_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_REQUEST_STATUS" ON "REQUEST_STATUS" ("REQUEST_STATUS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "REQUEST_STATUS" MODIFY ("REQUEST_STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "REQUEST_STATUS" MODIFY ("DESCR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SYS_EXPORT_SCHEMA_05
--------------------------------------------------------

  ALTER TABLE "SYS_EXPORT_SCHEMA_05" ADD UNIQUE ("PROCESS_ORDER", "DUPLICATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MASTER_DATA_RELATIONSHIPS
--------------------------------------------------------

  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" ADD CONSTRAINT "PK_MASTER_DATA_RELATIONSHIPS" PRIMARY KEY ("ID_GROUP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MASTER_DATA_RELATIONSHIPS" ON "MASTER_DATA_RELATIONSHIPS" ("ID_GROUP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("ID_SERVICE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("GROUP_NAME_REL" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("ACTIVATED" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("GROUP_SIZE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("SYSTEM_FLAG" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("SUBNET_CONF_PENDING" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("UPDATING_SIMS" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" MODIFY ("ID_APN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIREWALL_REQ_PARAMS
--------------------------------------------------------

  ALTER TABLE "FIREWALL_REQ_PARAMS" ADD CONSTRAINT "PK_FIREWALL_REQ_PARAMS" PRIMARY KEY ("ID_FW_REQ", "ID_PARAM")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FIREWALL_REQ_PARAMS" ON "FIREWALL_REQ_PARAMS" ("ID_FW_REQ", "ID_PARAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FIREWALL_REQ_PARAMS" MODIFY ("ID_FW_REQ" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_REQ_PARAMS" MODIFY ("ID_PARAM" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_REQ_PARAMS" MODIFY ("PARAM" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_REQ_PARAMS" MODIFY ("PARAM_VALUE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_REQ_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ATR_MONITORING_OLD
--------------------------------------------------------

  ALTER TABLE "ATR_MONITORING_OLD" ADD CONSTRAINT "PK_ATR_MONITORING" PRIMARY KEY ("ID_ATR_MONITORING")
  USING INDEX (CREATE UNIQUE INDEX "IDX_ATR_MONITORING" ON "ATR_MONITORING_OLD" ("ID_ATR_MONITORING") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "ATR_MONITORING_OLD" MODIFY ("ID_ATR_MONITORING" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING_OLD" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING_OLD" MODIFY ("ACTUAL_RATIO" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING_OLD" MODIFY ("TARGET_RATIO" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING_OLD" MODIFY ("TOTAL_RESOURCES" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING_OLD" MODIFY ("TOT_SIM" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING_OLD" MODIFY ("TOT_SIM_CONN1TIME" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING_OLD" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "ATR_MONITORING_OLD" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AGENTS
--------------------------------------------------------

  ALTER TABLE "AGENTS" ADD CONSTRAINT "PK_AGENTS" PRIMARY KEY ("ID_AGENT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_AGENTS" ON "AGENTS" ("ID_AGENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "AGENTS" MODIFY ("ID_AGENT" NOT NULL ENABLE);
  ALTER TABLE "AGENTS" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "AGENTS" MODIFY ("STATUS" NOT NULL ENABLE);
  ALTER TABLE "AGENTS" MODIFY ("HOSTNAME" NOT NULL ENABLE);
  ALTER TABLE "AGENTS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "AGENTS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPN_POOL_SUBNET
--------------------------------------------------------

  ALTER TABLE "VPN_POOL_SUBNET" ADD CONSTRAINT "PK_VPN_POOL_SUBNET" PRIMARY KEY ("ID_VSUBNET")
  USING INDEX (CREATE UNIQUE INDEX "IDX_VSUBNET" ON "VPN_POOL_SUBNET" ("ID_VSUBNET") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "VPN_POOL_SUBNET" MODIFY ("ID_VSUBNET" NOT NULL ENABLE);
  ALTER TABLE "VPN_POOL_SUBNET" MODIFY ("IP_PREFIX" NOT NULL ENABLE);
  ALTER TABLE "VPN_POOL_SUBNET" MODIFY ("NETMASK" NOT NULL ENABLE);
  ALTER TABLE "VPN_POOL_SUBNET" MODIFY ("FIRST_IP" NOT NULL ENABLE);
  ALTER TABLE "VPN_POOL_SUBNET" MODIFY ("LAST_IP" NOT NULL ENABLE);
  ALTER TABLE "VPN_POOL_SUBNET" MODIFY ("POOL_SIZE" NOT NULL ENABLE);
  ALTER TABLE "VPN_POOL_SUBNET" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "VPN_POOL_SUBNET" MODIFY ("FLAG_L2L" NOT NULL ENABLE);
  ALTER TABLE "VPN_POOL_SUBNET" MODIFY ("ID_SUB" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPN_OBJ_GRP_MAP
--------------------------------------------------------

  ALTER TABLE "VPN_OBJ_GRP_MAP" ADD CONSTRAINT "PK_VPN_OBJ_GRP_MAP" PRIMARY KEY ("ID_VPN", "ID_OBJ_GRP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_VPN_OBJ_GRP_MAP" ON "VPN_OBJ_GRP_MAP" ("ID_VPN", "ID_OBJ_GRP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "VPN_OBJ_GRP_MAP" MODIFY ("ID_VPN" NOT NULL ENABLE);
  ALTER TABLE "VPN_OBJ_GRP_MAP" MODIFY ("ID_OBJ_GRP" NOT NULL ENABLE);
  ALTER TABLE "VPN_OBJ_GRP_MAP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table NOTIFICATIONS
--------------------------------------------------------

  ALTER TABLE "NOTIFICATIONS" ADD CONSTRAINT "PK_NOTIFICATIONS" PRIMARY KEY ("NOTIFICATION")
  USING INDEX (CREATE UNIQUE INDEX "IDX_NOTIFICATIONS" ON "NOTIFICATIONS" ("NOTIFICATION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "NOTIFICATIONS" MODIFY ("NOTIFICATION" NOT NULL ENABLE);
  ALTER TABLE "NOTIFICATIONS" MODIFY ("DESCR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table THRESHOLD
--------------------------------------------------------

  ALTER TABLE "THRESHOLD" ADD CONSTRAINT "PK_THRESHOLD" PRIMARY KEY ("ID_THRESHOLD")
  USING INDEX (CREATE UNIQUE INDEX "IDX_THRESHOLD" ON "THRESHOLD" ("ID_THRESHOLD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "THRESHOLD" MODIFY ("ID_THRESHOLD" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "THRESHOLD" MODIFY ("ID_MAP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MAP_OGRP_REC
--------------------------------------------------------

  ALTER TABLE "MAP_OGRP_REC" MODIFY ("ID_OBJ_GRP_FATHER" NOT NULL ENABLE);
  ALTER TABLE "MAP_OGRP_REC" MODIFY ("ID_OBJ_GRP_SON" NOT NULL ENABLE);
  ALTER TABLE "MAP_OGRP_REC" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MAP_OGRP_REC" ADD CONSTRAINT "PK_MAP_OGRP_REC" PRIMARY KEY ("ID_OBJ_GRP_FATHER", "ID_OBJ_GRP_SON")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MAIN_POOL_HWM
--------------------------------------------------------

  ALTER TABLE "MAIN_POOL_HWM" ADD CONSTRAINT "PK_MAIN_POOL_HWM" PRIMARY KEY ("ID_SUB", "FIRST_IP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MAIN_POOL_HWM" ON "MAIN_POOL_HWM" ("ID_SUB", "FIRST_IP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MAIN_POOL_HWM" MODIFY ("ID_SUB" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_HWM" MODIFY ("FIRST_IP" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_HWM" MODIFY ("FREE_SIZE" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_HWM" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_HWM" MODIFY ("FLAG_HWM" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_HWM" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IP_ASSIGNED_TMP
--------------------------------------------------------

  ALTER TABLE "IP_ASSIGNED_TMP" ADD CONSTRAINT "UQ_IP_ASSIGNED_TMP" UNIQUE ("FRAMEDIPADDRESS")
  USING INDEX (CREATE UNIQUE INDEX "IDX_UQ_IP_ASSIGNED_TMP" ON "IP_ASSIGNED_TMP" ("FRAMEDIPADDRESS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "IP_ASSIGNED_TMP" ADD CONSTRAINT "PK_IP_ASSIGNED_TMP" PRIMARY KEY ("ID_GROUP", "FRAMEDIPADDRESS")
  USING INDEX (CREATE UNIQUE INDEX "IDX_IP_ASSIGNED_TMP" ON "IP_ASSIGNED_TMP" ("ID_GROUP", "FRAMEDIPADDRESS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("FRAMEDIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("LOCKED" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("FLAG_USED" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("ID_GSUBNET" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("ID_APN" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("ID_GGSN" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("TYPE_REQ" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("FLAG_FIRST" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("CL_MOD_GROUP" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("CL_MOD_MSISDN" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "IP_ASSIGNED_TMP" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OLD_MCC_MNC_TABLE
--------------------------------------------------------

  ALTER TABLE "OLD_MCC_MNC_TABLE" ADD CONSTRAINT "PK_OLD_MCC_MNC_TABLE" PRIMARY KEY ("MCC", "MNC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RULES_PROFILES
--------------------------------------------------------

  ALTER TABLE "RULES_PROFILES" ADD CONSTRAINT "PK_RULES_PROFILES" PRIMARY KEY ("ID_RULE_PROFILE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RULES_PROFILES" ON "RULES_PROFILES" ("ID_RULE_PROFILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RULES_PROFILES" MODIFY ("ID_RULE_PROFILE" NOT NULL ENABLE);
  ALTER TABLE "RULES_PROFILES" MODIFY ("SYSTEM_FLAG" NOT NULL ENABLE);
  ALTER TABLE "RULES_PROFILES" MODIFY ("STATUS" NOT NULL ENABLE);
  ALTER TABLE "RULES_PROFILES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "RULES_PROFILES" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GRP_VPN_MAP
--------------------------------------------------------

  ALTER TABLE "GRP_VPN_MAP" ADD CONSTRAINT "PK_GRP_VPN_MAP" PRIMARY KEY ("ID_GROUP", "ID_VPN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_GRP_VPN_MAP" ON "GRP_VPN_MAP" ("ID_GROUP", "ID_VPN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "GRP_VPN_MAP" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "GRP_VPN_MAP" MODIFY ("ID_VPN" NOT NULL ENABLE);
  ALTER TABLE "GRP_VPN_MAP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REQUESTS_HISTORY
--------------------------------------------------------

  ALTER TABLE "REQUESTS_HISTORY" ADD CONSTRAINT "PK_REQUESTS_HISTORY" PRIMARY KEY ("ID_REQUEST")
  USING INDEX (CREATE UNIQUE INDEX "IDX_REQUESTS_HISTORY" ON "REQUESTS_HISTORY" ("ID_REQUEST") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "REQUESTS_HISTORY" MODIFY ("ID_REQUEST" NOT NULL ENABLE);
  ALTER TABLE "REQUESTS_HISTORY" MODIFY ("ID_OBJECT" NOT NULL ENABLE);
  ALTER TABLE "REQUESTS_HISTORY" MODIFY ("TYPE_CODE" NOT NULL ENABLE);
  ALTER TABLE "REQUESTS_HISTORY" MODIFY ("REQUEST_STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "REQUESTS_HISTORY" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "REQUESTS_HISTORY" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VPN_TYPES
--------------------------------------------------------

  ALTER TABLE "VPN_TYPES" ADD CONSTRAINT "PK_VPN_TYPES" PRIMARY KEY ("VPN_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_VPN_TYPES" ON "VPN_TYPES" ("VPN_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "VPN_TYPES" MODIFY ("VPN_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EVENT_TYPES
--------------------------------------------------------

  ALTER TABLE "EVENT_TYPES" ADD CONSTRAINT "PK_EVENT_TYPES" PRIMARY KEY ("TYPE_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_EVENT_TYPES" ON "EVENT_TYPES" ("TYPE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "EVENT_TYPES" MODIFY ("TYPE_CODE" NOT NULL ENABLE);
  ALTER TABLE "EVENT_TYPES" MODIFY ("DESCR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CRYPTO_MAP
--------------------------------------------------------

  ALTER TABLE "CRYPTO_MAP" ADD CONSTRAINT "PK_CRYPTO_MAP" PRIMARY KEY ("ID_CM")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CRYPTO_MAP" ON "CRYPTO_MAP" ("ID_CM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CRYPTO_MAP" MODIFY ("ID_CM" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_MAP" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_MAP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_MAP" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_MAP" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "CRYPTO_MAP" ADD CONSTRAINT "CHECK_CM_TYPE" CHECK ("TYPE" IN ('STATIC' , 'DYNAMIC')) ENABLE;
--------------------------------------------------------
--  Constraints for Table MD_APPLICATIONFILES
--------------------------------------------------------

  ALTER TABLE "MD_APPLICATIONFILES" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONFILES" MODIFY ("APPLICATIONS_ID_FK" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONFILES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONFILES" MODIFY ("URI" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONFILES" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONFILES" MODIFY ("STATE" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONFILES" MODIFY ("SECURITY_GROUP_ID" NOT NULL ENABLE);
  ALTER TABLE "MD_APPLICATIONFILES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEVICES_CONN_MODES
--------------------------------------------------------

  ALTER TABLE "DEVICES_CONN_MODES" ADD CONSTRAINT "PK_DEVICES_CONN_MODES" PRIMARY KEY ("CMODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_DEVICES_CONN_MODES" ON "DEVICES_CONN_MODES" ("CMODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "DEVICES_CONN_MODES" MODIFY ("CMODE" NOT NULL ENABLE);
  ALTER TABLE "DEVICES_CONN_MODES" MODIFY ("PORT" NOT NULL ENABLE);
  ALTER TABLE "DEVICES_CONN_MODES" MODIFY ("SSL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DATAMART_RADACCT
--------------------------------------------------------

  ALTER TABLE "DATAMART_RADACCT" ADD CONSTRAINT "PK_DATAMART_RADACCT" PRIMARY KEY ("ID_RADACT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_DATAMART_RADACCT" ON "DATAMART_RADACCT" ("ID_RADACT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "DATAMART_RADACCT" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "DATAMART_RADACCT" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "DATAMART_RADACCT" MODIFY ("STARTTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "DATAMART_RADACCT" MODIFY ("STOPTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "DATAMART_RADACCT" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ACL_DEVICE
--------------------------------------------------------

  ALTER TABLE "ACL_DEVICE" ADD CONSTRAINT "PK_ACL_DEVICE" PRIMARY KEY ("ID_ACL")
  USING INDEX (CREATE UNIQUE INDEX "IDX_ACL_DEVICE" ON "ACL_DEVICE" ("ID_ACL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "ACL_DEVICE" MODIFY ("ID_ACL" NOT NULL ENABLE);
  ALTER TABLE "ACL_DEVICE" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "ACL_DEVICE" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "ACL_DEVICE" MODIFY ("TYPE" NOT NULL ENABLE);
  ALTER TABLE "ACL_DEVICE" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "ACL_DEVICE" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APN
--------------------------------------------------------

  ALTER TABLE "APN" ADD CONSTRAINT "PK_APN" PRIMARY KEY ("ID_APN")
  USING INDEX (CREATE UNIQUE INDEX "IDX_APN" ON "APN" ("ID_APN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "APN" MODIFY ("ID_APN" NOT NULL ENABLE);
  ALTER TABLE "APN" MODIFY ("APN_NAME" NOT NULL ENABLE);
  ALTER TABLE "APN" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PUBLIC_IP_POOL_SUBNET
--------------------------------------------------------

  ALTER TABLE "PUBLIC_IP_POOL_SUBNET" ADD CONSTRAINT "PK_PUBLIC_IP_POOL_SUBNET" PRIMARY KEY ("ID_PSUBNET")
  USING INDEX (CREATE UNIQUE INDEX "IDX_PUBLIC_IP_POOL_SUBNET" ON "PUBLIC_IP_POOL_SUBNET" ("ID_PSUBNET") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "PUBLIC_IP_POOL_SUBNET" MODIFY ("ID_PSUBNET" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_POOL_SUBNET" MODIFY ("IP_PREFIX" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_POOL_SUBNET" MODIFY ("NETMASK" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_POOL_SUBNET" MODIFY ("FIRST_IP" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_POOL_SUBNET" MODIFY ("LAST_IP" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_POOL_SUBNET" MODIFY ("POOL_SIZE" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_POOL_SUBNET" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "PUBLIC_IP_POOL_SUBNET" MODIFY ("ID_APN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MAIL_NOTIFICATIONS
--------------------------------------------------------

  ALTER TABLE "MAIL_NOTIFICATIONS" ADD CONSTRAINT "UQ_MAIL_NOTIFICATIONS" UNIQUE ("MAIL", "NOTIFICATION")
  USING INDEX (CREATE UNIQUE INDEX "IDX_UQ_MAIL_NOTIFICATIONS" ON "MAIL_NOTIFICATIONS" ("MAIL", "NOTIFICATION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MAIL_NOTIFICATIONS" ADD CONSTRAINT "PK_MAIL_NOTIFICATIONS" PRIMARY KEY ("ID_MAIL_NOTIF")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MAIL_NOTIFICATIONS" ON "MAIL_NOTIFICATIONS" ("ID_MAIL_NOTIF") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MAIL_NOTIFICATIONS" MODIFY ("ID_MAIL_NOTIF" NOT NULL ENABLE);
  ALTER TABLE "MAIL_NOTIFICATIONS" MODIFY ("MAIL" NOT NULL ENABLE);
  ALTER TABLE "MAIL_NOTIFICATIONS" MODIFY ("NOTIFICATION" NOT NULL ENABLE);
  ALTER TABLE "MAIL_NOTIFICATIONS" MODIFY ("FLAG_ACTIVATED" NOT NULL ENABLE);
  ALTER TABLE "MAIL_NOTIFICATIONS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MAIL_NOTIFICATIONS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AGENT_STATUS
--------------------------------------------------------

  ALTER TABLE "AGENT_STATUS" ADD CONSTRAINT "PK_AGENT_STATUS" PRIMARY KEY ("STATUS_CODE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_AGENT_STATUS" ON "AGENT_STATUS" ("STATUS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "AGENT_STATUS" MODIFY ("STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "AGENT_STATUS" MODIFY ("DESCR" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table QUARANTINE_ADDRESS
--------------------------------------------------------

  ALTER TABLE "QUARANTINE_ADDRESS" ADD CONSTRAINT "PK_QUARANTINE_ADDRESS" PRIMARY KEY ("ID_QUARANTINE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_QUARANTINE_ADDRESS" ON "QUARANTINE_ADDRESS" ("ID_QUARANTINE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "QUARANTINE_ADDRESS" MODIFY ("ID_QUARANTINE" NOT NULL ENABLE);
  ALTER TABLE "QUARANTINE_ADDRESS" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "QUARANTINE_ADDRESS" MODIFY ("IP_PREFIX" NOT NULL ENABLE);
  ALTER TABLE "QUARANTINE_ADDRESS" MODIFY ("NETMASK" NOT NULL ENABLE);
  ALTER TABLE "QUARANTINE_ADDRESS" MODIFY ("FLAG_NOT_EXPIRED" NOT NULL ENABLE);
  ALTER TABLE "QUARANTINE_ADDRESS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "QUARANTINE_ADDRESS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CPROF_FWPROF_NAV_MAP
--------------------------------------------------------

  ALTER TABLE "CPROF_FWPROF_NAV_MAP" ADD CONSTRAINT "PK_CPROF_FWPROF_NAV_MAP" PRIMARY KEY ("ID_CPROFILE", "ID_FW_PROFILE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CPROF_FWPROF_NAV_MAP" ON "CPROF_FWPROF_NAV_MAP" ("ID_CPROFILE", "ID_FW_PROFILE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CPROF_FWPROF_NAV_MAP" MODIFY ("ID_CPROFILE" NOT NULL ENABLE);
  ALTER TABLE "CPROF_FWPROF_NAV_MAP" MODIFY ("ID_FW_PROFILE" NOT NULL ENABLE);
  ALTER TABLE "CPROF_FWPROF_NAV_MAP" MODIFY ("NAVIGATION_CRITERIA" NOT NULL ENABLE);
  ALTER TABLE "CPROF_FWPROF_NAV_MAP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "CPROF_FWPROF_NAV_MAP" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MONITOR_THREAD
--------------------------------------------------------

  ALTER TABLE "MONITOR_THREAD" ADD CONSTRAINT "PK_MONITOR_THREAD" PRIMARY KEY ("THREAD_SERVICE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MONITOR_THREAD" ON "MONITOR_THREAD" ("THREAD_SERVICE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MONITOR_THREAD" MODIFY ("THREAD_SERVICE" NOT NULL ENABLE);
  ALTER TABLE "MONITOR_THREAD" MODIFY ("HOSTNAME" NOT NULL ENABLE);
  ALTER TABLE "MONITOR_THREAD" MODIFY ("THREAD_ACTIVE" NOT NULL ENABLE);
  ALTER TABLE "MONITOR_THREAD" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MONITOR_THREAD" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RADACCT_TIDS_HISTORY
--------------------------------------------------------

  ALTER TABLE "RADACCT_TIDS_HISTORY" ADD CONSTRAINT "PK_RADACCT_TIDS_HISTORY_NEW" PRIMARY KEY ("ID_RADACT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_RADACCT_TIDS_HISTORY_NEW" ON "RADACCT_TIDS_HISTORY" ("ID_RADACT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("ACCTSESSIONID" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("NASIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("STARTTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("STOPTIMENULL" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("FLAG_MISSING" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("CL_MOD_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("MONTH_ACCTSTARTTIME" NOT NULL ENABLE);
  ALTER TABLE "RADACCT_TIDS_HISTORY" MODIFY ("MOD_YEAR_ACCTSTARTTIME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLIENT_FUNCTIONS
--------------------------------------------------------

  ALTER TABLE "CLIENT_FUNCTIONS" ADD CONSTRAINT "PK_CL_FUNCT" PRIMARY KEY ("ID_CLIENT", "ID_FUNCTION")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CL_FUNCT" ON "CLIENT_FUNCTIONS" ("ID_CLIENT", "ID_FUNCTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CLIENT_FUNCTIONS" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_FUNCTIONS" MODIFY ("ID_FUNCTION" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_FUNCTIONS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TESTCRUD
--------------------------------------------------------

  ALTER TABLE "TESTCRUD" ADD CONSTRAINT "PK_TESTCRUD" PRIMARY KEY ("THREAD", "OPER", "PROGR")
  USING INDEX (CREATE UNIQUE INDEX "IDX_TESTCRUD" ON "TESTCRUD" ("THREAD", "OPER", "PROGR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
--------------------------------------------------------
--  Constraints for Table SUBLEVEL_POOL
--------------------------------------------------------

  ALTER TABLE "SUBLEVEL_POOL" ADD CONSTRAINT "UQ_SUBLEVEL_POOL" UNIQUE ("FRAMEDIPADDRESS")
  USING INDEX (CREATE UNIQUE INDEX "IDX_UQ_SUBLEVEL_POOL" ON "SUBLEVEL_POOL" ("FRAMEDIPADDRESS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "SUBLEVEL_POOL" ADD CONSTRAINT "PK_SUBLEVEL_POOL" PRIMARY KEY ("ID_GROUP", "FRAMEDIPADDRESS")
  USING INDEX (CREATE UNIQUE INDEX "IDX_SUBLEVEL_POOL" ON "SUBLEVEL_POOL" ("ID_GROUP", "FRAMEDIPADDRESS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "SUBLEVEL_POOL" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "SUBLEVEL_POOL" MODIFY ("FRAMEDIPADDRESS" NOT NULL ENABLE);
  ALTER TABLE "SUBLEVEL_POOL" MODIFY ("LOCKED" NOT NULL ENABLE);
  ALTER TABLE "SUBLEVEL_POOL" MODIFY ("FLAG_USED" NOT NULL ENABLE);
  ALTER TABLE "SUBLEVEL_POOL" MODIFY ("ID_GSUBNET" NOT NULL ENABLE);
  ALTER TABLE "SUBLEVEL_POOL" MODIFY ("CL_MOD_GROUP" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FIREWALL_RULES_DEV
--------------------------------------------------------

  ALTER TABLE "FIREWALL_RULES_DEV" ADD CONSTRAINT "PK_FIREWALL_RULES" PRIMARY KEY ("ID_RULE_PROFILE", "ID_RULE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FIREWALL_RULES" ON "FIREWALL_RULES_DEV" ("ID_RULE_PROFILE", "ID_RULE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("RULE_STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("INTERNAL" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("FLAG_NAT" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("FLAG_CAT" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("FLAG_ANTIVIRUS" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("FLAG_URL_FILTER" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("FLAG_IN_VERIFY" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("ID_RULE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("ID_RULE_PROFILE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("ID_ORDER" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("ID_DEVICE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("ID_FW_RULE" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" MODIFY ("SSL_INSPECTION" NOT NULL ENABLE);
  ALTER TABLE "FIREWALL_RULES_DEV" ADD CONSTRAINT "CHK_FLAG_URL" CHECK (FLAG_URL_FILTER IN (0, 1)) ENABLE;
  ALTER TABLE "FIREWALL_RULES_DEV" ADD CONSTRAINT "CHK_FLAG_AVR" CHECK (FLAG_ANTIVIRUS IN (0, 1)) ENABLE;
  ALTER TABLE "FIREWALL_RULES_DEV" ADD CONSTRAINT "CHK_FLAG_CAT" CHECK (FLAG_CAT IN (0, 1)) ENABLE;
  ALTER TABLE "FIREWALL_RULES_DEV" ADD CONSTRAINT "CHK_FLAG_NAT" CHECK (FLAG_NAT IN (0, 1)) ENABLE;
  ALTER TABLE "FIREWALL_RULES_DEV" ADD CONSTRAINT "CHK_FLAG_POL" CHECK (FLAG_POLICY IN (0, 1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table MASTER_DATA_CLIENTS
--------------------------------------------------------

  ALTER TABLE "MASTER_DATA_CLIENTS" ADD CONSTRAINT "PK_MASTER_DATA_CLIENTS" PRIMARY KEY ("ID_CLIENT")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MASTER_DATA_CLIENTS" ON "MASTER_DATA_CLIENTS" ("ID_CLIENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("CLIENT_NAME" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("FLAG_VALID" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("GRP_LIMIT" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("VPN_LIMIT" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("RULES_LIMIT" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("FLAG_MANUAL_LIMIT" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("FLAG_EXT_LIMITS" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MASTER_DATA_CLIENTS" MODIFY ("ID_APN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FW_RULES
--------------------------------------------------------

  ALTER TABLE "FW_RULES" ADD CONSTRAINT "PK_FW_RULES" PRIMARY KEY ("ID_FW_PROFILE", "ID_FW_RULE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FW_RULES" ON "FW_RULES" ("ID_FW_PROFILE", "ID_FW_RULE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FW_RULES" MODIFY ("ID_FW_PROFILE" NOT NULL ENABLE);
  ALTER TABLE "FW_RULES" MODIFY ("ID_FW_RULE" NOT NULL ENABLE);
  ALTER TABLE "FW_RULES" MODIFY ("RULE_STATUS_CODE" NOT NULL ENABLE);
  ALTER TABLE "FW_RULES" MODIFY ("INTERNAL" NOT NULL ENABLE);
  ALTER TABLE "FW_RULES" MODIFY ("ID_ORDER" NOT NULL ENABLE);
  ALTER TABLE "FW_RULES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "FW_RULES" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "FW_RULES" ADD CONSTRAINT "CHECK_DST_TYPE" CHECK ("DST_TYPE" IN ('MOBILE_ADDRESS' , 'CUSTOM_ADDRESS')) ENABLE;
  ALTER TABLE "FW_RULES" ADD CONSTRAINT "CHECK_SRC_TYPE" CHECK ("SRC_TYPE" IN ('MOBILE_ADDRESS' , 'CUSTOM_ADDRESS')) ENABLE;
  ALTER TABLE "FW_RULES" MODIFY ("SRC_TYPE" NOT NULL ENABLE);
  ALTER TABLE "FW_RULES" MODIFY ("DST_TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLIENT_FUNCTIONS_PARAMS
--------------------------------------------------------

  ALTER TABLE "CLIENT_FUNCTIONS_PARAMS" ADD CONSTRAINT "PK_CLIENT_FUNCTIONS_PARAMS" PRIMARY KEY ("ID_CLIENT", "ID_FUNCTION", "PARAM_KEY", "PARAM_VALUE")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CLIENT_FUNCTIONS_PARAMS" ON "CLIENT_FUNCTIONS_PARAMS" ("ID_CLIENT", "ID_FUNCTION", "PARAM_KEY", "PARAM_VALUE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CLIENT_FUNCTIONS_PARAMS" MODIFY ("ID_CLIENT" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_FUNCTIONS_PARAMS" MODIFY ("ID_FUNCTION" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_FUNCTIONS_PARAMS" MODIFY ("PARAM_KEY" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_FUNCTIONS_PARAMS" MODIFY ("PARAM_VALUE" NOT NULL ENABLE);
  ALTER TABLE "CLIENT_FUNCTIONS_PARAMS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FW_SERVICES
--------------------------------------------------------

  ALTER TABLE "FW_SERVICES" ADD CONSTRAINT "PK_FW_SERVICES" PRIMARY KEY ("NAME")
  USING INDEX (CREATE UNIQUE INDEX "IDX_FW_SERVICES" ON "FW_SERVICES" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "FW_SERVICES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "FW_SERVICES" MODIFY ("DETAIL" NOT NULL ENABLE);
  ALTER TABLE "FW_SERVICES" MODIFY ("PROTOCOLS" NOT NULL ENABLE);
  ALTER TABLE "FW_SERVICES" MODIFY ("PORTS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSISDN_THRESHOLD
--------------------------------------------------------

  ALTER TABLE "MSISDN_THRESHOLD" ADD CONSTRAINT "PK_MSISDN_THRESHOLD" PRIMARY KEY ("MSISDN", "ID_THD")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MSISDN_THRESHOLD" ON "MSISDN_THRESHOLD" ("MSISDN", "ID_THD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MSISDN_THRESHOLD" MODIFY ("MSISDN" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THRESHOLD" MODIFY ("ID_THD" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THRESHOLD" MODIFY ("TOT_TRAFFIC" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THRESHOLD" MODIFY ("TOT_TRAFFIC_RANK" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THRESHOLD" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THRESHOLD" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THRESHOLD" MODIFY ("FLAG_REACHED" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THRESHOLD" MODIFY ("FLAG_INFO_SENT" NOT NULL ENABLE);
  ALTER TABLE "MSISDN_THRESHOLD" MODIFY ("FLAG_REACH_SENT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ACCOUNT_NOTIFY_URL
--------------------------------------------------------

  ALTER TABLE "ACCOUNT_NOTIFY_URL" ADD CONSTRAINT "PK_ACCOUNT_NOTIFY_URL" PRIMARY KEY ("ID_ACCOUNT", "URL")
  USING INDEX (CREATE UNIQUE INDEX "IDX_ACCOUNT_NOTIFY_URL" ON "ACCOUNT_NOTIFY_URL" ("ID_ACCOUNT", "URL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "ACCOUNT_NOTIFY_URL" MODIFY ("ID_ACCOUNT" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_NOTIFY_URL" MODIFY ("URL" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_NOTIFY_URL" MODIFY ("ACTIVE" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_NOTIFY_URL" MODIFY ("PRIORITY" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_NOTIFY_URL" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_NOTIFY_URL" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "ACCOUNT_NOTIFY_URL" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONTRACTS
--------------------------------------------------------

  ALTER TABLE "CONTRACTS" ADD CONSTRAINT "PK_CONTRACTS" PRIMARY KEY ("ID_GROUP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_CONTRACTS" ON "CONTRACTS" ("ID_GROUP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CONTRACTS" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "CONTRACTS" MODIFY ("CONTRACT" NOT NULL ENABLE);
  ALTER TABLE "CONTRACTS" MODIFY ("MSISDN_CNT" NOT NULL ENABLE);
  ALTER TABLE "CONTRACTS" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "CONTRACTS" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LOG_M2M
--------------------------------------------------------

  ALTER TABLE "LOG_M2M" ADD CONSTRAINT "PK_LOG_M2M_NEW" PRIMARY KEY ("ID_LOG_M2M")
  USING INDEX (CREATE UNIQUE INDEX "IDX_LOG_M2M_NEW" ON "LOG_M2M" ("ID_LOG_M2M") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "LOG_M2M" MODIFY ("ID_LOG_M2M" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M" MODIFY ("CMD_CALL" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M" MODIFY ("MODULE" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M" MODIFY ("TYPE_LOG" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M" MODIFY ("MESSAGE" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M" MODIFY ("MONTH_LOG" NOT NULL ENABLE);
  ALTER TABLE "LOG_M2M" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CPROF_GRP_MAP
--------------------------------------------------------

  ALTER TABLE "CPROF_GRP_MAP" ADD CONSTRAINT "UQ_CPROF_GRP_MAP" UNIQUE ("ID_GROUP")
  USING INDEX (CREATE UNIQUE INDEX "IDX_UQ_CPROF_GRP_MAP" ON "CPROF_GRP_MAP" ("ID_GROUP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "CPROF_GRP_MAP" MODIFY ("ID_CPROFILE" NOT NULL ENABLE);
  ALTER TABLE "CPROF_GRP_MAP" MODIFY ("ID_GROUP" NOT NULL ENABLE);
  ALTER TABLE "CPROF_GRP_MAP" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "CPROF_GRP_MAP" ADD CONSTRAINT "PK_CPR_GRP_MAP" PRIMARY KEY ("ID_CPROFILE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MAIN_POOL_SERVICES
--------------------------------------------------------

  ALTER TABLE "MAIN_POOL_SERVICES" ADD CONSTRAINT "PK_MAIN_POOL_SERVICES" PRIMARY KEY ("ID_SUB", "ID_FUNCTION")
  USING INDEX (CREATE UNIQUE INDEX "IDX_MAIN_POOL_SERVICES" ON "MAIN_POOL_SERVICES" ("ID_SUB", "ID_FUNCTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_idx }}" )  ENABLE;
  ALTER TABLE "MAIN_POOL_SERVICES" MODIFY ("ID_SUB" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_SERVICES" MODIFY ("ID_FUNCTION" NOT NULL ENABLE);
  ALTER TABLE "MAIN_POOL_SERVICES" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MAP_OGRP_ONET
--------------------------------------------------------

  ALTER TABLE "MAP_OGRP_ONET" MODIFY ("ID_OBJ_GRP" NOT NULL ENABLE);
  ALTER TABLE "MAP_OGRP_ONET" MODIFY ("ID_OBJ_NET" NOT NULL ENABLE);
  ALTER TABLE "MAP_OGRP_ONET" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "MAP_OGRP_ONET" ADD CONSTRAINT "PK_MAP_OGRP_ONET" PRIMARY KEY ("ID_OBJ_GRP", "ID_OBJ_NET")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "{{ item.0.tablespace_data }}"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ACCOUNT_API_CREDENTIALS
--------------------------------------------------------

  ALTER TABLE "ACCOUNT_API_CREDENTIALS" ADD CONSTRAINT "FK_ACC_APICRED_M2M_PLATFACC" FOREIGN KEY ("ID_ACCOUNT")
	  REFERENCES "M2M_PLATFORM_ACCOUNTS" ("ID_ACCOUNT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ACCOUNT_NOTIFY_URL
--------------------------------------------------------

  ALTER TABLE "ACCOUNT_NOTIFY_URL" ADD CONSTRAINT "FK_ANU_MPA" FOREIGN KEY ("ID_ACCOUNT")
	  REFERENCES "M2M_PLATFORM_ACCOUNTS" ("ID_ACCOUNT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ACCOUNT_PARAMS
--------------------------------------------------------

  ALTER TABLE "ACCOUNT_PARAMS" ADD CONSTRAINT "FK_ACCPAR_M2MPA" FOREIGN KEY ("ID_ACCOUNT")
	  REFERENCES "M2M_PLATFORM_ACCOUNTS" ("ID_ACCOUNT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ACL_DEVICE
--------------------------------------------------------

  ALTER TABLE "ACL_DEVICE" ADD CONSTRAINT "FK_ACLD_SYSD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ACL_DEVICE_ROUTE
--------------------------------------------------------

  ALTER TABLE "ACL_DEVICE_ROUTE" ADD CONSTRAINT "FK_ACLDR_ACLD" FOREIGN KEY ("ID_ACL")
	  REFERENCES "ACL_DEVICE" ("ID_ACL") ENABLE;
  ALTER TABLE "ACL_DEVICE_ROUTE" ADD CONSTRAINT "FK_ACLDR_DR" FOREIGN KEY ("ID_DEV_ROUTE")
	  REFERENCES "DEVICE_ROUTES" ("ID_DEV_ROUTE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table AGENTS
--------------------------------------------------------

  ALTER TABLE "AGENTS" ADD CONSTRAINT "FK_AGENT_AGESTAT" FOREIGN KEY ("STATUS")
	  REFERENCES "AGENT_STATUS" ("STATUS_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APN_ACCOUNT_MAP
--------------------------------------------------------

  ALTER TABLE "APN_ACCOUNT_MAP" ADD CONSTRAINT "FK_APNACCMAP_APN" FOREIGN KEY ("ID_APN")
	  REFERENCES "APN" ("ID_APN") ENABLE;
  ALTER TABLE "APN_ACCOUNT_MAP" ADD CONSTRAINT "FK_APNACCMAP_M2MPLACC" FOREIGN KEY ("ID_ACCOUNT")
	  REFERENCES "M2M_PLATFORM_ACCOUNTS" ("ID_ACCOUNT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APN_PARAMS
--------------------------------------------------------

  ALTER TABLE "APN_PARAMS" ADD CONSTRAINT "FK_APNPAR_APN" FOREIGN KEY ("ID_APN")
	  REFERENCES "APN" ("ID_APN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table AREA_MAP
--------------------------------------------------------

  ALTER TABLE "AREA_MAP" ADD CONSTRAINT "FK_AREA_MAP_AREA_DESC" FOREIGN KEY ("ID_AREA")
	  REFERENCES "AREA_DESC" ("ID_AREA") ENABLE;
  ALTER TABLE "AREA_MAP" ADD CONSTRAINT "FK_AREA_MAP_MAP_LIST" FOREIGN KEY ("ID_MAP")
	  REFERENCES "MAP_LIST" ("ID_MAP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ATR_MONITORING
--------------------------------------------------------

  ALTER TABLE "ATR_MONITORING" ADD CONSTRAINT "FK_ARTMNT_MDS" FOREIGN KEY ("ID_GROUP")
	  REFERENCES "MASTER_DATA_RELATIONSHIPS" ("ID_GROUP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLIENT_ACCOUNT_MAP
--------------------------------------------------------

  ALTER TABLE "CLIENT_ACCOUNT_MAP" ADD CONSTRAINT "FK_CAM_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
  ALTER TABLE "CLIENT_ACCOUNT_MAP" ADD CONSTRAINT "FK_CAM_MPA" FOREIGN KEY ("ID_ACCOUNT")
	  REFERENCES "M2M_PLATFORM_ACCOUNTS" ("ID_ACCOUNT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLIENT_FUNCTIONS
--------------------------------------------------------

  ALTER TABLE "CLIENT_FUNCTIONS" ADD CONSTRAINT "FK_CLF_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
  ALTER TABLE "CLIENT_FUNCTIONS" ADD CONSTRAINT "FK_CLF_MDF" FOREIGN KEY ("ID_FUNCTION")
	  REFERENCES "MASTER_DATA_FUNCTIONS" ("ID_FUNCTION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLIENT_FUNCTIONS_PARAMS
--------------------------------------------------------

  ALTER TABLE "CLIENT_FUNCTIONS_PARAMS" ADD CONSTRAINT "FK_CLTFUNCT_PRM_MAST_DATAFUNCT" FOREIGN KEY ("ID_FUNCTION")
	  REFERENCES "MASTER_DATA_FUNCTIONS" ("ID_FUNCTION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLIENT_REPORT_PARAMS
--------------------------------------------------------

  ALTER TABLE "CLIENT_REPORT_PARAMS" ADD CONSTRAINT "FK_CRP_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
  ALTER TABLE "CLIENT_REPORT_PARAMS" ADD CONSTRAINT "FK_CRP_RH" FOREIGN KEY ("ID_REQUEST")
	  REFERENCES "REQUESTS_HISTORY" ("ID_REQUEST") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONSOLE_LOG
--------------------------------------------------------

  ALTER TABLE "CONSOLE_LOG" ADD CONSTRAINT "FK_PCSLOG_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONTRACTS
--------------------------------------------------------

  ALTER TABLE "CONTRACTS" ADD CONSTRAINT "FK_CONTRACTS_MDR" FOREIGN KEY ("ID_GROUP")
	  REFERENCES "MASTER_DATA_RELATIONSHIPS" ("ID_GROUP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CPROF_CRITERIA
--------------------------------------------------------

  ALTER TABLE "CPROF_CRITERIA" ADD CONSTRAINT "FK_CPC_RS" FOREIGN KEY ("STATUS")
	  REFERENCES "RULE_STATUS" ("RULE_STATUS_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CPROF_FWPROF_NAV_MAP
--------------------------------------------------------

  ALTER TABLE "CPROF_FWPROF_NAV_MAP" ADD CONSTRAINT "FK_CPFWPN_CP" FOREIGN KEY ("ID_CPROFILE")
	  REFERENCES "CLIENT_PROFILES" ("ID_CPROFILE") ENABLE;
  ALTER TABLE "CPROF_FWPROF_NAV_MAP" ADD CONSTRAINT "FK_CPFWPN_FWP" FOREIGN KEY ("ID_FW_PROFILE")
	  REFERENCES "FW_PROFILES" ("ID_FW_PROFILE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CPROF_GRP_MAP
--------------------------------------------------------

  ALTER TABLE "CPROF_GRP_MAP" ADD CONSTRAINT "FK_CPGM_CP" FOREIGN KEY ("ID_CPROFILE")
	  REFERENCES "CLIENT_PROFILES" ("ID_CPROFILE") ENABLE;
  ALTER TABLE "CPROF_GRP_MAP" ADD CONSTRAINT "FK_CPGM_MDR" FOREIGN KEY ("ID_GROUP")
	  REFERENCES "MASTER_DATA_RELATIONSHIPS" ("ID_GROUP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CRYPTO_MAP
--------------------------------------------------------

  ALTER TABLE "CRYPTO_MAP" ADD CONSTRAINT "FK_CM_SYMD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CRYPTO_POLICY_P2
--------------------------------------------------------

  ALTER TABLE "CRYPTO_POLICY_P2" ADD CONSTRAINT "FK_CM_CPP2" FOREIGN KEY ("ID_CM")
	  REFERENCES "CRYPTO_MAP" ("ID_CM") ENABLE;
  ALTER TABLE "CRYPTO_POLICY_P2" ADD CONSTRAINT "FK_CPP2_ACLD" FOREIGN KEY ("ID_ACL")
	  REFERENCES "ACL_DEVICE" ("ID_ACL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CRYPTO_POLICY_PEER
--------------------------------------------------------

  ALTER TABLE "CRYPTO_POLICY_PEER" ADD CONSTRAINT "FK_CPPR_CPP2" FOREIGN KEY ("ID_CPP")
	  REFERENCES "CRYPTO_POLICY_P2" ("ID_CPP") ENABLE;
  ALTER TABLE "CRYPTO_POLICY_PEER" ADD CONSTRAINT "FK_CPPR_DS" FOREIGN KEY ("ID_SUBNET")
	  REFERENCES "DEVICE_SUBNETS" ("ID_SUBNET") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEVICE_INTERFACES
--------------------------------------------------------

  ALTER TABLE "DEVICE_INTERFACES" ADD CONSTRAINT "FK_DI_DS" FOREIGN KEY ("ID_SUBNET")
	  REFERENCES "DEVICE_SUBNETS" ("ID_SUBNET") ENABLE;
  ALTER TABLE "DEVICE_INTERFACES" ADD CONSTRAINT "FK_DI_SYSD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EVENT_HISTORY
--------------------------------------------------------

  ALTER TABLE "EVENT_HISTORY" ADD CONSTRAINT "FK_EH_ET" FOREIGN KEY ("EVENT_TYPE")
	  REFERENCES "EVENT_TYPES" ("TYPE_CODE") ENABLE;
  ALTER TABLE "EVENT_HISTORY" ADD CONSTRAINT "FK_EH_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EVENT_HISTORY_STAGING
--------------------------------------------------------

  ALTER TABLE "EVENT_HISTORY_STAGING" ADD CONSTRAINT "FK_EHS_ET" FOREIGN KEY ("EVENT_TYPE")
	  REFERENCES "EVENT_TYPES" ("TYPE_CODE") ENABLE;
  ALTER TABLE "EVENT_HISTORY_STAGING" ADD CONSTRAINT "FK_EHS_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FIREWALL_CATEGORIES
--------------------------------------------------------

  ALTER TABLE "FIREWALL_CATEGORIES" ADD CONSTRAINT "FK_FW_CAT" FOREIGN KEY ("CAT_GROUP_ID")
	  REFERENCES "FIREWALL_CAT_GROUPS" ("CAT_GROUP_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FIREWALL_MANUAL
--------------------------------------------------------

  ALTER TABLE "FIREWALL_MANUAL" ADD CONSTRAINT "FK_FRMAN_MDS" FOREIGN KEY ("ID_GROUP")
	  REFERENCES "MASTER_DATA_RELATIONSHIPS" ("ID_GROUP") ENABLE;
  ALTER TABLE "FIREWALL_MANUAL" ADD CONSTRAINT "FK_FRMAN_RH" FOREIGN KEY ("ID_REQUEST")
	  REFERENCES "REQUESTS_HISTORY" ("ID_REQUEST") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FIREWALL_MAN_PARAMS
--------------------------------------------------------

  ALTER TABLE "FIREWALL_MAN_PARAMS" ADD CONSTRAINT "FK_FRMANPAR_FRMAN" FOREIGN KEY ("ID_FW_REQ")
	  REFERENCES "FIREWALL_MANUAL" ("ID_FW_REQ") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FIREWALL_REQUESTS
--------------------------------------------------------

  ALTER TABLE "FIREWALL_REQUESTS" ADD CONSTRAINT "FK_FRQ_AGENT" FOREIGN KEY ("ID_AGENT")
	  REFERENCES "AGENTS" ("ID_AGENT") ENABLE;
  ALTER TABLE "FIREWALL_REQUESTS" ADD CONSTRAINT "FK_FRQ_FRQSTAT" FOREIGN KEY ("STATUS")
	  REFERENCES "FIREWALL_REQ_STATUS" ("FW_STATUS_CODE") ENABLE;
  ALTER TABLE "FIREWALL_REQUESTS" ADD CONSTRAINT "FK_FRQ_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
  ALTER TABLE "FIREWALL_REQUESTS" ADD CONSTRAINT "FK_FRQ_RH" FOREIGN KEY ("ID_REQUEST")
	  REFERENCES "REQUESTS_HISTORY" ("ID_REQUEST") ENABLE;
  ALTER TABLE "FIREWALL_REQUESTS" ADD CONSTRAINT "FK_FRQ_RP" FOREIGN KEY ("ID_RULE_PROFILE")
	  REFERENCES "RULES_PROFILES" ("ID_RULE_PROFILE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FIREWALL_REQ_PARAMS
--------------------------------------------------------

  ALTER TABLE "FIREWALL_REQ_PARAMS" ADD CONSTRAINT "FK_FRQPAR_FRQ" FOREIGN KEY ("ID_FW_REQ")
	  REFERENCES "FIREWALL_REQUESTS" ("ID_FW_REQ") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FIREWALL_RULES_DEV
--------------------------------------------------------

  ALTER TABLE "FIREWALL_RULES_DEV" ADD CONSTRAINT "FK_FR_RULESTAT" FOREIGN KEY ("RULE_STATUS_CODE")
	  REFERENCES "RULE_STATUS" ("RULE_STATUS_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FUNCTIONS_SERVICES
--------------------------------------------------------

  ALTER TABLE "FUNCTIONS_SERVICES" ADD CONSTRAINT "FK_FS_MDS" FOREIGN KEY ("ID_SERVICE")
	  REFERENCES "MASTER_DATA_SERVICES" ("ID_SERVICE") DISABLE;
  ALTER TABLE "FUNCTIONS_SERVICES" ADD CONSTRAINT "FK_MDF_FS" FOREIGN KEY ("ID_FUNCTION")
	  REFERENCES "MASTER_DATA_FUNCTIONS" ("ID_FUNCTION") DISABLE;
--------------------------------------------------------
--  Ref Constraints for Table FWPROF_RPROF_MAP
--------------------------------------------------------

  ALTER TABLE "FWPROF_RPROF_MAP" ADD CONSTRAINT "FK_FWRM_FWP" FOREIGN KEY ("ID_FW_PROFILE")
	  REFERENCES "FW_PROFILES" ("ID_FW_PROFILE") ENABLE;
  ALTER TABLE "FWPROF_RPROF_MAP" ADD CONSTRAINT "FK_FWRM_RP" FOREIGN KEY ("ID_RULE_PROFILE")
	  REFERENCES "RULES_PROFILES" ("ID_RULE_PROFILE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FW_RULES
--------------------------------------------------------

  ALTER TABLE "FW_RULES" ADD CONSTRAINT "FK_FWR_FWP" FOREIGN KEY ("ID_FW_PROFILE")
	  REFERENCES "FW_PROFILES" ("ID_FW_PROFILE") ENABLE;
  ALTER TABLE "FW_RULES" ADD CONSTRAINT "FK_FWR_RS" FOREIGN KEY ("RULE_STATUS_CODE")
	  REFERENCES "RULE_STATUS" ("RULE_STATUS_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GGSN_NODE
--------------------------------------------------------

  ALTER TABLE "GGSN_NODE" ADD CONSTRAINT "FK_GGSN_NODE_APN" FOREIGN KEY ("ID_APN")
	  REFERENCES "APN" ("ID_APN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GROUP_POLICY
--------------------------------------------------------

  ALTER TABLE "GROUP_POLICY" ADD CONSTRAINT "FK_GP_ACLD" FOREIGN KEY ("ID_ACL_VPN_FILTER")
	  REFERENCES "ACL_DEVICE" ("ID_ACL") ENABLE;
  ALTER TABLE "GROUP_POLICY" ADD CONSTRAINT "FK_GP_SYSD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GROUP_POOL_SUBNET
--------------------------------------------------------

  ALTER TABLE "GROUP_POOL_SUBNET" ADD CONSTRAINT "FK_GPS_GGSN_NODE" FOREIGN KEY ("ID_GGSN")
	  REFERENCES "GGSN_NODE" ("ID_GGSN") ENABLE;
  ALTER TABLE "GROUP_POOL_SUBNET" ADD CONSTRAINT "FK_GPS_MDR" FOREIGN KEY ("ID_GROUP")
	  REFERENCES "MASTER_DATA_RELATIONSHIPS" ("ID_GROUP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GROUP_POOL_SUBNET_PRE
--------------------------------------------------------

  ALTER TABLE "GROUP_POOL_SUBNET_PRE" ADD CONSTRAINT "FK_GPSP_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
  ALTER TABLE "GROUP_POOL_SUBNET_PRE" ADD CONSTRAINT "FK_GPSP_MPSUB" FOREIGN KEY ("ID_SUB")
	  REFERENCES "MAIN_POOL_SUBNET" ("ID_SUB") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GRP_VPN_MAP
--------------------------------------------------------

  ALTER TABLE "GRP_VPN_MAP" ADD CONSTRAINT "FK_GRP_VPN_MAP_MAST_DT_VPN" FOREIGN KEY ("ID_VPN")
	  REFERENCES "MASTER_DATA_VPN" ("ID_VPN") ENABLE;
  ALTER TABLE "GRP_VPN_MAP" ADD CONSTRAINT "FK_GRP_VPN_MAP_MDRLSH" FOREIGN KEY ("ID_GROUP")
	  REFERENCES "MASTER_DATA_RELATIONSHIPS" ("ID_GROUP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HISTORY_ENTITY
--------------------------------------------------------

  ALTER TABLE "HISTORY_ENTITY" ADD CONSTRAINT "FK_HE_EH" FOREIGN KEY ("ID_EVENT")
	  REFERENCES "EVENT_HISTORY" ("ID_EVENT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HISTORY_ENTITY_STAGING
--------------------------------------------------------

  ALTER TABLE "HISTORY_ENTITY_STAGING" ADD CONSTRAINT "FK_HES_EHS" FOREIGN KEY ("ID_EVENT")
	  REFERENCES "EVENT_HISTORY_STAGING" ("ID_EVENT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table IPSEC_P1
--------------------------------------------------------

  ALTER TABLE "IPSEC_P1" ADD CONSTRAINT "FK_IPS_SD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LAST_CONNECTION
--------------------------------------------------------

  ALTER TABLE "LAST_CONNECTION" ADD CONSTRAINT "FK_LASTC_MDR" FOREIGN KEY ("LAST_ID_GROUP")
	  REFERENCES "MASTER_DATA_RELATIONSHIPS" ("ID_GROUP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MAIL_NOTIFICATIONS
--------------------------------------------------------

  ALTER TABLE "MAIL_NOTIFICATIONS" ADD CONSTRAINT "FK_MN_NOT" FOREIGN KEY ("NOTIFICATION")
	  REFERENCES "NOTIFICATIONS" ("NOTIFICATION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MAIN_POOL_HWM
--------------------------------------------------------

  ALTER TABLE "MAIN_POOL_HWM" ADD CONSTRAINT "FK_MPH_MPS" FOREIGN KEY ("ID_SUB")
	  REFERENCES "MAIN_POOL_SUBNET" ("ID_SUB") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MAIN_POOL_SERVICES
--------------------------------------------------------

  ALTER TABLE "MAIN_POOL_SERVICES" ADD CONSTRAINT "FK_MPSERV_MDF" FOREIGN KEY ("ID_FUNCTION")
	  REFERENCES "MASTER_DATA_FUNCTIONS" ("ID_FUNCTION") ENABLE;
  ALTER TABLE "MAIN_POOL_SERVICES" ADD CONSTRAINT "FK_MPSERV_MPS" FOREIGN KEY ("ID_SUB")
	  REFERENCES "MAIN_POOL_SUBNET" ("ID_SUB") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MAIN_POOL_SUBNET
--------------------------------------------------------

  ALTER TABLE "MAIN_POOL_SUBNET" ADD CONSTRAINT "FK_MPS_GGSN_NODE" FOREIGN KEY ("ID_GGSN")
	  REFERENCES "GGSN_NODE" ("ID_GGSN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MAP_FUNCTIONS_DEVICES
--------------------------------------------------------

  ALTER TABLE "MAP_FUNCTIONS_DEVICES" ADD CONSTRAINT "FK_FD_MDF" FOREIGN KEY ("ID_FUNCTION")
	  REFERENCES "MASTER_DATA_FUNCTIONS" ("ID_FUNCTION") ENABLE;
  ALTER TABLE "MAP_FUNCTIONS_DEVICES" ADD CONSTRAINT "FK_FD_SD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
  ALTER TABLE "MAP_FUNCTIONS_DEVICES" ADD CONSTRAINT "FK_MAP_FDEV_APN" FOREIGN KEY ("ID_APN")
	  REFERENCES "APN" ("ID_APN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MASTER_DATA_CLIENTS
--------------------------------------------------------

  ALTER TABLE "MASTER_DATA_CLIENTS" ADD CONSTRAINT "FK_MDC_APN" FOREIGN KEY ("ID_APN")
	  REFERENCES "APN" ("ID_APN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MASTER_DATA_FUNCTIONS
--------------------------------------------------------

  ALTER TABLE "MASTER_DATA_FUNCTIONS" ADD CONSTRAINT "FK_MDF_AG" FOREIGN KEY ("ID_AGENT")
	  REFERENCES "AGENTS" ("ID_AGENT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MASTER_DATA_RELATIONSHIPS
--------------------------------------------------------

  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" ADD CONSTRAINT "FK_MDR_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
  ALTER TABLE "MASTER_DATA_RELATIONSHIPS" ADD CONSTRAINT "FK_MDR_MDS" FOREIGN KEY ("ID_SERVICE")
	  REFERENCES "MASTER_DATA_SERVICES" ("ID_SERVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MASTER_DATA_VPN
--------------------------------------------------------

  ALTER TABLE "MASTER_DATA_VPN" ADD CONSTRAINT "FK_MDV_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
  ALTER TABLE "MASTER_DATA_VPN" ADD CONSTRAINT "FK_MDV_VPNS" FOREIGN KEY ("STATUS_CODE")
	  REFERENCES "VPN_STATUS" ("STATUS_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MCC_AREA
--------------------------------------------------------

  ALTER TABLE "MCC_AREA" ADD CONSTRAINT "FK_MCC_AREA_AREA_DESC" FOREIGN KEY ("ID_AREA")
	  REFERENCES "AREA_DESC" ("ID_AREA") ENABLE;
  ALTER TABLE "MCC_AREA" ADD CONSTRAINT "FK_MCC_AREA_MCC_LIST" FOREIGN KEY ("MCC")
	  REFERENCES "MCC_LIST" ("MCC") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MCC_RANKING
--------------------------------------------------------

  ALTER TABLE "MCC_RANKING" ADD CONSTRAINT "FK_MCC_RANKING_MAP_LIST" FOREIGN KEY ("ID_MAP")
	  REFERENCES "MAP_LIST" ("ID_MAP") ENABLE;
  ALTER TABLE "MCC_RANKING" ADD CONSTRAINT "FK_MCC_RANKING_MCC_LIST" FOREIGN KEY ("MCC")
	  REFERENCES "MCC_LIST" ("MCC") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MOBILE_SUBNET
--------------------------------------------------------

  ALTER TABLE "MOBILE_SUBNET" ADD CONSTRAINT "FK_MS_MSO" FOREIGN KEY ("OC1", "ID_GGSN")
	  REFERENCES "MOBILE_SUBNET_OC1" ("OC1", "ID_GGSN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSISDN_FIXEDIP
--------------------------------------------------------

  ALTER TABLE "MSISDN_FIXEDIP" ADD CONSTRAINT "FK_MSFI_GPS" FOREIGN KEY ("ID_GSUBNET")
	  REFERENCES "GROUP_POOL_SUBNET" ("ID_GSUBNET") ENABLE;
  ALTER TABLE "MSISDN_FIXEDIP" ADD CONSTRAINT "FK_MSFI_WL" FOREIGN KEY ("MSISDN")
	  REFERENCES "MSISDN_WHITELIST" ("MSISDN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSISDN_FIXEDIP_SHADOW
--------------------------------------------------------

  ALTER TABLE "MSISDN_FIXEDIP_SHADOW" ADD CONSTRAINT "FK_MSFISH_GPS" FOREIGN KEY ("ID_GSUBNET")
	  REFERENCES "GROUP_POOL_SUBNET" ("ID_GSUBNET") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSISDN_THR_MAP
--------------------------------------------------------

  ALTER TABLE "MSISDN_THR_MAP" ADD CONSTRAINT "FK_MTM_THR" FOREIGN KEY ("ID_THRESHOLD")
	  REFERENCES "THRESHOLD" ("ID_THRESHOLD") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NAS
--------------------------------------------------------

  ALTER TABLE "NAS" ADD CONSTRAINT "FK_NAS_GGSN_NODE" FOREIGN KEY ("ID_GGSN")
	  REFERENCES "GGSN_NODE" ("ID_GGSN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OBJECT_GROUP
--------------------------------------------------------

  ALTER TABLE "OBJECT_GROUP" ADD CONSTRAINT "FK_OG_SYSD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OBJECT_NETWORK
--------------------------------------------------------

  ALTER TABLE "OBJECT_NETWORK" ADD CONSTRAINT "FK_ON_SYSD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OBJ_PROPERTIES
--------------------------------------------------------

  ALTER TABLE "OBJ_PROPERTIES" ADD CONSTRAINT "FK_OP_OT" FOREIGN KEY ("TYPE")
	  REFERENCES "OBJECT_TYPES" ("TYPE") ENABLE;
  ALTER TABLE "OBJ_PROPERTIES" ADD CONSTRAINT "FK_OP_SD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PUBLIC_IP_CLIENT_LIST
--------------------------------------------------------

  ALTER TABLE "PUBLIC_IP_CLIENT_LIST" ADD CONSTRAINT "FK_PCL_PDP" FOREIGN KEY ("IP_ADDRESS")
	  REFERENCES "PUBLIC_IP_DETAIL_POOL" ("IP_ADDRESS") ENABLE;
  ALTER TABLE "PUBLIC_IP_CLIENT_LIST" ADD CONSTRAINT "FK_PDP_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PUBLIC_IP_DETAIL_POOL
--------------------------------------------------------

  ALTER TABLE "PUBLIC_IP_DETAIL_POOL" ADD CONSTRAINT "FK_PDP_VPS" FOREIGN KEY ("ID_PSUBNET")
	  REFERENCES "PUBLIC_IP_POOL_SUBNET" ("ID_PSUBNET") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RADACCT
--------------------------------------------------------

  ALTER TABLE "RADACCT" ADD CONSTRAINT "FK_RDCT_GGSN_NODE" FOREIGN KEY ("ID_GGSN")
	  REFERENCES "GGSN_NODE" ("ID_GGSN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RADACCT_ONLINE
--------------------------------------------------------

  ALTER TABLE "RADACCT_ONLINE" ADD CONSTRAINT "FK_RDCT_OLN_GGSN_NODE" FOREIGN KEY ("ID_GGSN")
	  REFERENCES "GGSN_NODE" ("ID_GGSN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RADACCT_TIDS
--------------------------------------------------------

  ALTER TABLE "RADACCT_TIDS" ADD CONSTRAINT "FK_RDCT_TIDS_GGSN_NODE" FOREIGN KEY ("ID_GGSN")
	  REFERENCES "GGSN_NODE" ("ID_GGSN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REQUESTS_HISTORY
--------------------------------------------------------

  ALTER TABLE "REQUESTS_HISTORY" ADD CONSTRAINT "FK_RH_AGENT" FOREIGN KEY ("ID_AGENT")
	  REFERENCES "AGENTS" ("ID_AGENT") ENABLE;
  ALTER TABLE "REQUESTS_HISTORY" ADD CONSTRAINT "FK_RH_RS" FOREIGN KEY ("REQUEST_STATUS_CODE")
	  REFERENCES "REQUEST_STATUS" ("REQUEST_STATUS_CODE") ENABLE;
  ALTER TABLE "REQUESTS_HISTORY" ADD CONSTRAINT "FK_RH_RT" FOREIGN KEY ("TYPE_CODE")
	  REFERENCES "REQUEST_TYPES" ("TYPE_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RULES_PROFILES
--------------------------------------------------------

  ALTER TABLE "RULES_PROFILES" ADD CONSTRAINT "FK_RP_FR" FOREIGN KEY ("ID_RULE_PROFILE", "ID_RULE_POLICY")
	  REFERENCES "FIREWALL_RULES_DEV" ("ID_RULE_PROFILE", "ID_RULE") ENABLE;
  ALTER TABLE "RULES_PROFILES" ADD CONSTRAINT "FK_RP_RPS" FOREIGN KEY ("STATUS")
	  REFERENCES "RULE_PROFILE_STATUS" ("RP_STATUS_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table STATIC_ROUTES
--------------------------------------------------------

  ALTER TABLE "STATIC_ROUTES" ADD CONSTRAINT "FK_DR_SR" FOREIGN KEY ("ID_DEV_ROUTE")
	  REFERENCES "DEVICE_ROUTES" ("ID_DEV_ROUTE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SUBLEVEL_POOL
--------------------------------------------------------

  ALTER TABLE "SUBLEVEL_POOL" ADD CONSTRAINT "FK_SP_MDR" FOREIGN KEY ("ID_GROUP")
	  REFERENCES "MASTER_DATA_RELATIONSHIPS" ("ID_GROUP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SYSTEM_DEVICES
--------------------------------------------------------

  ALTER TABLE "SYSTEM_DEVICES" ADD CONSTRAINT "FK_SD_SD" FOREIGN KEY ("CONN_MODE")
	  REFERENCES "DEVICES_CONN_MODES" ("CMODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TESTCRUD_2
--------------------------------------------------------

  ALTER TABLE "TESTCRUD_2" ADD CONSTRAINT "FK_TC2_TC1" FOREIGN KEY ("THREAD", "OPER", "PROGR")
	  REFERENCES "TESTCRUD" ("THREAD", "OPER", "PROGR") ENABLE;
  ALTER TABLE "TESTCRUD_2" ADD CONSTRAINT "FK_TC2_TC3" FOREIGN KEY ("THREAD3", "OPER3", "PROGR3")
	  REFERENCES "TESTCRUD_3" ("THREAD3", "OPER3", "PROGR3") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table THRESHOLD
--------------------------------------------------------

  ALTER TABLE "THRESHOLD" ADD CONSTRAINT "FK_MSISDN_THRESHOLD_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
  ALTER TABLE "THRESHOLD" ADD CONSTRAINT "FK_THRESHOLD_MAP_LIST" FOREIGN KEY ("ID_MAP")
	  REFERENCES "MAP_LIST" ("ID_MAP") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table THRESHOLD_DETAILS
--------------------------------------------------------

  ALTER TABLE "THRESHOLD_DETAILS" ADD CONSTRAINT "FK_THRESHDET_MCCAREA" FOREIGN KEY ("ID_AREA")
	  REFERENCES "AREA_DESC" ("ID_AREA") ENABLE;
  ALTER TABLE "THRESHOLD_DETAILS" ADD CONSTRAINT "FK_THRESHDET_PERIODLIST" FOREIGN KEY ("ID_PERIOD")
	  REFERENCES "PERIOD_LIST" ("ID_PERIOD") ENABLE;
  ALTER TABLE "THRESHOLD_DETAILS" ADD CONSTRAINT "FK_THRESH_DET_THRESHOLD" FOREIGN KEY ("ID_THRESHOLD")
	  REFERENCES "THRESHOLD" ("ID_THRESHOLD") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TRANSFORM_SET
--------------------------------------------------------

  ALTER TABLE "TRANSFORM_SET" ADD CONSTRAINT "FK_TS_SYMD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TSET_CRYPTO
--------------------------------------------------------

  ALTER TABLE "TSET_CRYPTO" ADD CONSTRAINT "FK_TSCRP_CPP2" FOREIGN KEY ("ID_CPP")
	  REFERENCES "CRYPTO_POLICY_P2" ("ID_CPP") ENABLE;
  ALTER TABLE "TSET_CRYPTO" ADD CONSTRAINT "FK_TSCRP_TS" FOREIGN KEY ("ID_TS")
	  REFERENCES "TRANSFORM_SET" ("ID_TS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TUNNEL_GROUP
--------------------------------------------------------

  ALTER TABLE "TUNNEL_GROUP" ADD CONSTRAINT "FK_TG_SYSD" FOREIGN KEY ("ID_DEVICE")
	  REFERENCES "SYSTEM_DEVICES" ("ID_DEVICE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USER_FUNCTIONS
--------------------------------------------------------

  ALTER TABLE "USER_FUNCTIONS" ADD CONSTRAINT "FK_USRF_AAC" FOREIGN KEY ("USERNAME")
	  REFERENCES "ACCOUNT_API_CREDENTIALS" ("USERNAME") ENABLE;
  ALTER TABLE "USER_FUNCTIONS" ADD CONSTRAINT "FK_USRF_MDF" FOREIGN KEY ("ID_FUNCTION")
	  REFERENCES "MASTER_DATA_FUNCTIONS" ("ID_FUNCTION") ENABLE;
  ALTER TABLE "USER_FUNCTIONS" ADD CONSTRAINT "FK_USRF_MPA" FOREIGN KEY ("ID_ACCOUNT")
	  REFERENCES "M2M_PLATFORM_ACCOUNTS" ("ID_ACCOUNT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USER_FUNCTIONS_PARAMS
--------------------------------------------------------

  ALTER TABLE "USER_FUNCTIONS_PARAMS" ADD CONSTRAINT "FK_UFP_AAC" FOREIGN KEY ("USERNAME")
	  REFERENCES "ACCOUNT_API_CREDENTIALS" ("USERNAME") ENABLE;
  ALTER TABLE "USER_FUNCTIONS_PARAMS" ADD CONSTRAINT "FK_UFP_MDF" FOREIGN KEY ("ID_FUNCTION")
	  REFERENCES "MASTER_DATA_FUNCTIONS" ("ID_FUNCTION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VPNHOST_SUBNET
--------------------------------------------------------

  ALTER TABLE "VPNHOST_SUBNET" ADD CONSTRAINT "FK_VS_VSO" FOREIGN KEY ("OC1", "ID_APN")
	  REFERENCES "VPNHOST_SUBNET_OC1" ("OC1", "ID_APN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VPN_ACCESS_PARAMS
--------------------------------------------------------

  ALTER TABLE "VPN_ACCESS_PARAMS" ADD CONSTRAINT "FK_VAP_MDV" FOREIGN KEY ("ID_VPN")
	  REFERENCES "MASTER_DATA_VPN" ("ID_VPN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VPN_CONF_PARAMS
--------------------------------------------------------

  ALTER TABLE "VPN_CONF_PARAMS" ADD CONSTRAINT "FK_VCP_MDV" FOREIGN KEY ("ID_VPN")
	  REFERENCES "MASTER_DATA_VPN" ("ID_VPN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VPN_DETAIL_POOL
--------------------------------------------------------

  ALTER TABLE "VPN_DETAIL_POOL" ADD CONSTRAINT "FK_VDP_MDV" FOREIGN KEY ("ID_VPN")
	  REFERENCES "MASTER_DATA_VPN" ("ID_VPN") ENABLE;
  ALTER TABLE "VPN_DETAIL_POOL" ADD CONSTRAINT "FK_VDP_VPS" FOREIGN KEY ("ID_VSUBNET")
	  REFERENCES "VPN_POOL_SUBNET" ("ID_VSUBNET") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VPN_POOL_SUBNET
--------------------------------------------------------

  ALTER TABLE "VPN_POOL_SUBNET" ADD CONSTRAINT "FK_VPS_MPSUB" FOREIGN KEY ("ID_SUB")
	  REFERENCES "MAIN_POOL_SUBNET" ("ID_SUB") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VPN_RADACCT
--------------------------------------------------------

  ALTER TABLE "VPN_RADACCT" ADD CONSTRAINT "FK_VPN_RAD_MDC" FOREIGN KEY ("ID_CLIENT")
	  REFERENCES "MASTER_DATA_CLIENTS" ("ID_CLIENT") ENABLE;
  ALTER TABLE "VPN_RADACCT" ADD CONSTRAINT "FK_VPN_RAD_MDV" FOREIGN KEY ("ID_VPN")
	  REFERENCES "MASTER_DATA_VPN" ("ID_VPN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VPN_TUN_GRP
--------------------------------------------------------

  ALTER TABLE "VPN_TUN_GRP" ADD CONSTRAINT "FK_VTG_MDV" FOREIGN KEY ("ID_VPN")
	  REFERENCES "MASTER_DATA_VPN" ("ID_VPN") ENABLE;
