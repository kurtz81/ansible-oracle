# how many days we want to keep backups on disk before RMAN deletes them
RECOVERY_DAYS=$ORA_RMAN_REC_DAYS

# enable/disable optimization of backup files
BACKUP_OPTIMIZATION=ON; 

# enable/disable automatic backup of spfile and controlfile
CONTROLFILE_AUTOBACKUP=ON

# string with the destination of the automatic backup of the spfile and controlfile
CONTROLFILE_AUTOBACKUP_FORMAT="{{ bck_rman_basedir_var }}/SPF/${ORACLE_SID}/%d-%F"

# Define parallelism degree by an integer (only usable on Enterprise Edition)
PARALLELISM=$ORA_RMAN_PARALLELISM

# and if the backupset is going to be compressed.
BACKUPSET_TYPE="${ORA_RMAN_COMPRES_PAR}"

# Set the compression program. (Why not to use bz2 for compression?  
COMPRESSION_ALGORITHM=$ORA_RMAN_COMPRES_ALG

# Set the destination of the snapshot control file to be kept on the backups. 
SNAPSHOT_CONTROLFILE="{{ bck_rman_basedir_var }}/SPF/${ORACLE_SID}/snapcf_${ORACLE_SID}_`date +"%Y-%m-%d-%H-%M-%S"`"
CURRENT_CONTROLFILE="{{ bck_rman_basedir_var }}/SPF/${ORACLE_SID}/currentcf_${ORACLE_SID}_`date +"%Y-%m-%d-%H-%M-%S"`"

BCK_DEST='{{ bck_rman_basedir_var }}/DB/${ORACLE_SID}/bck_%d_%T_%s_%p' 
INC0_DEST='{{ bck_rman_basedir_var }}/DB/${ORACLE_SID}/weekly_L0_%d_%T_%s_%p' 
INC1_DEST='{{ bck_rman_basedir_var }}/DB/${ORACLE_SID}/daily_L1_%d_%T_%s_%p' 
CUMUL_DEST='{{ bck_rman_basedir_var }}/DB/${ORACLE_SID}/daily_CM_%d_%T_%s_%p' 
ARCHIVELOGS_DEST='{{ bck_rman_basedir_var }}/ARCHLOG/${ORACLE_SID}/arch-bkp-%d-%s-%p-%e-%T' 

MAXPIECESIZE=$ORA_RMAN_MAX_PIECE_SIZE
FILESPERSET=$ORA_RMAN_FILE_PER_SET


FULL="
allocate channel d1 type disk FORMAT '$BCK_DEST' MAXPIECESIZE $MAXPIECESIZE;
allocate channel d2 type disk FORMAT '$BCK_DEST' MAXPIECESIZE $MAXPIECESIZE;
sql 'alter system archive log current';
backup check logical database plus archivelog delete input;
release channel d1;
release channel d2;"

INCREMENTAL0="
allocate channel d1 type disk FORMAT '$INC0_DEST' MAXPIECESIZE $MAXPIECESIZE;
allocate channel d2 type disk FORMAT '$INC0_DEST' MAXPIECESIZE $MAXPIECESIZE;
sql 'alter system archive log current';
 backup
  incremental level 0
  tag Weekly_Full_database
  filesperset $FILESPERSET
  format '$INC0_DEST'
  database archivelog all delete all input
  ; 
release channel d1;
release channel d2;"

INCREMENTAL1="
allocate channel d1 type disk FORMAT '$INC1_DEST' MAXPIECESIZE $MAXPIECESIZE;
allocate channel d2 type disk FORMAT '$INC1_DEST' MAXPIECESIZE $MAXPIECESIZE;
 
sql 'alter system archive log current'; 
 backup
  incremental level 1
  tag Daily_Differential_Backup
  filesperset $FILESPERSET
  format '$INC1_DEST'
  Database PLUS ARCHIVELOG
  ;
 release channel d1;
 release channel d2;"

CUMULATIVE="
allocate channel d1 type disk FORMAT '$CUMUL_DEST' MAXPIECESIZE $MAXPIECESIZE;
allocate channel d2 type disk FORMAT '$CUMUL_DEST' MAXPIECESIZE $MAXPIECESIZE;
 
sql 'alter system archive log current'; 
 backup
  incremental level 1
  cumulative
  tag Daily_Cumulative_Backup
  filesperset $FILESPERSET
  format '$CUMUL_DEST'
  Database PLUS ARCHIVELOG
  ;
 release channel d1;
 release channel d2;"

RESTORE_DB_CLAUSE="# The following command test all db backup
RESTORE VALIDATE CHECK LOGICAL DATABASE;"

MAINT_SCRIPT="crosscheck backup;
# The following command check all backups
crosscheck backup; 
# The following command check all archive logs
crosscheck archivelog all; 
# The following command delete obsolete backup
delete noprompt force obsolete; 
# The following command delete expired backup
delete noprompt expired backup; 
@#RESTORE_DB#@
# The following command test all archive logs
restore archivelog from time 'sysdate-$RECOVERY_DAYS' validate;
# The following command test controlfile
RESTORE CONTROLFILE CHECK LOGICAL VALIDATE;
# The following command verify which files need backup
report need backup;"

ARCHLOG_SCRIPT="backup check logical archivelog all format '$ARCHIVELOGS_DEST' delete all input;
# The following command perform a backup of controlfile
BACKUP CURRENT CONTROLFILE FORMAT '$CURRENT_CONTROLFILE';"


